State 0:
start' -> . start [ # ]
-- On PACKAGE shift to state 1
-- On start shift to state 4
-- On package_clause shift to state 5

State 1:
package_clause -> PACKAGE . IDENTIFIER SEMICOLON [ VAR TYPE IMPORT FUNC EOF ]
-- On IDENTIFIER shift to state 2

State 2:
package_clause -> PACKAGE IDENTIFIER . SEMICOLON [ VAR TYPE IMPORT FUNC EOF ]
-- On SEMICOLON shift to state 3

State 3:
package_clause -> PACKAGE IDENTIFIER SEMICOLON . [ VAR TYPE IMPORT FUNC EOF ]
-- On VAR reduce production package_clause -> PACKAGE IDENTIFIER SEMICOLON 
-- On TYPE reduce production package_clause -> PACKAGE IDENTIFIER SEMICOLON 
-- On IMPORT reduce production package_clause -> PACKAGE IDENTIFIER SEMICOLON 
-- On FUNC reduce production package_clause -> PACKAGE IDENTIFIER SEMICOLON 
-- On EOF reduce production package_clause -> PACKAGE IDENTIFIER SEMICOLON 

State 4:
start' -> start . [ # ]
-- On # accept start

State 5:
start -> package_clause . import_decls top_level_decls EOF [ # ]
-- On IMPORT shift to state 6
-- On import_decls shift to state 7
-- On VAR reduce production import_decls -> 
-- On TYPE reduce production import_decls -> 
-- On FUNC reduce production import_decls -> 
-- On EOF reduce production import_decls -> 

State 6:
import_decls -> IMPORT . [ VAR TYPE FUNC EOF ]
-- On VAR reduce production import_decls -> IMPORT 
-- On TYPE reduce production import_decls -> IMPORT 
-- On FUNC reduce production import_decls -> IMPORT 
-- On EOF reduce production import_decls -> IMPORT 

State 7:
start -> package_clause import_decls . top_level_decls EOF [ # ]
-- On top_level_decls shift to state 8
-- On VAR reduce production top_level_decls -> 
-- On TYPE reduce production top_level_decls -> 
-- On FUNC reduce production top_level_decls -> 
-- On EOF reduce production top_level_decls -> 

State 8:
start -> package_clause import_decls top_level_decls . EOF [ # ]
top_level_decls -> top_level_decls . type_decls [ VAR TYPE FUNC EOF ]
top_level_decls -> top_level_decls . var_decls [ VAR TYPE FUNC EOF ]
top_level_decls -> top_level_decls . func_decl [ VAR TYPE FUNC EOF ]
-- On VAR shift to state 9
-- On TYPE shift to state 159
-- On FUNC shift to state 173
-- On EOF shift to state 299
-- On var_decls shift to state 300
-- On type_decls shift to state 301
-- On func_decl shift to state 302

State 9:
var_decls -> VAR . var_spec [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
var_decls -> VAR . LPAR var_specs RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LPAR shift to state 10
-- On IDENTIFIER shift to state 11
-- On var_spec shift to state 158
-- On ident_list shift to state 16

State 10:
var_decls -> VAR LPAR . var_specs RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On IDENTIFIER shift to state 11
-- On var_specs shift to state 12
-- On var_spec shift to state 157
-- On ident_list shift to state 16

State 11:
ident_list -> IDENTIFIER . [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ASSIGN ]
-- On STRUCT reduce production ident_list -> IDENTIFIER 
-- On STRINGTYPE reduce production ident_list -> IDENTIFIER 
-- On RUNETYPE reduce production ident_list -> IDENTIFIER 
-- On MULT reduce production ident_list -> IDENTIFIER 
-- On MAP reduce production ident_list -> IDENTIFIER 
-- On LSQUARE reduce production ident_list -> IDENTIFIER 
-- On INTTYPE reduce production ident_list -> IDENTIFIER 
-- On INTERFACE reduce production ident_list -> IDENTIFIER 
-- On IDENTIFIER reduce production ident_list -> IDENTIFIER 
-- On FLOATTYPE reduce production ident_list -> IDENTIFIER 
-- On COMMA reduce production ident_list -> IDENTIFIER 
-- On CHAN reduce production ident_list -> IDENTIFIER 
-- On ASSIGN reduce production ident_list -> IDENTIFIER 

State 12:
var_decls -> VAR LPAR var_specs . RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
var_specs -> var_specs . var_spec [ RPAR IDENTIFIER ]
-- On RPAR shift to state 13
-- On IDENTIFIER shift to state 11
-- On var_spec shift to state 15
-- On ident_list shift to state 16

State 13:
var_decls -> VAR LPAR var_specs RPAR . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 14

State 14:
var_decls -> VAR LPAR var_specs RPAR SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On TYPE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On STRUCT reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On STRINGTYPE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On STRINGLITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On RUNETYPE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On RUNELITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On RETURN reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On RECEIVE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On RCURLY reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On PRINTLN reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On PRINT reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On PLUS reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On OCTINTLITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On MULT reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On MINUS reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On MAP reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On LSQUARE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On LPAR reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On LEN reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On LCURLY reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On INTTYPE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On INTERFACE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On IF reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On IDENTIFIER reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On HEXINTLITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On GOTO reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On GO reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On FUNC reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On FOR reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On FLOATTYPE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On FLOATLITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On FALLTHROUGH reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On EOF reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On DECINTLITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On CONTINUE reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On CHAN reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On CAP reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On BREAK reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On BOOLNOT reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On BINXOR reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On BININTLITERAL reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On BINAND reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 
-- On APPEND reduce production var_decls -> VAR LPAR var_specs RPAR SEMICOLON 

State 15:
var_specs -> var_specs var_spec . [ RPAR IDENTIFIER ]
-- On RPAR reduce production var_specs -> var_specs var_spec 
-- On IDENTIFIER reduce production var_specs -> var_specs var_spec 

State 16:
ident_list -> ident_list . COMMA IDENTIFIER [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ASSIGN ]
var_spec -> ident_list . typeT SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
var_spec -> ident_list . typeT ASSIGN exp_list SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
var_spec -> ident_list . ASSIGN exp_list SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On COMMA shift to state 145
-- On CHAN shift to state 35
-- On ASSIGN shift to state 149
-- On typeT shift to state 152

State 17:
typeT -> STRUCT . LCURLY field_decls RCURLY [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On LCURLY shift to state 18

State 18:
typeT -> STRUCT LCURLY . field_decls RCURLY [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On field_decls shift to state 19
-- On RCURLY reduce production field_decls -> 
-- On IDENTIFIER reduce production field_decls -> 

State 19:
field_decls -> field_decls . ident_list typeT SEMICOLON [ RCURLY IDENTIFIER ]
typeT -> STRUCT LCURLY field_decls . RCURLY [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On RCURLY shift to state 20
-- On IDENTIFIER shift to state 11
-- On ident_list shift to state 21

State 20:
typeT -> STRUCT LCURLY field_decls RCURLY . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> STRUCT LCURLY field_decls RCURLY 
-- On RSQUARE reduce production typeT -> STRUCT LCURLY field_decls RCURLY 
-- On RPAR reduce production typeT -> STRUCT LCURLY field_decls RCURLY 
-- On LPAR reduce production typeT -> STRUCT LCURLY field_decls RCURLY 
-- On LCURLY reduce production typeT -> STRUCT LCURLY field_decls RCURLY 
-- On COMMA reduce production typeT -> STRUCT LCURLY field_decls RCURLY 
-- On ASSIGN reduce production typeT -> STRUCT LCURLY field_decls RCURLY 

State 21:
field_decls -> field_decls ident_list . typeT SEMICOLON [ RCURLY IDENTIFIER ]
ident_list -> ident_list . COMMA IDENTIFIER [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On COMMA shift to state 145
-- On CHAN shift to state 35
-- On typeT shift to state 147

State 22:
typeT -> STRINGTYPE . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> STRINGTYPE 
-- On RSQUARE reduce production typeT -> STRINGTYPE 
-- On RPAR reduce production typeT -> STRINGTYPE 
-- On LPAR reduce production typeT -> STRINGTYPE 
-- On LCURLY reduce production typeT -> STRINGTYPE 
-- On COMMA reduce production typeT -> STRINGTYPE 
-- On ASSIGN reduce production typeT -> STRINGTYPE 

State 23:
typeT -> RUNETYPE . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> RUNETYPE 
-- On RSQUARE reduce production typeT -> RUNETYPE 
-- On RPAR reduce production typeT -> RUNETYPE 
-- On LPAR reduce production typeT -> RUNETYPE 
-- On LCURLY reduce production typeT -> RUNETYPE 
-- On COMMA reduce production typeT -> RUNETYPE 
-- On ASSIGN reduce production typeT -> RUNETYPE 

State 24:
typeT -> MULT . typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 144

State 25:
typeT -> MAP . RSQUARE typeT RSQUARE typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On RSQUARE shift to state 26

State 26:
typeT -> MAP RSQUARE . typeT RSQUARE typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 141

State 27:
typeT -> LSQUARE . exp RSQUARE typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
typeT -> LSQUARE . RSQUARE typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RSQUARE shift to state 30
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 138

State 28:
primary_exp -> STRINGLITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> STRINGLITERAL 
-- On SEMICOLON reduce production primary_exp -> STRINGLITERAL 
-- On RSQUARE reduce production primary_exp -> STRINGLITERAL 
-- On RSHIFTEQ reduce production primary_exp -> STRINGLITERAL 
-- On RSHIFT reduce production primary_exp -> STRINGLITERAL 
-- On RPAR reduce production primary_exp -> STRINGLITERAL 
-- On PLUSPLUS reduce production primary_exp -> STRINGLITERAL 
-- On PLUSEQ reduce production primary_exp -> STRINGLITERAL 
-- On PLUS reduce production primary_exp -> STRINGLITERAL 
-- On NEQ reduce production primary_exp -> STRINGLITERAL 
-- On MULTEQ reduce production primary_exp -> STRINGLITERAL 
-- On MULT reduce production primary_exp -> STRINGLITERAL 
-- On MODEQ reduce production primary_exp -> STRINGLITERAL 
-- On MOD reduce production primary_exp -> STRINGLITERAL 
-- On MINUSMINUS reduce production primary_exp -> STRINGLITERAL 
-- On MINUSEQ reduce production primary_exp -> STRINGLITERAL 
-- On MINUS reduce production primary_exp -> STRINGLITERAL 
-- On LT reduce production primary_exp -> STRINGLITERAL 
-- On LSQUARE reduce production primary_exp -> STRINGLITERAL 
-- On LSHIFTEQ reduce production primary_exp -> STRINGLITERAL 
-- On LSHIFT reduce production primary_exp -> STRINGLITERAL 
-- On LEQ reduce production primary_exp -> STRINGLITERAL 
-- On LCURLY reduce production primary_exp -> STRINGLITERAL 
-- On GT reduce production primary_exp -> STRINGLITERAL 
-- On GEQ reduce production primary_exp -> STRINGLITERAL 
-- On EQ reduce production primary_exp -> STRINGLITERAL 
-- On DOT reduce production primary_exp -> STRINGLITERAL 
-- On DIVEQ reduce production primary_exp -> STRINGLITERAL 
-- On DIV reduce production primary_exp -> STRINGLITERAL 
-- On COMMA reduce production primary_exp -> STRINGLITERAL 
-- On COLON reduce production primary_exp -> STRINGLITERAL 
-- On BOOLOR reduce production primary_exp -> STRINGLITERAL 
-- On BOOLAND reduce production primary_exp -> STRINGLITERAL 
-- On BINXOREQ reduce production primary_exp -> STRINGLITERAL 
-- On BINXOR reduce production primary_exp -> STRINGLITERAL 
-- On BINOREQ reduce production primary_exp -> STRINGLITERAL 
-- On BINOR reduce production primary_exp -> STRINGLITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> STRINGLITERAL 
-- On BINANDNOT reduce production primary_exp -> STRINGLITERAL 
-- On BINANDEQ reduce production primary_exp -> STRINGLITERAL 
-- On BINAND reduce production primary_exp -> STRINGLITERAL 
-- On ASSIGN reduce production primary_exp -> STRINGLITERAL 

State 29:
primary_exp -> RUNELITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> RUNELITERAL 
-- On SEMICOLON reduce production primary_exp -> RUNELITERAL 
-- On RSQUARE reduce production primary_exp -> RUNELITERAL 
-- On RSHIFTEQ reduce production primary_exp -> RUNELITERAL 
-- On RSHIFT reduce production primary_exp -> RUNELITERAL 
-- On RPAR reduce production primary_exp -> RUNELITERAL 
-- On PLUSPLUS reduce production primary_exp -> RUNELITERAL 
-- On PLUSEQ reduce production primary_exp -> RUNELITERAL 
-- On PLUS reduce production primary_exp -> RUNELITERAL 
-- On NEQ reduce production primary_exp -> RUNELITERAL 
-- On MULTEQ reduce production primary_exp -> RUNELITERAL 
-- On MULT reduce production primary_exp -> RUNELITERAL 
-- On MODEQ reduce production primary_exp -> RUNELITERAL 
-- On MOD reduce production primary_exp -> RUNELITERAL 
-- On MINUSMINUS reduce production primary_exp -> RUNELITERAL 
-- On MINUSEQ reduce production primary_exp -> RUNELITERAL 
-- On MINUS reduce production primary_exp -> RUNELITERAL 
-- On LT reduce production primary_exp -> RUNELITERAL 
-- On LSQUARE reduce production primary_exp -> RUNELITERAL 
-- On LSHIFTEQ reduce production primary_exp -> RUNELITERAL 
-- On LSHIFT reduce production primary_exp -> RUNELITERAL 
-- On LEQ reduce production primary_exp -> RUNELITERAL 
-- On LCURLY reduce production primary_exp -> RUNELITERAL 
-- On GT reduce production primary_exp -> RUNELITERAL 
-- On GEQ reduce production primary_exp -> RUNELITERAL 
-- On EQ reduce production primary_exp -> RUNELITERAL 
-- On DOT reduce production primary_exp -> RUNELITERAL 
-- On DIVEQ reduce production primary_exp -> RUNELITERAL 
-- On DIV reduce production primary_exp -> RUNELITERAL 
-- On COMMA reduce production primary_exp -> RUNELITERAL 
-- On COLON reduce production primary_exp -> RUNELITERAL 
-- On BOOLOR reduce production primary_exp -> RUNELITERAL 
-- On BOOLAND reduce production primary_exp -> RUNELITERAL 
-- On BINXOREQ reduce production primary_exp -> RUNELITERAL 
-- On BINXOR reduce production primary_exp -> RUNELITERAL 
-- On BINOREQ reduce production primary_exp -> RUNELITERAL 
-- On BINOR reduce production primary_exp -> RUNELITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> RUNELITERAL 
-- On BINANDNOT reduce production primary_exp -> RUNELITERAL 
-- On BINANDEQ reduce production primary_exp -> RUNELITERAL 
-- On BINAND reduce production primary_exp -> RUNELITERAL 
-- On ASSIGN reduce production primary_exp -> RUNELITERAL 

State 30:
typeT -> LSQUARE RSQUARE . typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 36

State 31:
typeT -> INTTYPE . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> INTTYPE 
-- On RSQUARE reduce production typeT -> INTTYPE 
-- On RPAR reduce production typeT -> INTTYPE 
-- On LPAR reduce production typeT -> INTTYPE 
-- On LCURLY reduce production typeT -> INTTYPE 
-- On COMMA reduce production typeT -> INTTYPE 
-- On ASSIGN reduce production typeT -> INTTYPE 

State 32:
typeT -> INTERFACE . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> INTERFACE 
-- On RSQUARE reduce production typeT -> INTERFACE 
-- On RPAR reduce production typeT -> INTERFACE 
-- On LPAR reduce production typeT -> INTERFACE 
-- On LCURLY reduce production typeT -> INTERFACE 
-- On COMMA reduce production typeT -> INTERFACE 
-- On ASSIGN reduce production typeT -> INTERFACE 

State 33:
typeT -> IDENTIFIER . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> IDENTIFIER 
-- On RSQUARE reduce production typeT -> IDENTIFIER 
-- On RPAR reduce production typeT -> IDENTIFIER 
-- On LPAR reduce production typeT -> IDENTIFIER 
-- On LCURLY reduce production typeT -> IDENTIFIER 
-- On COMMA reduce production typeT -> IDENTIFIER 
-- On ASSIGN reduce production typeT -> IDENTIFIER 

State 34:
typeT -> FLOATTYPE . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> FLOATTYPE 
-- On RSQUARE reduce production typeT -> FLOATTYPE 
-- On RPAR reduce production typeT -> FLOATTYPE 
-- On LPAR reduce production typeT -> FLOATTYPE 
-- On LCURLY reduce production typeT -> FLOATTYPE 
-- On COMMA reduce production typeT -> FLOATTYPE 
-- On ASSIGN reduce production typeT -> FLOATTYPE 

State 35:
typeT -> CHAN . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> CHAN 
-- On RSQUARE reduce production typeT -> CHAN 
-- On RPAR reduce production typeT -> CHAN 
-- On LPAR reduce production typeT -> CHAN 
-- On LCURLY reduce production typeT -> CHAN 
-- On COMMA reduce production typeT -> CHAN 
-- On ASSIGN reduce production typeT -> CHAN 

State 36:
typeT -> LSQUARE RSQUARE typeT . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> LSQUARE RSQUARE typeT 
-- On RSQUARE reduce production typeT -> LSQUARE RSQUARE typeT 
-- On RPAR reduce production typeT -> LSQUARE RSQUARE typeT 
-- On LPAR reduce production typeT -> LSQUARE RSQUARE typeT 
-- On LCURLY reduce production typeT -> LSQUARE RSQUARE typeT 
-- On COMMA reduce production typeT -> LSQUARE RSQUARE typeT 
-- On ASSIGN reduce production typeT -> LSQUARE RSQUARE typeT 

State 37:
exp -> RECEIVE . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 137

State 38:
exp -> PLUS . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 136

State 39:
primary_exp -> OCTINTLITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> OCTINTLITERAL 
-- On SEMICOLON reduce production primary_exp -> OCTINTLITERAL 
-- On RSQUARE reduce production primary_exp -> OCTINTLITERAL 
-- On RSHIFTEQ reduce production primary_exp -> OCTINTLITERAL 
-- On RSHIFT reduce production primary_exp -> OCTINTLITERAL 
-- On RPAR reduce production primary_exp -> OCTINTLITERAL 
-- On PLUSPLUS reduce production primary_exp -> OCTINTLITERAL 
-- On PLUSEQ reduce production primary_exp -> OCTINTLITERAL 
-- On PLUS reduce production primary_exp -> OCTINTLITERAL 
-- On NEQ reduce production primary_exp -> OCTINTLITERAL 
-- On MULTEQ reduce production primary_exp -> OCTINTLITERAL 
-- On MULT reduce production primary_exp -> OCTINTLITERAL 
-- On MODEQ reduce production primary_exp -> OCTINTLITERAL 
-- On MOD reduce production primary_exp -> OCTINTLITERAL 
-- On MINUSMINUS reduce production primary_exp -> OCTINTLITERAL 
-- On MINUSEQ reduce production primary_exp -> OCTINTLITERAL 
-- On MINUS reduce production primary_exp -> OCTINTLITERAL 
-- On LT reduce production primary_exp -> OCTINTLITERAL 
-- On LSQUARE reduce production primary_exp -> OCTINTLITERAL 
-- On LSHIFTEQ reduce production primary_exp -> OCTINTLITERAL 
-- On LSHIFT reduce production primary_exp -> OCTINTLITERAL 
-- On LEQ reduce production primary_exp -> OCTINTLITERAL 
-- On LCURLY reduce production primary_exp -> OCTINTLITERAL 
-- On GT reduce production primary_exp -> OCTINTLITERAL 
-- On GEQ reduce production primary_exp -> OCTINTLITERAL 
-- On EQ reduce production primary_exp -> OCTINTLITERAL 
-- On DOT reduce production primary_exp -> OCTINTLITERAL 
-- On DIVEQ reduce production primary_exp -> OCTINTLITERAL 
-- On DIV reduce production primary_exp -> OCTINTLITERAL 
-- On COMMA reduce production primary_exp -> OCTINTLITERAL 
-- On COLON reduce production primary_exp -> OCTINTLITERAL 
-- On BOOLOR reduce production primary_exp -> OCTINTLITERAL 
-- On BOOLAND reduce production primary_exp -> OCTINTLITERAL 
-- On BINXOREQ reduce production primary_exp -> OCTINTLITERAL 
-- On BINXOR reduce production primary_exp -> OCTINTLITERAL 
-- On BINOREQ reduce production primary_exp -> OCTINTLITERAL 
-- On BINOR reduce production primary_exp -> OCTINTLITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> OCTINTLITERAL 
-- On BINANDNOT reduce production primary_exp -> OCTINTLITERAL 
-- On BINANDEQ reduce production primary_exp -> OCTINTLITERAL 
-- On BINAND reduce production primary_exp -> OCTINTLITERAL 
-- On ASSIGN reduce production primary_exp -> OCTINTLITERAL 

State 40:
exp -> MULT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
typeT -> MULT . typeT [ LPAR ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 134
-- On primary_exp shift to state 59
-- On exp shift to state 135

State 41:
exp -> MINUS . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 133

State 42:
exp -> LPAR . exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 131

State 43:
primary_exp -> LEN . LPAR primary_exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LPAR shift to state 44

State 44:
primary_exp -> LEN LPAR . primary_exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BININTLITERAL shift to state 51
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 129

State 45:
primary_exp -> IDENTIFIER . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
typeT -> IDENTIFIER . [ LPAR ]
-- On SHORTASSIGN reduce production primary_exp -> IDENTIFIER 
-- On SEMICOLON reduce production primary_exp -> IDENTIFIER 
-- On RSQUARE reduce production primary_exp -> IDENTIFIER 
-- On RSHIFTEQ reduce production primary_exp -> IDENTIFIER 
-- On RSHIFT reduce production primary_exp -> IDENTIFIER 
-- On RPAR reduce production primary_exp -> IDENTIFIER 
-- On PLUSPLUS reduce production primary_exp -> IDENTIFIER 
-- On PLUSEQ reduce production primary_exp -> IDENTIFIER 
-- On PLUS reduce production primary_exp -> IDENTIFIER 
-- On NEQ reduce production primary_exp -> IDENTIFIER 
-- On MULTEQ reduce production primary_exp -> IDENTIFIER 
-- On MULT reduce production primary_exp -> IDENTIFIER 
-- On MODEQ reduce production primary_exp -> IDENTIFIER 
-- On MOD reduce production primary_exp -> IDENTIFIER 
-- On MINUSMINUS reduce production primary_exp -> IDENTIFIER 
-- On MINUSEQ reduce production primary_exp -> IDENTIFIER 
-- On MINUS reduce production primary_exp -> IDENTIFIER 
-- On LT reduce production primary_exp -> IDENTIFIER 
-- On LSQUARE reduce production primary_exp -> IDENTIFIER 
-- On LSHIFTEQ reduce production primary_exp -> IDENTIFIER 
-- On LSHIFT reduce production primary_exp -> IDENTIFIER 
-- On LPAR reduce production typeT -> IDENTIFIER 
-- On LEQ reduce production primary_exp -> IDENTIFIER 
-- On LCURLY reduce production primary_exp -> IDENTIFIER 
-- On GT reduce production primary_exp -> IDENTIFIER 
-- On GEQ reduce production primary_exp -> IDENTIFIER 
-- On EQ reduce production primary_exp -> IDENTIFIER 
-- On DOT reduce production primary_exp -> IDENTIFIER 
-- On DIVEQ reduce production primary_exp -> IDENTIFIER 
-- On DIV reduce production primary_exp -> IDENTIFIER 
-- On COMMA reduce production primary_exp -> IDENTIFIER 
-- On COLON reduce production primary_exp -> IDENTIFIER 
-- On BOOLOR reduce production primary_exp -> IDENTIFIER 
-- On BOOLAND reduce production primary_exp -> IDENTIFIER 
-- On BINXOREQ reduce production primary_exp -> IDENTIFIER 
-- On BINXOR reduce production primary_exp -> IDENTIFIER 
-- On BINOREQ reduce production primary_exp -> IDENTIFIER 
-- On BINOR reduce production primary_exp -> IDENTIFIER 
-- On BINANDNOTEQ reduce production primary_exp -> IDENTIFIER 
-- On BINANDNOT reduce production primary_exp -> IDENTIFIER 
-- On BINANDEQ reduce production primary_exp -> IDENTIFIER 
-- On BINAND reduce production primary_exp -> IDENTIFIER 
-- On ASSIGN reduce production primary_exp -> IDENTIFIER 

State 46:
primary_exp -> HEXINTLITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> HEXINTLITERAL 
-- On SEMICOLON reduce production primary_exp -> HEXINTLITERAL 
-- On RSQUARE reduce production primary_exp -> HEXINTLITERAL 
-- On RSHIFTEQ reduce production primary_exp -> HEXINTLITERAL 
-- On RSHIFT reduce production primary_exp -> HEXINTLITERAL 
-- On RPAR reduce production primary_exp -> HEXINTLITERAL 
-- On PLUSPLUS reduce production primary_exp -> HEXINTLITERAL 
-- On PLUSEQ reduce production primary_exp -> HEXINTLITERAL 
-- On PLUS reduce production primary_exp -> HEXINTLITERAL 
-- On NEQ reduce production primary_exp -> HEXINTLITERAL 
-- On MULTEQ reduce production primary_exp -> HEXINTLITERAL 
-- On MULT reduce production primary_exp -> HEXINTLITERAL 
-- On MODEQ reduce production primary_exp -> HEXINTLITERAL 
-- On MOD reduce production primary_exp -> HEXINTLITERAL 
-- On MINUSMINUS reduce production primary_exp -> HEXINTLITERAL 
-- On MINUSEQ reduce production primary_exp -> HEXINTLITERAL 
-- On MINUS reduce production primary_exp -> HEXINTLITERAL 
-- On LT reduce production primary_exp -> HEXINTLITERAL 
-- On LSQUARE reduce production primary_exp -> HEXINTLITERAL 
-- On LSHIFTEQ reduce production primary_exp -> HEXINTLITERAL 
-- On LSHIFT reduce production primary_exp -> HEXINTLITERAL 
-- On LEQ reduce production primary_exp -> HEXINTLITERAL 
-- On LCURLY reduce production primary_exp -> HEXINTLITERAL 
-- On GT reduce production primary_exp -> HEXINTLITERAL 
-- On GEQ reduce production primary_exp -> HEXINTLITERAL 
-- On EQ reduce production primary_exp -> HEXINTLITERAL 
-- On DOT reduce production primary_exp -> HEXINTLITERAL 
-- On DIVEQ reduce production primary_exp -> HEXINTLITERAL 
-- On DIV reduce production primary_exp -> HEXINTLITERAL 
-- On COMMA reduce production primary_exp -> HEXINTLITERAL 
-- On COLON reduce production primary_exp -> HEXINTLITERAL 
-- On BOOLOR reduce production primary_exp -> HEXINTLITERAL 
-- On BOOLAND reduce production primary_exp -> HEXINTLITERAL 
-- On BINXOREQ reduce production primary_exp -> HEXINTLITERAL 
-- On BINXOR reduce production primary_exp -> HEXINTLITERAL 
-- On BINOREQ reduce production primary_exp -> HEXINTLITERAL 
-- On BINOR reduce production primary_exp -> HEXINTLITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> HEXINTLITERAL 
-- On BINANDNOT reduce production primary_exp -> HEXINTLITERAL 
-- On BINANDEQ reduce production primary_exp -> HEXINTLITERAL 
-- On BINAND reduce production primary_exp -> HEXINTLITERAL 
-- On ASSIGN reduce production primary_exp -> HEXINTLITERAL 

State 47:
primary_exp -> FLOATLITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> FLOATLITERAL 
-- On SEMICOLON reduce production primary_exp -> FLOATLITERAL 
-- On RSQUARE reduce production primary_exp -> FLOATLITERAL 
-- On RSHIFTEQ reduce production primary_exp -> FLOATLITERAL 
-- On RSHIFT reduce production primary_exp -> FLOATLITERAL 
-- On RPAR reduce production primary_exp -> FLOATLITERAL 
-- On PLUSPLUS reduce production primary_exp -> FLOATLITERAL 
-- On PLUSEQ reduce production primary_exp -> FLOATLITERAL 
-- On PLUS reduce production primary_exp -> FLOATLITERAL 
-- On NEQ reduce production primary_exp -> FLOATLITERAL 
-- On MULTEQ reduce production primary_exp -> FLOATLITERAL 
-- On MULT reduce production primary_exp -> FLOATLITERAL 
-- On MODEQ reduce production primary_exp -> FLOATLITERAL 
-- On MOD reduce production primary_exp -> FLOATLITERAL 
-- On MINUSMINUS reduce production primary_exp -> FLOATLITERAL 
-- On MINUSEQ reduce production primary_exp -> FLOATLITERAL 
-- On MINUS reduce production primary_exp -> FLOATLITERAL 
-- On LT reduce production primary_exp -> FLOATLITERAL 
-- On LSQUARE reduce production primary_exp -> FLOATLITERAL 
-- On LSHIFTEQ reduce production primary_exp -> FLOATLITERAL 
-- On LSHIFT reduce production primary_exp -> FLOATLITERAL 
-- On LEQ reduce production primary_exp -> FLOATLITERAL 
-- On LCURLY reduce production primary_exp -> FLOATLITERAL 
-- On GT reduce production primary_exp -> FLOATLITERAL 
-- On GEQ reduce production primary_exp -> FLOATLITERAL 
-- On EQ reduce production primary_exp -> FLOATLITERAL 
-- On DOT reduce production primary_exp -> FLOATLITERAL 
-- On DIVEQ reduce production primary_exp -> FLOATLITERAL 
-- On DIV reduce production primary_exp -> FLOATLITERAL 
-- On COMMA reduce production primary_exp -> FLOATLITERAL 
-- On COLON reduce production primary_exp -> FLOATLITERAL 
-- On BOOLOR reduce production primary_exp -> FLOATLITERAL 
-- On BOOLAND reduce production primary_exp -> FLOATLITERAL 
-- On BINXOREQ reduce production primary_exp -> FLOATLITERAL 
-- On BINXOR reduce production primary_exp -> FLOATLITERAL 
-- On BINOREQ reduce production primary_exp -> FLOATLITERAL 
-- On BINOR reduce production primary_exp -> FLOATLITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> FLOATLITERAL 
-- On BINANDNOT reduce production primary_exp -> FLOATLITERAL 
-- On BINANDEQ reduce production primary_exp -> FLOATLITERAL 
-- On BINAND reduce production primary_exp -> FLOATLITERAL 
-- On ASSIGN reduce production primary_exp -> FLOATLITERAL 

State 48:
primary_exp -> DECINTLITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> DECINTLITERAL 
-- On SEMICOLON reduce production primary_exp -> DECINTLITERAL 
-- On RSQUARE reduce production primary_exp -> DECINTLITERAL 
-- On RSHIFTEQ reduce production primary_exp -> DECINTLITERAL 
-- On RSHIFT reduce production primary_exp -> DECINTLITERAL 
-- On RPAR reduce production primary_exp -> DECINTLITERAL 
-- On PLUSPLUS reduce production primary_exp -> DECINTLITERAL 
-- On PLUSEQ reduce production primary_exp -> DECINTLITERAL 
-- On PLUS reduce production primary_exp -> DECINTLITERAL 
-- On NEQ reduce production primary_exp -> DECINTLITERAL 
-- On MULTEQ reduce production primary_exp -> DECINTLITERAL 
-- On MULT reduce production primary_exp -> DECINTLITERAL 
-- On MODEQ reduce production primary_exp -> DECINTLITERAL 
-- On MOD reduce production primary_exp -> DECINTLITERAL 
-- On MINUSMINUS reduce production primary_exp -> DECINTLITERAL 
-- On MINUSEQ reduce production primary_exp -> DECINTLITERAL 
-- On MINUS reduce production primary_exp -> DECINTLITERAL 
-- On LT reduce production primary_exp -> DECINTLITERAL 
-- On LSQUARE reduce production primary_exp -> DECINTLITERAL 
-- On LSHIFTEQ reduce production primary_exp -> DECINTLITERAL 
-- On LSHIFT reduce production primary_exp -> DECINTLITERAL 
-- On LEQ reduce production primary_exp -> DECINTLITERAL 
-- On LCURLY reduce production primary_exp -> DECINTLITERAL 
-- On GT reduce production primary_exp -> DECINTLITERAL 
-- On GEQ reduce production primary_exp -> DECINTLITERAL 
-- On EQ reduce production primary_exp -> DECINTLITERAL 
-- On DOT reduce production primary_exp -> DECINTLITERAL 
-- On DIVEQ reduce production primary_exp -> DECINTLITERAL 
-- On DIV reduce production primary_exp -> DECINTLITERAL 
-- On COMMA reduce production primary_exp -> DECINTLITERAL 
-- On COLON reduce production primary_exp -> DECINTLITERAL 
-- On BOOLOR reduce production primary_exp -> DECINTLITERAL 
-- On BOOLAND reduce production primary_exp -> DECINTLITERAL 
-- On BINXOREQ reduce production primary_exp -> DECINTLITERAL 
-- On BINXOR reduce production primary_exp -> DECINTLITERAL 
-- On BINOREQ reduce production primary_exp -> DECINTLITERAL 
-- On BINOR reduce production primary_exp -> DECINTLITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> DECINTLITERAL 
-- On BINANDNOT reduce production primary_exp -> DECINTLITERAL 
-- On BINANDEQ reduce production primary_exp -> DECINTLITERAL 
-- On BINAND reduce production primary_exp -> DECINTLITERAL 
-- On ASSIGN reduce production primary_exp -> DECINTLITERAL 

State 49:
primary_exp -> CAP . LPAR primary_exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LPAR shift to state 50

State 50:
primary_exp -> CAP LPAR . primary_exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BININTLITERAL shift to state 51
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 127

State 51:
primary_exp -> BININTLITERAL . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> BININTLITERAL 
-- On SEMICOLON reduce production primary_exp -> BININTLITERAL 
-- On RSQUARE reduce production primary_exp -> BININTLITERAL 
-- On RSHIFTEQ reduce production primary_exp -> BININTLITERAL 
-- On RSHIFT reduce production primary_exp -> BININTLITERAL 
-- On RPAR reduce production primary_exp -> BININTLITERAL 
-- On PLUSPLUS reduce production primary_exp -> BININTLITERAL 
-- On PLUSEQ reduce production primary_exp -> BININTLITERAL 
-- On PLUS reduce production primary_exp -> BININTLITERAL 
-- On NEQ reduce production primary_exp -> BININTLITERAL 
-- On MULTEQ reduce production primary_exp -> BININTLITERAL 
-- On MULT reduce production primary_exp -> BININTLITERAL 
-- On MODEQ reduce production primary_exp -> BININTLITERAL 
-- On MOD reduce production primary_exp -> BININTLITERAL 
-- On MINUSMINUS reduce production primary_exp -> BININTLITERAL 
-- On MINUSEQ reduce production primary_exp -> BININTLITERAL 
-- On MINUS reduce production primary_exp -> BININTLITERAL 
-- On LT reduce production primary_exp -> BININTLITERAL 
-- On LSQUARE reduce production primary_exp -> BININTLITERAL 
-- On LSHIFTEQ reduce production primary_exp -> BININTLITERAL 
-- On LSHIFT reduce production primary_exp -> BININTLITERAL 
-- On LEQ reduce production primary_exp -> BININTLITERAL 
-- On LCURLY reduce production primary_exp -> BININTLITERAL 
-- On GT reduce production primary_exp -> BININTLITERAL 
-- On GEQ reduce production primary_exp -> BININTLITERAL 
-- On EQ reduce production primary_exp -> BININTLITERAL 
-- On DOT reduce production primary_exp -> BININTLITERAL 
-- On DIVEQ reduce production primary_exp -> BININTLITERAL 
-- On DIV reduce production primary_exp -> BININTLITERAL 
-- On COMMA reduce production primary_exp -> BININTLITERAL 
-- On COLON reduce production primary_exp -> BININTLITERAL 
-- On BOOLOR reduce production primary_exp -> BININTLITERAL 
-- On BOOLAND reduce production primary_exp -> BININTLITERAL 
-- On BINXOREQ reduce production primary_exp -> BININTLITERAL 
-- On BINXOR reduce production primary_exp -> BININTLITERAL 
-- On BINOREQ reduce production primary_exp -> BININTLITERAL 
-- On BINOR reduce production primary_exp -> BININTLITERAL 
-- On BINANDNOTEQ reduce production primary_exp -> BININTLITERAL 
-- On BINANDNOT reduce production primary_exp -> BININTLITERAL 
-- On BINANDEQ reduce production primary_exp -> BININTLITERAL 
-- On BINAND reduce production primary_exp -> BININTLITERAL 
-- On ASSIGN reduce production primary_exp -> BININTLITERAL 

State 52:
primary_exp -> APPEND . LPAR primary_exp COMMA exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LPAR shift to state 53

State 53:
primary_exp -> APPEND LPAR . primary_exp COMMA exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BININTLITERAL shift to state 51
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 123

State 54:
primary_exp -> typeT . LPAR option(exp_list) RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LPAR shift to state 55

State 55:
primary_exp -> typeT LPAR . option(exp_list) RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On option(exp_list) shift to state 117
-- On exp_list shift to state 119
-- On exp shift to state 122
-- On RPAR reduce production option(exp_list) -> 

State 56:
exp -> BOOLNOT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 116

State 57:
exp -> BINXOR . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 115

State 58:
exp -> BINAND . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 114

State 59:
exp -> primary_exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp . DOT IDENTIFIER [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp . LSQUARE exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp . DOT LPAR typeT RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON option(exp) RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON exp COLON exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LSQUARE shift to state 60
-- On DOT shift to state 109
-- On SHORTASSIGN reduce production exp -> primary_exp 
-- On SEMICOLON reduce production exp -> primary_exp 
-- On RSQUARE reduce production exp -> primary_exp 
-- On RSHIFTEQ reduce production exp -> primary_exp 
-- On RSHIFT reduce production exp -> primary_exp 
-- On RPAR reduce production exp -> primary_exp 
-- On PLUSPLUS reduce production exp -> primary_exp 
-- On PLUSEQ reduce production exp -> primary_exp 
-- On PLUS reduce production exp -> primary_exp 
-- On NEQ reduce production exp -> primary_exp 
-- On MULTEQ reduce production exp -> primary_exp 
-- On MULT reduce production exp -> primary_exp 
-- On MODEQ reduce production exp -> primary_exp 
-- On MOD reduce production exp -> primary_exp 
-- On MINUSMINUS reduce production exp -> primary_exp 
-- On MINUSEQ reduce production exp -> primary_exp 
-- On MINUS reduce production exp -> primary_exp 
-- On LT reduce production exp -> primary_exp 
-- On LSHIFTEQ reduce production exp -> primary_exp 
-- On LSHIFT reduce production exp -> primary_exp 
-- On LEQ reduce production exp -> primary_exp 
-- On LCURLY reduce production exp -> primary_exp 
-- On GT reduce production exp -> primary_exp 
-- On GEQ reduce production exp -> primary_exp 
-- On EQ reduce production exp -> primary_exp 
-- On DIVEQ reduce production exp -> primary_exp 
-- On DIV reduce production exp -> primary_exp 
-- On COMMA reduce production exp -> primary_exp 
-- On COLON reduce production exp -> primary_exp 
-- On BOOLOR reduce production exp -> primary_exp 
-- On BOOLAND reduce production exp -> primary_exp 
-- On BINXOREQ reduce production exp -> primary_exp 
-- On BINXOR reduce production exp -> primary_exp 
-- On BINOREQ reduce production exp -> primary_exp 
-- On BINOR reduce production exp -> primary_exp 
-- On BINANDNOTEQ reduce production exp -> primary_exp 
-- On BINANDNOT reduce production exp -> primary_exp 
-- On BINANDEQ reduce production exp -> primary_exp 
-- On BINAND reduce production exp -> primary_exp 
-- On ASSIGN reduce production exp -> primary_exp 

State 60:
primary_exp -> primary_exp LSQUARE . exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp LSQUARE . option(exp) COLON option(exp) RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp LSQUARE . option(exp) COLON exp COLON exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On option(exp) shift to state 61
-- On exp shift to state 107
-- On COLON reduce production option(exp) -> 

State 61:
primary_exp -> primary_exp LSQUARE option(exp) . COLON option(exp) RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp LSQUARE option(exp) . COLON exp COLON exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On COLON shift to state 62

State 62:
primary_exp -> primary_exp LSQUARE option(exp) COLON . option(exp) RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp LSQUARE option(exp) COLON . exp COLON exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On option(exp) shift to state 63
-- On exp shift to state 65
-- On RSQUARE reduce production option(exp) -> 

State 63:
primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) . RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSQUARE shift to state 64

State 64:
primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On SEMICOLON reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On RSQUARE reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On RSHIFTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On RSHIFT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On RPAR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On PLUSPLUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On PLUSEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On PLUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On NEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MULTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MULT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MODEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MOD reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MINUSMINUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MINUSEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On MINUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On LT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On LSQUARE reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On LSHIFTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On LSHIFT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On LEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On LCURLY reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On GT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On GEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On EQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On DOT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On DIVEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On DIV reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On COMMA reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On COLON reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BOOLOR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BOOLAND reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINXOREQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINXOR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINOREQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINOR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINANDNOTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINANDNOT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINANDEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On BINAND reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 
-- On ASSIGN reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON option(exp) RSQUARE 

State 65:
exp -> exp . PLUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
option(exp) -> exp . [ RSQUARE ]
primary_exp -> primary_exp LSQUARE option(exp) COLON exp . COLON exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On COLON shift to state 100
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On RSQUARE reduce production option(exp) -> exp 

State 66:
exp -> exp RSHIFT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 67

State 67:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp RSHIFT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On MULT shift to state 68
-- On DIV shift to state 70
-- On SHORTASSIGN reduce production exp -> exp RSHIFT exp 
-- On SEMICOLON reduce production exp -> exp RSHIFT exp 
-- On RSQUARE reduce production exp -> exp RSHIFT exp 
-- On RSHIFTEQ reduce production exp -> exp RSHIFT exp 
-- On RSHIFT reduce production exp -> exp RSHIFT exp 
-- On RPAR reduce production exp -> exp RSHIFT exp 
-- On PLUSPLUS reduce production exp -> exp RSHIFT exp 
-- On PLUSEQ reduce production exp -> exp RSHIFT exp 
-- On PLUS reduce production exp -> exp RSHIFT exp 
-- On NEQ reduce production exp -> exp RSHIFT exp 
-- On MULTEQ reduce production exp -> exp RSHIFT exp 
-- On MODEQ reduce production exp -> exp RSHIFT exp 
-- On MOD reduce production exp -> exp RSHIFT exp 
-- On MINUSMINUS reduce production exp -> exp RSHIFT exp 
-- On MINUSEQ reduce production exp -> exp RSHIFT exp 
-- On MINUS reduce production exp -> exp RSHIFT exp 
-- On LT reduce production exp -> exp RSHIFT exp 
-- On LSHIFTEQ reduce production exp -> exp RSHIFT exp 
-- On LSHIFT reduce production exp -> exp RSHIFT exp 
-- On LEQ reduce production exp -> exp RSHIFT exp 
-- On LCURLY reduce production exp -> exp RSHIFT exp 
-- On GT reduce production exp -> exp RSHIFT exp 
-- On GEQ reduce production exp -> exp RSHIFT exp 
-- On EQ reduce production exp -> exp RSHIFT exp 
-- On DIVEQ reduce production exp -> exp RSHIFT exp 
-- On COMMA reduce production exp -> exp RSHIFT exp 
-- On COLON reduce production exp -> exp RSHIFT exp 
-- On BOOLOR reduce production exp -> exp RSHIFT exp 
-- On BOOLAND reduce production exp -> exp RSHIFT exp 
-- On BINXOREQ reduce production exp -> exp RSHIFT exp 
-- On BINXOR reduce production exp -> exp RSHIFT exp 
-- On BINOREQ reduce production exp -> exp RSHIFT exp 
-- On BINOR reduce production exp -> exp RSHIFT exp 
-- On BINANDNOTEQ reduce production exp -> exp RSHIFT exp 
-- On BINANDNOT reduce production exp -> exp RSHIFT exp 
-- On BINANDEQ reduce production exp -> exp RSHIFT exp 
-- On BINAND reduce production exp -> exp RSHIFT exp 
-- On ASSIGN reduce production exp -> exp RSHIFT exp 

State 68:
exp -> exp MULT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 69

State 69:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp MULT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> exp MULT exp 
-- On SEMICOLON reduce production exp -> exp MULT exp 
-- On RSQUARE reduce production exp -> exp MULT exp 
-- On RSHIFTEQ reduce production exp -> exp MULT exp 
-- On RSHIFT reduce production exp -> exp MULT exp 
-- On RPAR reduce production exp -> exp MULT exp 
-- On PLUSPLUS reduce production exp -> exp MULT exp 
-- On PLUSEQ reduce production exp -> exp MULT exp 
-- On PLUS reduce production exp -> exp MULT exp 
-- On NEQ reduce production exp -> exp MULT exp 
-- On MULTEQ reduce production exp -> exp MULT exp 
-- On MULT reduce production exp -> exp MULT exp 
-- On MODEQ reduce production exp -> exp MULT exp 
-- On MOD reduce production exp -> exp MULT exp 
-- On MINUSMINUS reduce production exp -> exp MULT exp 
-- On MINUSEQ reduce production exp -> exp MULT exp 
-- On MINUS reduce production exp -> exp MULT exp 
-- On LT reduce production exp -> exp MULT exp 
-- On LSHIFTEQ reduce production exp -> exp MULT exp 
-- On LSHIFT reduce production exp -> exp MULT exp 
-- On LEQ reduce production exp -> exp MULT exp 
-- On LCURLY reduce production exp -> exp MULT exp 
-- On GT reduce production exp -> exp MULT exp 
-- On GEQ reduce production exp -> exp MULT exp 
-- On EQ reduce production exp -> exp MULT exp 
-- On DIVEQ reduce production exp -> exp MULT exp 
-- On DIV reduce production exp -> exp MULT exp 
-- On COMMA reduce production exp -> exp MULT exp 
-- On COLON reduce production exp -> exp MULT exp 
-- On BOOLOR reduce production exp -> exp MULT exp 
-- On BOOLAND reduce production exp -> exp MULT exp 
-- On BINXOREQ reduce production exp -> exp MULT exp 
-- On BINXOR reduce production exp -> exp MULT exp 
-- On BINOREQ reduce production exp -> exp MULT exp 
-- On BINOR reduce production exp -> exp MULT exp 
-- On BINANDNOTEQ reduce production exp -> exp MULT exp 
-- On BINANDNOT reduce production exp -> exp MULT exp 
-- On BINANDEQ reduce production exp -> exp MULT exp 
-- On BINAND reduce production exp -> exp MULT exp 
-- On ASSIGN reduce production exp -> exp MULT exp 

State 70:
exp -> exp DIV . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 71

State 71:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp DIV exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> exp DIV exp 
-- On SEMICOLON reduce production exp -> exp DIV exp 
-- On RSQUARE reduce production exp -> exp DIV exp 
-- On RSHIFTEQ reduce production exp -> exp DIV exp 
-- On RSHIFT reduce production exp -> exp DIV exp 
-- On RPAR reduce production exp -> exp DIV exp 
-- On PLUSPLUS reduce production exp -> exp DIV exp 
-- On PLUSEQ reduce production exp -> exp DIV exp 
-- On PLUS reduce production exp -> exp DIV exp 
-- On NEQ reduce production exp -> exp DIV exp 
-- On MULTEQ reduce production exp -> exp DIV exp 
-- On MULT reduce production exp -> exp DIV exp 
-- On MODEQ reduce production exp -> exp DIV exp 
-- On MOD reduce production exp -> exp DIV exp 
-- On MINUSMINUS reduce production exp -> exp DIV exp 
-- On MINUSEQ reduce production exp -> exp DIV exp 
-- On MINUS reduce production exp -> exp DIV exp 
-- On LT reduce production exp -> exp DIV exp 
-- On LSHIFTEQ reduce production exp -> exp DIV exp 
-- On LSHIFT reduce production exp -> exp DIV exp 
-- On LEQ reduce production exp -> exp DIV exp 
-- On LCURLY reduce production exp -> exp DIV exp 
-- On GT reduce production exp -> exp DIV exp 
-- On GEQ reduce production exp -> exp DIV exp 
-- On EQ reduce production exp -> exp DIV exp 
-- On DIVEQ reduce production exp -> exp DIV exp 
-- On DIV reduce production exp -> exp DIV exp 
-- On COMMA reduce production exp -> exp DIV exp 
-- On COLON reduce production exp -> exp DIV exp 
-- On BOOLOR reduce production exp -> exp DIV exp 
-- On BOOLAND reduce production exp -> exp DIV exp 
-- On BINXOREQ reduce production exp -> exp DIV exp 
-- On BINXOR reduce production exp -> exp DIV exp 
-- On BINOREQ reduce production exp -> exp DIV exp 
-- On BINOR reduce production exp -> exp DIV exp 
-- On BINANDNOTEQ reduce production exp -> exp DIV exp 
-- On BINANDNOT reduce production exp -> exp DIV exp 
-- On BINANDEQ reduce production exp -> exp DIV exp 
-- On BINAND reduce production exp -> exp DIV exp 
-- On ASSIGN reduce production exp -> exp DIV exp 

State 72:
exp -> exp PLUS . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 73

State 73:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp PLUS exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp PLUS exp 
-- On SEMICOLON reduce production exp -> exp PLUS exp 
-- On RSQUARE reduce production exp -> exp PLUS exp 
-- On RSHIFTEQ reduce production exp -> exp PLUS exp 
-- On RPAR reduce production exp -> exp PLUS exp 
-- On PLUSPLUS reduce production exp -> exp PLUS exp 
-- On PLUSEQ reduce production exp -> exp PLUS exp 
-- On PLUS reduce production exp -> exp PLUS exp 
-- On NEQ reduce production exp -> exp PLUS exp 
-- On MULTEQ reduce production exp -> exp PLUS exp 
-- On MODEQ reduce production exp -> exp PLUS exp 
-- On MINUSMINUS reduce production exp -> exp PLUS exp 
-- On MINUSEQ reduce production exp -> exp PLUS exp 
-- On MINUS reduce production exp -> exp PLUS exp 
-- On LT reduce production exp -> exp PLUS exp 
-- On LSHIFTEQ reduce production exp -> exp PLUS exp 
-- On LEQ reduce production exp -> exp PLUS exp 
-- On LCURLY reduce production exp -> exp PLUS exp 
-- On GT reduce production exp -> exp PLUS exp 
-- On GEQ reduce production exp -> exp PLUS exp 
-- On EQ reduce production exp -> exp PLUS exp 
-- On DIVEQ reduce production exp -> exp PLUS exp 
-- On COMMA reduce production exp -> exp PLUS exp 
-- On COLON reduce production exp -> exp PLUS exp 
-- On BOOLOR reduce production exp -> exp PLUS exp 
-- On BOOLAND reduce production exp -> exp PLUS exp 
-- On BINXOREQ reduce production exp -> exp PLUS exp 
-- On BINOREQ reduce production exp -> exp PLUS exp 
-- On BINANDNOTEQ reduce production exp -> exp PLUS exp 
-- On BINANDEQ reduce production exp -> exp PLUS exp 
-- On ASSIGN reduce production exp -> exp PLUS exp 

State 74:
exp -> exp MOD . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 75

State 75:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp MOD exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On MULT shift to state 68
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp MOD exp 
-- On SEMICOLON reduce production exp -> exp MOD exp 
-- On RSQUARE reduce production exp -> exp MOD exp 
-- On RSHIFTEQ reduce production exp -> exp MOD exp 
-- On RPAR reduce production exp -> exp MOD exp 
-- On PLUSPLUS reduce production exp -> exp MOD exp 
-- On PLUSEQ reduce production exp -> exp MOD exp 
-- On PLUS reduce production exp -> exp MOD exp 
-- On NEQ reduce production exp -> exp MOD exp 
-- On MULTEQ reduce production exp -> exp MOD exp 
-- On MODEQ reduce production exp -> exp MOD exp 
-- On MOD reduce production exp -> exp MOD exp 
-- On MINUSMINUS reduce production exp -> exp MOD exp 
-- On MINUSEQ reduce production exp -> exp MOD exp 
-- On MINUS reduce production exp -> exp MOD exp 
-- On LT reduce production exp -> exp MOD exp 
-- On LSHIFTEQ reduce production exp -> exp MOD exp 
-- On LEQ reduce production exp -> exp MOD exp 
-- On LCURLY reduce production exp -> exp MOD exp 
-- On GT reduce production exp -> exp MOD exp 
-- On GEQ reduce production exp -> exp MOD exp 
-- On EQ reduce production exp -> exp MOD exp 
-- On DIVEQ reduce production exp -> exp MOD exp 
-- On COMMA reduce production exp -> exp MOD exp 
-- On COLON reduce production exp -> exp MOD exp 
-- On BOOLOR reduce production exp -> exp MOD exp 
-- On BOOLAND reduce production exp -> exp MOD exp 
-- On BINXOREQ reduce production exp -> exp MOD exp 
-- On BINOREQ reduce production exp -> exp MOD exp 
-- On BINANDNOTEQ reduce production exp -> exp MOD exp 
-- On BINANDEQ reduce production exp -> exp MOD exp 
-- On ASSIGN reduce production exp -> exp MOD exp 

State 76:
exp -> exp LSHIFT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 77

State 77:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp LSHIFT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On MULT shift to state 68
-- On DIV shift to state 70
-- On SHORTASSIGN reduce production exp -> exp LSHIFT exp 
-- On SEMICOLON reduce production exp -> exp LSHIFT exp 
-- On RSQUARE reduce production exp -> exp LSHIFT exp 
-- On RSHIFTEQ reduce production exp -> exp LSHIFT exp 
-- On RSHIFT reduce production exp -> exp LSHIFT exp 
-- On RPAR reduce production exp -> exp LSHIFT exp 
-- On PLUSPLUS reduce production exp -> exp LSHIFT exp 
-- On PLUSEQ reduce production exp -> exp LSHIFT exp 
-- On PLUS reduce production exp -> exp LSHIFT exp 
-- On NEQ reduce production exp -> exp LSHIFT exp 
-- On MULTEQ reduce production exp -> exp LSHIFT exp 
-- On MODEQ reduce production exp -> exp LSHIFT exp 
-- On MOD reduce production exp -> exp LSHIFT exp 
-- On MINUSMINUS reduce production exp -> exp LSHIFT exp 
-- On MINUSEQ reduce production exp -> exp LSHIFT exp 
-- On MINUS reduce production exp -> exp LSHIFT exp 
-- On LT reduce production exp -> exp LSHIFT exp 
-- On LSHIFTEQ reduce production exp -> exp LSHIFT exp 
-- On LSHIFT reduce production exp -> exp LSHIFT exp 
-- On LEQ reduce production exp -> exp LSHIFT exp 
-- On LCURLY reduce production exp -> exp LSHIFT exp 
-- On GT reduce production exp -> exp LSHIFT exp 
-- On GEQ reduce production exp -> exp LSHIFT exp 
-- On EQ reduce production exp -> exp LSHIFT exp 
-- On DIVEQ reduce production exp -> exp LSHIFT exp 
-- On COMMA reduce production exp -> exp LSHIFT exp 
-- On COLON reduce production exp -> exp LSHIFT exp 
-- On BOOLOR reduce production exp -> exp LSHIFT exp 
-- On BOOLAND reduce production exp -> exp LSHIFT exp 
-- On BINXOREQ reduce production exp -> exp LSHIFT exp 
-- On BINXOR reduce production exp -> exp LSHIFT exp 
-- On BINOREQ reduce production exp -> exp LSHIFT exp 
-- On BINOR reduce production exp -> exp LSHIFT exp 
-- On BINANDNOTEQ reduce production exp -> exp LSHIFT exp 
-- On BINANDNOT reduce production exp -> exp LSHIFT exp 
-- On BINANDEQ reduce production exp -> exp LSHIFT exp 
-- On BINAND reduce production exp -> exp LSHIFT exp 
-- On ASSIGN reduce production exp -> exp LSHIFT exp 

State 78:
exp -> exp BINXOR . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 79

State 79:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp BINXOR exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On MULT shift to state 68
-- On DIV shift to state 70
-- On SHORTASSIGN reduce production exp -> exp BINXOR exp 
-- On SEMICOLON reduce production exp -> exp BINXOR exp 
-- On RSQUARE reduce production exp -> exp BINXOR exp 
-- On RSHIFTEQ reduce production exp -> exp BINXOR exp 
-- On RSHIFT reduce production exp -> exp BINXOR exp 
-- On RPAR reduce production exp -> exp BINXOR exp 
-- On PLUSPLUS reduce production exp -> exp BINXOR exp 
-- On PLUSEQ reduce production exp -> exp BINXOR exp 
-- On PLUS reduce production exp -> exp BINXOR exp 
-- On NEQ reduce production exp -> exp BINXOR exp 
-- On MULTEQ reduce production exp -> exp BINXOR exp 
-- On MODEQ reduce production exp -> exp BINXOR exp 
-- On MOD reduce production exp -> exp BINXOR exp 
-- On MINUSMINUS reduce production exp -> exp BINXOR exp 
-- On MINUSEQ reduce production exp -> exp BINXOR exp 
-- On MINUS reduce production exp -> exp BINXOR exp 
-- On LT reduce production exp -> exp BINXOR exp 
-- On LSHIFTEQ reduce production exp -> exp BINXOR exp 
-- On LSHIFT reduce production exp -> exp BINXOR exp 
-- On LEQ reduce production exp -> exp BINXOR exp 
-- On LCURLY reduce production exp -> exp BINXOR exp 
-- On GT reduce production exp -> exp BINXOR exp 
-- On GEQ reduce production exp -> exp BINXOR exp 
-- On EQ reduce production exp -> exp BINXOR exp 
-- On DIVEQ reduce production exp -> exp BINXOR exp 
-- On COMMA reduce production exp -> exp BINXOR exp 
-- On COLON reduce production exp -> exp BINXOR exp 
-- On BOOLOR reduce production exp -> exp BINXOR exp 
-- On BOOLAND reduce production exp -> exp BINXOR exp 
-- On BINXOREQ reduce production exp -> exp BINXOR exp 
-- On BINXOR reduce production exp -> exp BINXOR exp 
-- On BINOREQ reduce production exp -> exp BINXOR exp 
-- On BINOR reduce production exp -> exp BINXOR exp 
-- On BINANDNOTEQ reduce production exp -> exp BINXOR exp 
-- On BINANDNOT reduce production exp -> exp BINXOR exp 
-- On BINANDEQ reduce production exp -> exp BINXOR exp 
-- On BINAND reduce production exp -> exp BINXOR exp 
-- On ASSIGN reduce production exp -> exp BINXOR exp 

State 80:
exp -> exp BINOR . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 81

State 81:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp BINOR exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On MULT shift to state 68
-- On DIV shift to state 70
-- On SHORTASSIGN reduce production exp -> exp BINOR exp 
-- On SEMICOLON reduce production exp -> exp BINOR exp 
-- On RSQUARE reduce production exp -> exp BINOR exp 
-- On RSHIFTEQ reduce production exp -> exp BINOR exp 
-- On RSHIFT reduce production exp -> exp BINOR exp 
-- On RPAR reduce production exp -> exp BINOR exp 
-- On PLUSPLUS reduce production exp -> exp BINOR exp 
-- On PLUSEQ reduce production exp -> exp BINOR exp 
-- On PLUS reduce production exp -> exp BINOR exp 
-- On NEQ reduce production exp -> exp BINOR exp 
-- On MULTEQ reduce production exp -> exp BINOR exp 
-- On MODEQ reduce production exp -> exp BINOR exp 
-- On MOD reduce production exp -> exp BINOR exp 
-- On MINUSMINUS reduce production exp -> exp BINOR exp 
-- On MINUSEQ reduce production exp -> exp BINOR exp 
-- On MINUS reduce production exp -> exp BINOR exp 
-- On LT reduce production exp -> exp BINOR exp 
-- On LSHIFTEQ reduce production exp -> exp BINOR exp 
-- On LSHIFT reduce production exp -> exp BINOR exp 
-- On LEQ reduce production exp -> exp BINOR exp 
-- On LCURLY reduce production exp -> exp BINOR exp 
-- On GT reduce production exp -> exp BINOR exp 
-- On GEQ reduce production exp -> exp BINOR exp 
-- On EQ reduce production exp -> exp BINOR exp 
-- On DIVEQ reduce production exp -> exp BINOR exp 
-- On COMMA reduce production exp -> exp BINOR exp 
-- On COLON reduce production exp -> exp BINOR exp 
-- On BOOLOR reduce production exp -> exp BINOR exp 
-- On BOOLAND reduce production exp -> exp BINOR exp 
-- On BINXOREQ reduce production exp -> exp BINOR exp 
-- On BINXOR reduce production exp -> exp BINOR exp 
-- On BINOREQ reduce production exp -> exp BINOR exp 
-- On BINOR reduce production exp -> exp BINOR exp 
-- On BINANDNOTEQ reduce production exp -> exp BINOR exp 
-- On BINANDNOT reduce production exp -> exp BINOR exp 
-- On BINANDEQ reduce production exp -> exp BINOR exp 
-- On BINAND reduce production exp -> exp BINOR exp 
-- On ASSIGN reduce production exp -> exp BINOR exp 

State 82:
exp -> exp BINANDNOT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 83

State 83:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp BINANDNOT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On MULT shift to state 68
-- On DIV shift to state 70
-- On SHORTASSIGN reduce production exp -> exp BINANDNOT exp 
-- On SEMICOLON reduce production exp -> exp BINANDNOT exp 
-- On RSQUARE reduce production exp -> exp BINANDNOT exp 
-- On RSHIFTEQ reduce production exp -> exp BINANDNOT exp 
-- On RSHIFT reduce production exp -> exp BINANDNOT exp 
-- On RPAR reduce production exp -> exp BINANDNOT exp 
-- On PLUSPLUS reduce production exp -> exp BINANDNOT exp 
-- On PLUSEQ reduce production exp -> exp BINANDNOT exp 
-- On PLUS reduce production exp -> exp BINANDNOT exp 
-- On NEQ reduce production exp -> exp BINANDNOT exp 
-- On MULTEQ reduce production exp -> exp BINANDNOT exp 
-- On MODEQ reduce production exp -> exp BINANDNOT exp 
-- On MOD reduce production exp -> exp BINANDNOT exp 
-- On MINUSMINUS reduce production exp -> exp BINANDNOT exp 
-- On MINUSEQ reduce production exp -> exp BINANDNOT exp 
-- On MINUS reduce production exp -> exp BINANDNOT exp 
-- On LT reduce production exp -> exp BINANDNOT exp 
-- On LSHIFTEQ reduce production exp -> exp BINANDNOT exp 
-- On LSHIFT reduce production exp -> exp BINANDNOT exp 
-- On LEQ reduce production exp -> exp BINANDNOT exp 
-- On LCURLY reduce production exp -> exp BINANDNOT exp 
-- On GT reduce production exp -> exp BINANDNOT exp 
-- On GEQ reduce production exp -> exp BINANDNOT exp 
-- On EQ reduce production exp -> exp BINANDNOT exp 
-- On DIVEQ reduce production exp -> exp BINANDNOT exp 
-- On COMMA reduce production exp -> exp BINANDNOT exp 
-- On COLON reduce production exp -> exp BINANDNOT exp 
-- On BOOLOR reduce production exp -> exp BINANDNOT exp 
-- On BOOLAND reduce production exp -> exp BINANDNOT exp 
-- On BINXOREQ reduce production exp -> exp BINANDNOT exp 
-- On BINXOR reduce production exp -> exp BINANDNOT exp 
-- On BINOREQ reduce production exp -> exp BINANDNOT exp 
-- On BINOR reduce production exp -> exp BINANDNOT exp 
-- On BINANDNOTEQ reduce production exp -> exp BINANDNOT exp 
-- On BINANDNOT reduce production exp -> exp BINANDNOT exp 
-- On BINANDEQ reduce production exp -> exp BINANDNOT exp 
-- On BINAND reduce production exp -> exp BINANDNOT exp 
-- On ASSIGN reduce production exp -> exp BINANDNOT exp 

State 84:
exp -> exp BINAND . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 85

State 85:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp BINAND exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On MULT shift to state 68
-- On DIV shift to state 70
-- On SHORTASSIGN reduce production exp -> exp BINAND exp 
-- On SEMICOLON reduce production exp -> exp BINAND exp 
-- On RSQUARE reduce production exp -> exp BINAND exp 
-- On RSHIFTEQ reduce production exp -> exp BINAND exp 
-- On RSHIFT reduce production exp -> exp BINAND exp 
-- On RPAR reduce production exp -> exp BINAND exp 
-- On PLUSPLUS reduce production exp -> exp BINAND exp 
-- On PLUSEQ reduce production exp -> exp BINAND exp 
-- On PLUS reduce production exp -> exp BINAND exp 
-- On NEQ reduce production exp -> exp BINAND exp 
-- On MULTEQ reduce production exp -> exp BINAND exp 
-- On MODEQ reduce production exp -> exp BINAND exp 
-- On MOD reduce production exp -> exp BINAND exp 
-- On MINUSMINUS reduce production exp -> exp BINAND exp 
-- On MINUSEQ reduce production exp -> exp BINAND exp 
-- On MINUS reduce production exp -> exp BINAND exp 
-- On LT reduce production exp -> exp BINAND exp 
-- On LSHIFTEQ reduce production exp -> exp BINAND exp 
-- On LSHIFT reduce production exp -> exp BINAND exp 
-- On LEQ reduce production exp -> exp BINAND exp 
-- On LCURLY reduce production exp -> exp BINAND exp 
-- On GT reduce production exp -> exp BINAND exp 
-- On GEQ reduce production exp -> exp BINAND exp 
-- On EQ reduce production exp -> exp BINAND exp 
-- On DIVEQ reduce production exp -> exp BINAND exp 
-- On COMMA reduce production exp -> exp BINAND exp 
-- On COLON reduce production exp -> exp BINAND exp 
-- On BOOLOR reduce production exp -> exp BINAND exp 
-- On BOOLAND reduce production exp -> exp BINAND exp 
-- On BINXOREQ reduce production exp -> exp BINAND exp 
-- On BINXOR reduce production exp -> exp BINAND exp 
-- On BINOREQ reduce production exp -> exp BINAND exp 
-- On BINOR reduce production exp -> exp BINAND exp 
-- On BINANDNOTEQ reduce production exp -> exp BINAND exp 
-- On BINANDNOT reduce production exp -> exp BINAND exp 
-- On BINANDEQ reduce production exp -> exp BINAND exp 
-- On BINAND reduce production exp -> exp BINAND exp 
-- On ASSIGN reduce production exp -> exp BINAND exp 

State 86:
exp -> exp NEQ . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 87

State 87:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp NEQ exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp NEQ exp 
-- On SEMICOLON reduce production exp -> exp NEQ exp 
-- On RSQUARE reduce production exp -> exp NEQ exp 
-- On RSHIFTEQ reduce production exp -> exp NEQ exp 
-- On RPAR reduce production exp -> exp NEQ exp 
-- On PLUSPLUS reduce production exp -> exp NEQ exp 
-- On PLUSEQ reduce production exp -> exp NEQ exp 
-- On NEQ reduce production exp -> exp NEQ exp 
-- On MULTEQ reduce production exp -> exp NEQ exp 
-- On MODEQ reduce production exp -> exp NEQ exp 
-- On MINUSMINUS reduce production exp -> exp NEQ exp 
-- On MINUSEQ reduce production exp -> exp NEQ exp 
-- On LT reduce production exp -> exp NEQ exp 
-- On LSHIFTEQ reduce production exp -> exp NEQ exp 
-- On LEQ reduce production exp -> exp NEQ exp 
-- On LCURLY reduce production exp -> exp NEQ exp 
-- On GT reduce production exp -> exp NEQ exp 
-- On GEQ reduce production exp -> exp NEQ exp 
-- On EQ reduce production exp -> exp NEQ exp 
-- On DIVEQ reduce production exp -> exp NEQ exp 
-- On COMMA reduce production exp -> exp NEQ exp 
-- On COLON reduce production exp -> exp NEQ exp 
-- On BOOLOR reduce production exp -> exp NEQ exp 
-- On BOOLAND reduce production exp -> exp NEQ exp 
-- On BINXOREQ reduce production exp -> exp NEQ exp 
-- On BINOREQ reduce production exp -> exp NEQ exp 
-- On BINANDNOTEQ reduce production exp -> exp NEQ exp 
-- On BINANDEQ reduce production exp -> exp NEQ exp 
-- On ASSIGN reduce production exp -> exp NEQ exp 

State 88:
exp -> exp MINUS . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 89

State 89:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp MINUS exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp MINUS exp 
-- On SEMICOLON reduce production exp -> exp MINUS exp 
-- On RSQUARE reduce production exp -> exp MINUS exp 
-- On RSHIFTEQ reduce production exp -> exp MINUS exp 
-- On RPAR reduce production exp -> exp MINUS exp 
-- On PLUSPLUS reduce production exp -> exp MINUS exp 
-- On PLUSEQ reduce production exp -> exp MINUS exp 
-- On PLUS reduce production exp -> exp MINUS exp 
-- On NEQ reduce production exp -> exp MINUS exp 
-- On MULTEQ reduce production exp -> exp MINUS exp 
-- On MODEQ reduce production exp -> exp MINUS exp 
-- On MINUSMINUS reduce production exp -> exp MINUS exp 
-- On MINUSEQ reduce production exp -> exp MINUS exp 
-- On MINUS reduce production exp -> exp MINUS exp 
-- On LT reduce production exp -> exp MINUS exp 
-- On LSHIFTEQ reduce production exp -> exp MINUS exp 
-- On LEQ reduce production exp -> exp MINUS exp 
-- On LCURLY reduce production exp -> exp MINUS exp 
-- On GT reduce production exp -> exp MINUS exp 
-- On GEQ reduce production exp -> exp MINUS exp 
-- On EQ reduce production exp -> exp MINUS exp 
-- On DIVEQ reduce production exp -> exp MINUS exp 
-- On COMMA reduce production exp -> exp MINUS exp 
-- On COLON reduce production exp -> exp MINUS exp 
-- On BOOLOR reduce production exp -> exp MINUS exp 
-- On BOOLAND reduce production exp -> exp MINUS exp 
-- On BINXOREQ reduce production exp -> exp MINUS exp 
-- On BINOREQ reduce production exp -> exp MINUS exp 
-- On BINANDNOTEQ reduce production exp -> exp MINUS exp 
-- On BINANDEQ reduce production exp -> exp MINUS exp 
-- On ASSIGN reduce production exp -> exp MINUS exp 

State 90:
exp -> exp LT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 91

State 91:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp LT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp LT exp 
-- On SEMICOLON reduce production exp -> exp LT exp 
-- On RSQUARE reduce production exp -> exp LT exp 
-- On RSHIFTEQ reduce production exp -> exp LT exp 
-- On RPAR reduce production exp -> exp LT exp 
-- On PLUSPLUS reduce production exp -> exp LT exp 
-- On PLUSEQ reduce production exp -> exp LT exp 
-- On NEQ reduce production exp -> exp LT exp 
-- On MULTEQ reduce production exp -> exp LT exp 
-- On MODEQ reduce production exp -> exp LT exp 
-- On MINUSMINUS reduce production exp -> exp LT exp 
-- On MINUSEQ reduce production exp -> exp LT exp 
-- On LT reduce production exp -> exp LT exp 
-- On LSHIFTEQ reduce production exp -> exp LT exp 
-- On LEQ reduce production exp -> exp LT exp 
-- On LCURLY reduce production exp -> exp LT exp 
-- On GT reduce production exp -> exp LT exp 
-- On GEQ reduce production exp -> exp LT exp 
-- On EQ reduce production exp -> exp LT exp 
-- On DIVEQ reduce production exp -> exp LT exp 
-- On COMMA reduce production exp -> exp LT exp 
-- On COLON reduce production exp -> exp LT exp 
-- On BOOLOR reduce production exp -> exp LT exp 
-- On BOOLAND reduce production exp -> exp LT exp 
-- On BINXOREQ reduce production exp -> exp LT exp 
-- On BINOREQ reduce production exp -> exp LT exp 
-- On BINANDNOTEQ reduce production exp -> exp LT exp 
-- On BINANDEQ reduce production exp -> exp LT exp 
-- On ASSIGN reduce production exp -> exp LT exp 

State 92:
exp -> exp LEQ . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 93

State 93:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp LEQ exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp LEQ exp 
-- On SEMICOLON reduce production exp -> exp LEQ exp 
-- On RSQUARE reduce production exp -> exp LEQ exp 
-- On RSHIFTEQ reduce production exp -> exp LEQ exp 
-- On RPAR reduce production exp -> exp LEQ exp 
-- On PLUSPLUS reduce production exp -> exp LEQ exp 
-- On PLUSEQ reduce production exp -> exp LEQ exp 
-- On NEQ reduce production exp -> exp LEQ exp 
-- On MULTEQ reduce production exp -> exp LEQ exp 
-- On MODEQ reduce production exp -> exp LEQ exp 
-- On MINUSMINUS reduce production exp -> exp LEQ exp 
-- On MINUSEQ reduce production exp -> exp LEQ exp 
-- On LT reduce production exp -> exp LEQ exp 
-- On LSHIFTEQ reduce production exp -> exp LEQ exp 
-- On LEQ reduce production exp -> exp LEQ exp 
-- On LCURLY reduce production exp -> exp LEQ exp 
-- On GT reduce production exp -> exp LEQ exp 
-- On GEQ reduce production exp -> exp LEQ exp 
-- On EQ reduce production exp -> exp LEQ exp 
-- On DIVEQ reduce production exp -> exp LEQ exp 
-- On COMMA reduce production exp -> exp LEQ exp 
-- On COLON reduce production exp -> exp LEQ exp 
-- On BOOLOR reduce production exp -> exp LEQ exp 
-- On BOOLAND reduce production exp -> exp LEQ exp 
-- On BINXOREQ reduce production exp -> exp LEQ exp 
-- On BINOREQ reduce production exp -> exp LEQ exp 
-- On BINANDNOTEQ reduce production exp -> exp LEQ exp 
-- On BINANDEQ reduce production exp -> exp LEQ exp 
-- On ASSIGN reduce production exp -> exp LEQ exp 

State 94:
exp -> exp GT . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 95

State 95:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp GT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp GT exp 
-- On SEMICOLON reduce production exp -> exp GT exp 
-- On RSQUARE reduce production exp -> exp GT exp 
-- On RSHIFTEQ reduce production exp -> exp GT exp 
-- On RPAR reduce production exp -> exp GT exp 
-- On PLUSPLUS reduce production exp -> exp GT exp 
-- On PLUSEQ reduce production exp -> exp GT exp 
-- On NEQ reduce production exp -> exp GT exp 
-- On MULTEQ reduce production exp -> exp GT exp 
-- On MODEQ reduce production exp -> exp GT exp 
-- On MINUSMINUS reduce production exp -> exp GT exp 
-- On MINUSEQ reduce production exp -> exp GT exp 
-- On LT reduce production exp -> exp GT exp 
-- On LSHIFTEQ reduce production exp -> exp GT exp 
-- On LEQ reduce production exp -> exp GT exp 
-- On LCURLY reduce production exp -> exp GT exp 
-- On GT reduce production exp -> exp GT exp 
-- On GEQ reduce production exp -> exp GT exp 
-- On EQ reduce production exp -> exp GT exp 
-- On DIVEQ reduce production exp -> exp GT exp 
-- On COMMA reduce production exp -> exp GT exp 
-- On COLON reduce production exp -> exp GT exp 
-- On BOOLOR reduce production exp -> exp GT exp 
-- On BOOLAND reduce production exp -> exp GT exp 
-- On BINXOREQ reduce production exp -> exp GT exp 
-- On BINOREQ reduce production exp -> exp GT exp 
-- On BINANDNOTEQ reduce production exp -> exp GT exp 
-- On BINANDEQ reduce production exp -> exp GT exp 
-- On ASSIGN reduce production exp -> exp GT exp 

State 96:
exp -> exp GEQ . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 97

State 97:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp GEQ exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp GEQ exp 
-- On SEMICOLON reduce production exp -> exp GEQ exp 
-- On RSQUARE reduce production exp -> exp GEQ exp 
-- On RSHIFTEQ reduce production exp -> exp GEQ exp 
-- On RPAR reduce production exp -> exp GEQ exp 
-- On PLUSPLUS reduce production exp -> exp GEQ exp 
-- On PLUSEQ reduce production exp -> exp GEQ exp 
-- On NEQ reduce production exp -> exp GEQ exp 
-- On MULTEQ reduce production exp -> exp GEQ exp 
-- On MODEQ reduce production exp -> exp GEQ exp 
-- On MINUSMINUS reduce production exp -> exp GEQ exp 
-- On MINUSEQ reduce production exp -> exp GEQ exp 
-- On LT reduce production exp -> exp GEQ exp 
-- On LSHIFTEQ reduce production exp -> exp GEQ exp 
-- On LEQ reduce production exp -> exp GEQ exp 
-- On LCURLY reduce production exp -> exp GEQ exp 
-- On GT reduce production exp -> exp GEQ exp 
-- On GEQ reduce production exp -> exp GEQ exp 
-- On EQ reduce production exp -> exp GEQ exp 
-- On DIVEQ reduce production exp -> exp GEQ exp 
-- On COMMA reduce production exp -> exp GEQ exp 
-- On COLON reduce production exp -> exp GEQ exp 
-- On BOOLOR reduce production exp -> exp GEQ exp 
-- On BOOLAND reduce production exp -> exp GEQ exp 
-- On BINXOREQ reduce production exp -> exp GEQ exp 
-- On BINOREQ reduce production exp -> exp GEQ exp 
-- On BINANDNOTEQ reduce production exp -> exp GEQ exp 
-- On BINANDEQ reduce production exp -> exp GEQ exp 
-- On ASSIGN reduce production exp -> exp GEQ exp 

State 98:
exp -> exp EQ . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 99

State 99:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp EQ exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LSHIFT shift to state 76
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp EQ exp 
-- On SEMICOLON reduce production exp -> exp EQ exp 
-- On RSQUARE reduce production exp -> exp EQ exp 
-- On RSHIFTEQ reduce production exp -> exp EQ exp 
-- On RPAR reduce production exp -> exp EQ exp 
-- On PLUSPLUS reduce production exp -> exp EQ exp 
-- On PLUSEQ reduce production exp -> exp EQ exp 
-- On NEQ reduce production exp -> exp EQ exp 
-- On MULTEQ reduce production exp -> exp EQ exp 
-- On MODEQ reduce production exp -> exp EQ exp 
-- On MINUSMINUS reduce production exp -> exp EQ exp 
-- On MINUSEQ reduce production exp -> exp EQ exp 
-- On LT reduce production exp -> exp EQ exp 
-- On LSHIFTEQ reduce production exp -> exp EQ exp 
-- On LEQ reduce production exp -> exp EQ exp 
-- On LCURLY reduce production exp -> exp EQ exp 
-- On GT reduce production exp -> exp EQ exp 
-- On GEQ reduce production exp -> exp EQ exp 
-- On EQ reduce production exp -> exp EQ exp 
-- On DIVEQ reduce production exp -> exp EQ exp 
-- On COMMA reduce production exp -> exp EQ exp 
-- On COLON reduce production exp -> exp EQ exp 
-- On BOOLOR reduce production exp -> exp EQ exp 
-- On BOOLAND reduce production exp -> exp EQ exp 
-- On BINXOREQ reduce production exp -> exp EQ exp 
-- On BINOREQ reduce production exp -> exp EQ exp 
-- On BINANDNOTEQ reduce production exp -> exp EQ exp 
-- On BINANDEQ reduce production exp -> exp EQ exp 
-- On ASSIGN reduce production exp -> exp EQ exp 

State 100:
primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON . exp RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 101

State 101:
exp -> exp . PLUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp . RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSQUARE shift to state 102
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 102:
primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On SEMICOLON reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On RSQUARE reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On RSHIFTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On RSHIFT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On RPAR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On PLUSPLUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On PLUSEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On PLUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On NEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MULTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MULT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MODEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MOD reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MINUSMINUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MINUSEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On MINUS reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On LT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On LSQUARE reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On LSHIFTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On LSHIFT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On LEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On LCURLY reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On GT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On GEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On EQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On DOT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On DIVEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On DIV reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On COMMA reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On COLON reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BOOLOR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BOOLAND reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINXOREQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINXOR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINOREQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINOR reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINANDNOTEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINANDNOT reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINANDEQ reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On BINAND reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 
-- On ASSIGN reduce production primary_exp -> primary_exp LSQUARE option(exp) COLON exp COLON exp RSQUARE 

State 103:
exp -> exp BOOLOR . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 104

State 104:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp BOOLOR exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp BOOLOR exp 
-- On SEMICOLON reduce production exp -> exp BOOLOR exp 
-- On RSQUARE reduce production exp -> exp BOOLOR exp 
-- On RSHIFTEQ reduce production exp -> exp BOOLOR exp 
-- On RPAR reduce production exp -> exp BOOLOR exp 
-- On PLUSPLUS reduce production exp -> exp BOOLOR exp 
-- On PLUSEQ reduce production exp -> exp BOOLOR exp 
-- On MULTEQ reduce production exp -> exp BOOLOR exp 
-- On MODEQ reduce production exp -> exp BOOLOR exp 
-- On MINUSMINUS reduce production exp -> exp BOOLOR exp 
-- On MINUSEQ reduce production exp -> exp BOOLOR exp 
-- On LSHIFTEQ reduce production exp -> exp BOOLOR exp 
-- On LCURLY reduce production exp -> exp BOOLOR exp 
-- On DIVEQ reduce production exp -> exp BOOLOR exp 
-- On COMMA reduce production exp -> exp BOOLOR exp 
-- On COLON reduce production exp -> exp BOOLOR exp 
-- On BOOLOR reduce production exp -> exp BOOLOR exp 
-- On BINXOREQ reduce production exp -> exp BOOLOR exp 
-- On BINOREQ reduce production exp -> exp BOOLOR exp 
-- On BINANDNOTEQ reduce production exp -> exp BOOLOR exp 
-- On BINANDEQ reduce production exp -> exp BOOLOR exp 
-- On ASSIGN reduce production exp -> exp BOOLOR exp 

State 105:
exp -> exp BOOLAND . exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 106

State 106:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp BOOLAND exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SHORTASSIGN reduce production exp -> exp BOOLAND exp 
-- On SEMICOLON reduce production exp -> exp BOOLAND exp 
-- On RSQUARE reduce production exp -> exp BOOLAND exp 
-- On RSHIFTEQ reduce production exp -> exp BOOLAND exp 
-- On RPAR reduce production exp -> exp BOOLAND exp 
-- On PLUSPLUS reduce production exp -> exp BOOLAND exp 
-- On PLUSEQ reduce production exp -> exp BOOLAND exp 
-- On MULTEQ reduce production exp -> exp BOOLAND exp 
-- On MODEQ reduce production exp -> exp BOOLAND exp 
-- On MINUSMINUS reduce production exp -> exp BOOLAND exp 
-- On MINUSEQ reduce production exp -> exp BOOLAND exp 
-- On LSHIFTEQ reduce production exp -> exp BOOLAND exp 
-- On LCURLY reduce production exp -> exp BOOLAND exp 
-- On DIVEQ reduce production exp -> exp BOOLAND exp 
-- On COMMA reduce production exp -> exp BOOLAND exp 
-- On COLON reduce production exp -> exp BOOLAND exp 
-- On BOOLOR reduce production exp -> exp BOOLAND exp 
-- On BOOLAND reduce production exp -> exp BOOLAND exp 
-- On BINXOREQ reduce production exp -> exp BOOLAND exp 
-- On BINOREQ reduce production exp -> exp BOOLAND exp 
-- On BINANDNOTEQ reduce production exp -> exp BOOLAND exp 
-- On BINANDEQ reduce production exp -> exp BOOLAND exp 
-- On ASSIGN reduce production exp -> exp BOOLAND exp 

State 107:
exp -> exp . PLUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COLON BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
option(exp) -> exp . [ COLON ]
primary_exp -> primary_exp LSQUARE exp . RSQUARE [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSQUARE shift to state 108
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On COLON reduce production option(exp) -> exp 

State 108:
primary_exp -> primary_exp LSQUARE exp RSQUARE . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On SEMICOLON reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On RSQUARE reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On RSHIFTEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On RSHIFT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On RPAR reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On PLUSPLUS reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On PLUSEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On PLUS reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On NEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MULTEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MULT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MODEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MOD reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MINUSMINUS reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MINUSEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On MINUS reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On LT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On LSQUARE reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On LSHIFTEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On LSHIFT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On LEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On LCURLY reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On GT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On GEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On EQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On DOT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On DIVEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On DIV reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On COMMA reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On COLON reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BOOLOR reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BOOLAND reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINXOREQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINXOR reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINOREQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINOR reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINANDNOTEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINANDNOT reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINANDEQ reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On BINAND reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 
-- On ASSIGN reduce production primary_exp -> primary_exp LSQUARE exp RSQUARE 

State 109:
primary_exp -> primary_exp DOT . IDENTIFIER [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
primary_exp -> primary_exp DOT . LPAR typeT RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LPAR shift to state 110
-- On IDENTIFIER shift to state 113

State 110:
primary_exp -> primary_exp DOT LPAR . typeT RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 111

State 111:
primary_exp -> primary_exp DOT LPAR typeT . RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RPAR shift to state 112

State 112:
primary_exp -> primary_exp DOT LPAR typeT RPAR . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On SEMICOLON reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On RSQUARE reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On RSHIFTEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On RSHIFT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On RPAR reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On PLUSPLUS reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On PLUSEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On PLUS reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On NEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MULTEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MULT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MODEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MOD reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MINUSMINUS reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MINUSEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On MINUS reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On LT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On LSQUARE reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On LSHIFTEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On LSHIFT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On LEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On LCURLY reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On GT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On GEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On EQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On DOT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On DIVEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On DIV reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On COMMA reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On COLON reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BOOLOR reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BOOLAND reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINXOREQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINXOR reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINOREQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINOR reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINANDNOTEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINANDNOT reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINANDEQ reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On BINAND reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 
-- On ASSIGN reduce production primary_exp -> primary_exp DOT LPAR typeT RPAR 

State 113:
primary_exp -> primary_exp DOT IDENTIFIER . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On SEMICOLON reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On RSQUARE reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On RSHIFTEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On RSHIFT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On RPAR reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On PLUSPLUS reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On PLUSEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On PLUS reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On NEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MULTEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MULT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MODEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MOD reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MINUSMINUS reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MINUSEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On MINUS reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On LT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On LSQUARE reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On LSHIFTEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On LSHIFT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On LEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On LCURLY reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On GT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On GEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On EQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On DOT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On DIVEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On DIV reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On COMMA reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On COLON reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BOOLOR reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BOOLAND reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINXOREQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINXOR reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINOREQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINOR reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINANDNOTEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINANDNOT reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINANDEQ reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On BINAND reduce production primary_exp -> primary_exp DOT IDENTIFIER 
-- On ASSIGN reduce production primary_exp -> primary_exp DOT IDENTIFIER 

State 114:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> BINAND exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> BINAND exp 
-- On SEMICOLON reduce production exp -> BINAND exp 
-- On RSQUARE reduce production exp -> BINAND exp 
-- On RSHIFTEQ reduce production exp -> BINAND exp 
-- On RSHIFT reduce production exp -> BINAND exp 
-- On RPAR reduce production exp -> BINAND exp 
-- On PLUSPLUS reduce production exp -> BINAND exp 
-- On PLUSEQ reduce production exp -> BINAND exp 
-- On PLUS reduce production exp -> BINAND exp 
-- On NEQ reduce production exp -> BINAND exp 
-- On MULTEQ reduce production exp -> BINAND exp 
-- On MULT reduce production exp -> BINAND exp 
-- On MODEQ reduce production exp -> BINAND exp 
-- On MOD reduce production exp -> BINAND exp 
-- On MINUSMINUS reduce production exp -> BINAND exp 
-- On MINUSEQ reduce production exp -> BINAND exp 
-- On MINUS reduce production exp -> BINAND exp 
-- On LT reduce production exp -> BINAND exp 
-- On LSHIFTEQ reduce production exp -> BINAND exp 
-- On LSHIFT reduce production exp -> BINAND exp 
-- On LEQ reduce production exp -> BINAND exp 
-- On LCURLY reduce production exp -> BINAND exp 
-- On GT reduce production exp -> BINAND exp 
-- On GEQ reduce production exp -> BINAND exp 
-- On EQ reduce production exp -> BINAND exp 
-- On DIVEQ reduce production exp -> BINAND exp 
-- On DIV reduce production exp -> BINAND exp 
-- On COMMA reduce production exp -> BINAND exp 
-- On COLON reduce production exp -> BINAND exp 
-- On BOOLOR reduce production exp -> BINAND exp 
-- On BOOLAND reduce production exp -> BINAND exp 
-- On BINXOREQ reduce production exp -> BINAND exp 
-- On BINXOR reduce production exp -> BINAND exp 
-- On BINOREQ reduce production exp -> BINAND exp 
-- On BINOR reduce production exp -> BINAND exp 
-- On BINANDNOTEQ reduce production exp -> BINAND exp 
-- On BINANDNOT reduce production exp -> BINAND exp 
-- On BINANDEQ reduce production exp -> BINAND exp 
-- On BINAND reduce production exp -> BINAND exp 
-- On ASSIGN reduce production exp -> BINAND exp 

State 115:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> BINXOR exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> BINXOR exp 
-- On SEMICOLON reduce production exp -> BINXOR exp 
-- On RSQUARE reduce production exp -> BINXOR exp 
-- On RSHIFTEQ reduce production exp -> BINXOR exp 
-- On RSHIFT reduce production exp -> BINXOR exp 
-- On RPAR reduce production exp -> BINXOR exp 
-- On PLUSPLUS reduce production exp -> BINXOR exp 
-- On PLUSEQ reduce production exp -> BINXOR exp 
-- On PLUS reduce production exp -> BINXOR exp 
-- On NEQ reduce production exp -> BINXOR exp 
-- On MULTEQ reduce production exp -> BINXOR exp 
-- On MULT reduce production exp -> BINXOR exp 
-- On MODEQ reduce production exp -> BINXOR exp 
-- On MOD reduce production exp -> BINXOR exp 
-- On MINUSMINUS reduce production exp -> BINXOR exp 
-- On MINUSEQ reduce production exp -> BINXOR exp 
-- On MINUS reduce production exp -> BINXOR exp 
-- On LT reduce production exp -> BINXOR exp 
-- On LSHIFTEQ reduce production exp -> BINXOR exp 
-- On LSHIFT reduce production exp -> BINXOR exp 
-- On LEQ reduce production exp -> BINXOR exp 
-- On LCURLY reduce production exp -> BINXOR exp 
-- On GT reduce production exp -> BINXOR exp 
-- On GEQ reduce production exp -> BINXOR exp 
-- On EQ reduce production exp -> BINXOR exp 
-- On DIVEQ reduce production exp -> BINXOR exp 
-- On DIV reduce production exp -> BINXOR exp 
-- On COMMA reduce production exp -> BINXOR exp 
-- On COLON reduce production exp -> BINXOR exp 
-- On BOOLOR reduce production exp -> BINXOR exp 
-- On BOOLAND reduce production exp -> BINXOR exp 
-- On BINXOREQ reduce production exp -> BINXOR exp 
-- On BINXOR reduce production exp -> BINXOR exp 
-- On BINOREQ reduce production exp -> BINXOR exp 
-- On BINOR reduce production exp -> BINXOR exp 
-- On BINANDNOTEQ reduce production exp -> BINXOR exp 
-- On BINANDNOT reduce production exp -> BINXOR exp 
-- On BINANDEQ reduce production exp -> BINXOR exp 
-- On BINAND reduce production exp -> BINXOR exp 
-- On ASSIGN reduce production exp -> BINXOR exp 

State 116:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> BOOLNOT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> BOOLNOT exp 
-- On SEMICOLON reduce production exp -> BOOLNOT exp 
-- On RSQUARE reduce production exp -> BOOLNOT exp 
-- On RSHIFTEQ reduce production exp -> BOOLNOT exp 
-- On RSHIFT reduce production exp -> BOOLNOT exp 
-- On RPAR reduce production exp -> BOOLNOT exp 
-- On PLUSPLUS reduce production exp -> BOOLNOT exp 
-- On PLUSEQ reduce production exp -> BOOLNOT exp 
-- On PLUS reduce production exp -> BOOLNOT exp 
-- On NEQ reduce production exp -> BOOLNOT exp 
-- On MULTEQ reduce production exp -> BOOLNOT exp 
-- On MULT reduce production exp -> BOOLNOT exp 
-- On MODEQ reduce production exp -> BOOLNOT exp 
-- On MOD reduce production exp -> BOOLNOT exp 
-- On MINUSMINUS reduce production exp -> BOOLNOT exp 
-- On MINUSEQ reduce production exp -> BOOLNOT exp 
-- On MINUS reduce production exp -> BOOLNOT exp 
-- On LT reduce production exp -> BOOLNOT exp 
-- On LSHIFTEQ reduce production exp -> BOOLNOT exp 
-- On LSHIFT reduce production exp -> BOOLNOT exp 
-- On LEQ reduce production exp -> BOOLNOT exp 
-- On LCURLY reduce production exp -> BOOLNOT exp 
-- On GT reduce production exp -> BOOLNOT exp 
-- On GEQ reduce production exp -> BOOLNOT exp 
-- On EQ reduce production exp -> BOOLNOT exp 
-- On DIVEQ reduce production exp -> BOOLNOT exp 
-- On DIV reduce production exp -> BOOLNOT exp 
-- On COMMA reduce production exp -> BOOLNOT exp 
-- On COLON reduce production exp -> BOOLNOT exp 
-- On BOOLOR reduce production exp -> BOOLNOT exp 
-- On BOOLAND reduce production exp -> BOOLNOT exp 
-- On BINXOREQ reduce production exp -> BOOLNOT exp 
-- On BINXOR reduce production exp -> BOOLNOT exp 
-- On BINOREQ reduce production exp -> BOOLNOT exp 
-- On BINOR reduce production exp -> BOOLNOT exp 
-- On BINANDNOTEQ reduce production exp -> BOOLNOT exp 
-- On BINANDNOT reduce production exp -> BOOLNOT exp 
-- On BINANDEQ reduce production exp -> BOOLNOT exp 
-- On BINAND reduce production exp -> BOOLNOT exp 
-- On ASSIGN reduce production exp -> BOOLNOT exp 

State 117:
primary_exp -> typeT LPAR option(exp_list) . RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RPAR shift to state 118

State 118:
primary_exp -> typeT LPAR option(exp_list) RPAR . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On SEMICOLON reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On RSQUARE reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On RSHIFTEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On RSHIFT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On RPAR reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On PLUSPLUS reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On PLUSEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On PLUS reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On NEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MULTEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MULT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MODEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MOD reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MINUSMINUS reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MINUSEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On MINUS reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On LT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On LSQUARE reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On LSHIFTEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On LSHIFT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On LEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On LCURLY reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On GT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On GEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On EQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On DOT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On DIVEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On DIV reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On COMMA reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On COLON reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BOOLOR reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BOOLAND reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINXOREQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINXOR reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINOREQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINOR reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINANDNOTEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINANDNOT reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINANDEQ reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On BINAND reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 
-- On ASSIGN reduce production primary_exp -> typeT LPAR option(exp_list) RPAR 

State 119:
exp_list -> exp_list . COMMA exp [ RPAR COMMA ]
option(exp_list) -> exp_list . [ RPAR ]
-- On COMMA shift to state 120
-- On RPAR reduce production option(exp_list) -> exp_list 

State 120:
exp_list -> exp_list COMMA . exp [ SEMICOLON RPAR COMMA ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 121

State 121:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp_list -> exp_list COMMA exp . [ SEMICOLON RPAR COMMA ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SEMICOLON reduce production exp_list -> exp_list COMMA exp 
-- On RPAR reduce production exp_list -> exp_list COMMA exp 
-- On COMMA reduce production exp_list -> exp_list COMMA exp 

State 122:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV COMMA BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp_list -> exp . [ SEMICOLON RPAR COMMA ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SEMICOLON reduce production exp_list -> exp 
-- On RPAR reduce production exp_list -> exp 
-- On COMMA reduce production exp_list -> exp 

State 123:
primary_exp -> primary_exp . DOT IDENTIFIER [ LSQUARE DOT COMMA ]
primary_exp -> primary_exp . LSQUARE exp RSQUARE [ LSQUARE DOT COMMA ]
primary_exp -> primary_exp . DOT LPAR typeT RPAR [ LSQUARE DOT COMMA ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON option(exp) RSQUARE [ LSQUARE DOT COMMA ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON exp COLON exp RSQUARE [ LSQUARE DOT COMMA ]
primary_exp -> APPEND LPAR primary_exp . COMMA exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On LSQUARE shift to state 60
-- On DOT shift to state 109
-- On COMMA shift to state 124

State 124:
primary_exp -> APPEND LPAR primary_exp COMMA . exp RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 125

State 125:
exp -> exp . PLUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
primary_exp -> APPEND LPAR primary_exp COMMA exp . RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RSHIFT shift to state 66
-- On RPAR shift to state 126
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 126:
primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On SEMICOLON reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On RSQUARE reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On RSHIFTEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On RSHIFT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On RPAR reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On PLUSPLUS reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On PLUSEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On PLUS reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On NEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MULTEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MULT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MODEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MOD reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MINUSMINUS reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MINUSEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On MINUS reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On LT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On LSQUARE reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On LSHIFTEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On LSHIFT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On LEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On LCURLY reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On GT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On GEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On EQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On DOT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On DIVEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On DIV reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On COMMA reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On COLON reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BOOLOR reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BOOLAND reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINXOREQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINXOR reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINOREQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINOR reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINANDNOTEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINANDNOT reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINANDEQ reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On BINAND reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 
-- On ASSIGN reduce production primary_exp -> APPEND LPAR primary_exp COMMA exp RPAR 

State 127:
primary_exp -> primary_exp . DOT IDENTIFIER [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . LSQUARE exp RSQUARE [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . DOT LPAR typeT RPAR [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON option(exp) RSQUARE [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON exp COLON exp RSQUARE [ RPAR LSQUARE DOT ]
primary_exp -> CAP LPAR primary_exp . RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RPAR shift to state 128
-- On LSQUARE shift to state 60
-- On DOT shift to state 109

State 128:
primary_exp -> CAP LPAR primary_exp RPAR . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On SEMICOLON reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On RSQUARE reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On RSHIFTEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On RSHIFT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On RPAR reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On PLUSPLUS reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On PLUSEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On PLUS reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On NEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MULTEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MULT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MODEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MOD reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MINUSMINUS reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MINUSEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On MINUS reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On LT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On LSQUARE reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On LSHIFTEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On LSHIFT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On LEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On LCURLY reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On GT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On GEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On EQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On DOT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On DIVEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On DIV reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On COMMA reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On COLON reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BOOLOR reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BOOLAND reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINXOREQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINXOR reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINOREQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINOR reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINANDNOTEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINANDNOT reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINANDEQ reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On BINAND reduce production primary_exp -> CAP LPAR primary_exp RPAR 
-- On ASSIGN reduce production primary_exp -> CAP LPAR primary_exp RPAR 

State 129:
primary_exp -> primary_exp . DOT IDENTIFIER [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . LSQUARE exp RSQUARE [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . DOT LPAR typeT RPAR [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON option(exp) RSQUARE [ RPAR LSQUARE DOT ]
primary_exp -> primary_exp . LSQUARE option(exp) COLON exp COLON exp RSQUARE [ RPAR LSQUARE DOT ]
primary_exp -> LEN LPAR primary_exp . RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On RPAR shift to state 130
-- On LSQUARE shift to state 60
-- On DOT shift to state 109

State 130:
primary_exp -> LEN LPAR primary_exp RPAR . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On SEMICOLON reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On RSQUARE reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On RSHIFTEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On RSHIFT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On RPAR reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On PLUSPLUS reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On PLUSEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On PLUS reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On NEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MULTEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MULT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MODEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MOD reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MINUSMINUS reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MINUSEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On MINUS reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On LT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On LSQUARE reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On LSHIFTEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On LSHIFT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On LEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On LCURLY reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On GT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On GEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On EQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On DOT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On DIVEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On DIV reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On COMMA reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On COLON reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BOOLOR reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BOOLAND reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINXOREQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINXOR reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINOREQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINOR reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINANDNOTEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINANDNOT reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINANDEQ reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On BINAND reduce production primary_exp -> LEN LPAR primary_exp RPAR 
-- On ASSIGN reduce production primary_exp -> LEN LPAR primary_exp RPAR 

State 131:
exp -> LPAR exp . RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . PLUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
-- On RSHIFT shift to state 66
-- On RPAR shift to state 132
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 132:
exp -> LPAR exp RPAR . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> LPAR exp RPAR 
-- On SEMICOLON reduce production exp -> LPAR exp RPAR 
-- On RSQUARE reduce production exp -> LPAR exp RPAR 
-- On RSHIFTEQ reduce production exp -> LPAR exp RPAR 
-- On RSHIFT reduce production exp -> LPAR exp RPAR 
-- On RPAR reduce production exp -> LPAR exp RPAR 
-- On PLUSPLUS reduce production exp -> LPAR exp RPAR 
-- On PLUSEQ reduce production exp -> LPAR exp RPAR 
-- On PLUS reduce production exp -> LPAR exp RPAR 
-- On NEQ reduce production exp -> LPAR exp RPAR 
-- On MULTEQ reduce production exp -> LPAR exp RPAR 
-- On MULT reduce production exp -> LPAR exp RPAR 
-- On MODEQ reduce production exp -> LPAR exp RPAR 
-- On MOD reduce production exp -> LPAR exp RPAR 
-- On MINUSMINUS reduce production exp -> LPAR exp RPAR 
-- On MINUSEQ reduce production exp -> LPAR exp RPAR 
-- On MINUS reduce production exp -> LPAR exp RPAR 
-- On LT reduce production exp -> LPAR exp RPAR 
-- On LSHIFTEQ reduce production exp -> LPAR exp RPAR 
-- On LSHIFT reduce production exp -> LPAR exp RPAR 
-- On LEQ reduce production exp -> LPAR exp RPAR 
-- On LCURLY reduce production exp -> LPAR exp RPAR 
-- On GT reduce production exp -> LPAR exp RPAR 
-- On GEQ reduce production exp -> LPAR exp RPAR 
-- On EQ reduce production exp -> LPAR exp RPAR 
-- On DIVEQ reduce production exp -> LPAR exp RPAR 
-- On DIV reduce production exp -> LPAR exp RPAR 
-- On COMMA reduce production exp -> LPAR exp RPAR 
-- On COLON reduce production exp -> LPAR exp RPAR 
-- On BOOLOR reduce production exp -> LPAR exp RPAR 
-- On BOOLAND reduce production exp -> LPAR exp RPAR 
-- On BINXOREQ reduce production exp -> LPAR exp RPAR 
-- On BINXOR reduce production exp -> LPAR exp RPAR 
-- On BINOREQ reduce production exp -> LPAR exp RPAR 
-- On BINOR reduce production exp -> LPAR exp RPAR 
-- On BINANDNOTEQ reduce production exp -> LPAR exp RPAR 
-- On BINANDNOT reduce production exp -> LPAR exp RPAR 
-- On BINANDEQ reduce production exp -> LPAR exp RPAR 
-- On BINAND reduce production exp -> LPAR exp RPAR 
-- On ASSIGN reduce production exp -> LPAR exp RPAR 

State 133:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> MINUS exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> MINUS exp 
-- On SEMICOLON reduce production exp -> MINUS exp 
-- On RSQUARE reduce production exp -> MINUS exp 
-- On RSHIFTEQ reduce production exp -> MINUS exp 
-- On RSHIFT reduce production exp -> MINUS exp 
-- On RPAR reduce production exp -> MINUS exp 
-- On PLUSPLUS reduce production exp -> MINUS exp 
-- On PLUSEQ reduce production exp -> MINUS exp 
-- On PLUS reduce production exp -> MINUS exp 
-- On NEQ reduce production exp -> MINUS exp 
-- On MULTEQ reduce production exp -> MINUS exp 
-- On MULT reduce production exp -> MINUS exp 
-- On MODEQ reduce production exp -> MINUS exp 
-- On MOD reduce production exp -> MINUS exp 
-- On MINUSMINUS reduce production exp -> MINUS exp 
-- On MINUSEQ reduce production exp -> MINUS exp 
-- On MINUS reduce production exp -> MINUS exp 
-- On LT reduce production exp -> MINUS exp 
-- On LSHIFTEQ reduce production exp -> MINUS exp 
-- On LSHIFT reduce production exp -> MINUS exp 
-- On LEQ reduce production exp -> MINUS exp 
-- On LCURLY reduce production exp -> MINUS exp 
-- On GT reduce production exp -> MINUS exp 
-- On GEQ reduce production exp -> MINUS exp 
-- On EQ reduce production exp -> MINUS exp 
-- On DIVEQ reduce production exp -> MINUS exp 
-- On DIV reduce production exp -> MINUS exp 
-- On COMMA reduce production exp -> MINUS exp 
-- On COLON reduce production exp -> MINUS exp 
-- On BOOLOR reduce production exp -> MINUS exp 
-- On BOOLAND reduce production exp -> MINUS exp 
-- On BINXOREQ reduce production exp -> MINUS exp 
-- On BINXOR reduce production exp -> MINUS exp 
-- On BINOREQ reduce production exp -> MINUS exp 
-- On BINOR reduce production exp -> MINUS exp 
-- On BINANDNOTEQ reduce production exp -> MINUS exp 
-- On BINANDNOT reduce production exp -> MINUS exp 
-- On BINANDEQ reduce production exp -> MINUS exp 
-- On BINAND reduce production exp -> MINUS exp 
-- On ASSIGN reduce production exp -> MINUS exp 

State 134:
primary_exp -> typeT . LPAR option(exp_list) RPAR [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSQUARE LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DOT DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
typeT -> MULT typeT . [ LPAR ]
-- On LPAR shift to state 55

State 135:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> MULT exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> MULT exp 
-- On SEMICOLON reduce production exp -> MULT exp 
-- On RSQUARE reduce production exp -> MULT exp 
-- On RSHIFTEQ reduce production exp -> MULT exp 
-- On RSHIFT reduce production exp -> MULT exp 
-- On RPAR reduce production exp -> MULT exp 
-- On PLUSPLUS reduce production exp -> MULT exp 
-- On PLUSEQ reduce production exp -> MULT exp 
-- On PLUS reduce production exp -> MULT exp 
-- On NEQ reduce production exp -> MULT exp 
-- On MULTEQ reduce production exp -> MULT exp 
-- On MULT reduce production exp -> MULT exp 
-- On MODEQ reduce production exp -> MULT exp 
-- On MOD reduce production exp -> MULT exp 
-- On MINUSMINUS reduce production exp -> MULT exp 
-- On MINUSEQ reduce production exp -> MULT exp 
-- On MINUS reduce production exp -> MULT exp 
-- On LT reduce production exp -> MULT exp 
-- On LSHIFTEQ reduce production exp -> MULT exp 
-- On LSHIFT reduce production exp -> MULT exp 
-- On LEQ reduce production exp -> MULT exp 
-- On LCURLY reduce production exp -> MULT exp 
-- On GT reduce production exp -> MULT exp 
-- On GEQ reduce production exp -> MULT exp 
-- On EQ reduce production exp -> MULT exp 
-- On DIVEQ reduce production exp -> MULT exp 
-- On DIV reduce production exp -> MULT exp 
-- On COMMA reduce production exp -> MULT exp 
-- On COLON reduce production exp -> MULT exp 
-- On BOOLOR reduce production exp -> MULT exp 
-- On BOOLAND reduce production exp -> MULT exp 
-- On BINXOREQ reduce production exp -> MULT exp 
-- On BINXOR reduce production exp -> MULT exp 
-- On BINOREQ reduce production exp -> MULT exp 
-- On BINOR reduce production exp -> MULT exp 
-- On BINANDNOTEQ reduce production exp -> MULT exp 
-- On BINANDNOT reduce production exp -> MULT exp 
-- On BINANDEQ reduce production exp -> MULT exp 
-- On BINAND reduce production exp -> MULT exp 
-- On ASSIGN reduce production exp -> MULT exp 

State 136:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> PLUS exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> PLUS exp 
-- On SEMICOLON reduce production exp -> PLUS exp 
-- On RSQUARE reduce production exp -> PLUS exp 
-- On RSHIFTEQ reduce production exp -> PLUS exp 
-- On RSHIFT reduce production exp -> PLUS exp 
-- On RPAR reduce production exp -> PLUS exp 
-- On PLUSPLUS reduce production exp -> PLUS exp 
-- On PLUSEQ reduce production exp -> PLUS exp 
-- On PLUS reduce production exp -> PLUS exp 
-- On NEQ reduce production exp -> PLUS exp 
-- On MULTEQ reduce production exp -> PLUS exp 
-- On MULT reduce production exp -> PLUS exp 
-- On MODEQ reduce production exp -> PLUS exp 
-- On MOD reduce production exp -> PLUS exp 
-- On MINUSMINUS reduce production exp -> PLUS exp 
-- On MINUSEQ reduce production exp -> PLUS exp 
-- On MINUS reduce production exp -> PLUS exp 
-- On LT reduce production exp -> PLUS exp 
-- On LSHIFTEQ reduce production exp -> PLUS exp 
-- On LSHIFT reduce production exp -> PLUS exp 
-- On LEQ reduce production exp -> PLUS exp 
-- On LCURLY reduce production exp -> PLUS exp 
-- On GT reduce production exp -> PLUS exp 
-- On GEQ reduce production exp -> PLUS exp 
-- On EQ reduce production exp -> PLUS exp 
-- On DIVEQ reduce production exp -> PLUS exp 
-- On DIV reduce production exp -> PLUS exp 
-- On COMMA reduce production exp -> PLUS exp 
-- On COLON reduce production exp -> PLUS exp 
-- On BOOLOR reduce production exp -> PLUS exp 
-- On BOOLAND reduce production exp -> PLUS exp 
-- On BINXOREQ reduce production exp -> PLUS exp 
-- On BINXOR reduce production exp -> PLUS exp 
-- On BINOREQ reduce production exp -> PLUS exp 
-- On BINOR reduce production exp -> PLUS exp 
-- On BINANDNOTEQ reduce production exp -> PLUS exp 
-- On BINANDNOT reduce production exp -> PLUS exp 
-- On BINANDEQ reduce production exp -> PLUS exp 
-- On BINAND reduce production exp -> PLUS exp 
-- On ASSIGN reduce production exp -> PLUS exp 

State 137:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> RECEIVE exp . [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSQUARE RSHIFTEQ RSHIFT RPAR PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV COMMA COLON BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
-- On SHORTASSIGN reduce production exp -> RECEIVE exp 
-- On SEMICOLON reduce production exp -> RECEIVE exp 
-- On RSQUARE reduce production exp -> RECEIVE exp 
-- On RSHIFTEQ reduce production exp -> RECEIVE exp 
-- On RSHIFT reduce production exp -> RECEIVE exp 
-- On RPAR reduce production exp -> RECEIVE exp 
-- On PLUSPLUS reduce production exp -> RECEIVE exp 
-- On PLUSEQ reduce production exp -> RECEIVE exp 
-- On PLUS reduce production exp -> RECEIVE exp 
-- On NEQ reduce production exp -> RECEIVE exp 
-- On MULTEQ reduce production exp -> RECEIVE exp 
-- On MULT reduce production exp -> RECEIVE exp 
-- On MODEQ reduce production exp -> RECEIVE exp 
-- On MOD reduce production exp -> RECEIVE exp 
-- On MINUSMINUS reduce production exp -> RECEIVE exp 
-- On MINUSEQ reduce production exp -> RECEIVE exp 
-- On MINUS reduce production exp -> RECEIVE exp 
-- On LT reduce production exp -> RECEIVE exp 
-- On LSHIFTEQ reduce production exp -> RECEIVE exp 
-- On LSHIFT reduce production exp -> RECEIVE exp 
-- On LEQ reduce production exp -> RECEIVE exp 
-- On LCURLY reduce production exp -> RECEIVE exp 
-- On GT reduce production exp -> RECEIVE exp 
-- On GEQ reduce production exp -> RECEIVE exp 
-- On EQ reduce production exp -> RECEIVE exp 
-- On DIVEQ reduce production exp -> RECEIVE exp 
-- On DIV reduce production exp -> RECEIVE exp 
-- On COMMA reduce production exp -> RECEIVE exp 
-- On COLON reduce production exp -> RECEIVE exp 
-- On BOOLOR reduce production exp -> RECEIVE exp 
-- On BOOLAND reduce production exp -> RECEIVE exp 
-- On BINXOREQ reduce production exp -> RECEIVE exp 
-- On BINXOR reduce production exp -> RECEIVE exp 
-- On BINOREQ reduce production exp -> RECEIVE exp 
-- On BINOR reduce production exp -> RECEIVE exp 
-- On BINANDNOTEQ reduce production exp -> RECEIVE exp 
-- On BINANDNOT reduce production exp -> RECEIVE exp 
-- On BINANDEQ reduce production exp -> RECEIVE exp 
-- On BINAND reduce production exp -> RECEIVE exp 
-- On ASSIGN reduce production exp -> RECEIVE exp 

State 138:
exp -> exp . PLUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSQUARE RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
typeT -> LSQUARE exp . RSQUARE typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On RSQUARE shift to state 139
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 139:
typeT -> LSQUARE exp RSQUARE . typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 140

State 140:
typeT -> LSQUARE exp RSQUARE typeT . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> LSQUARE exp RSQUARE typeT 
-- On RSQUARE reduce production typeT -> LSQUARE exp RSQUARE typeT 
-- On RPAR reduce production typeT -> LSQUARE exp RSQUARE typeT 
-- On LPAR reduce production typeT -> LSQUARE exp RSQUARE typeT 
-- On LCURLY reduce production typeT -> LSQUARE exp RSQUARE typeT 
-- On COMMA reduce production typeT -> LSQUARE exp RSQUARE typeT 
-- On ASSIGN reduce production typeT -> LSQUARE exp RSQUARE typeT 

State 141:
typeT -> MAP RSQUARE typeT . RSQUARE typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On RSQUARE shift to state 142

State 142:
typeT -> MAP RSQUARE typeT RSQUARE . typeT [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 143

State 143:
typeT -> MAP RSQUARE typeT RSQUARE typeT . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 
-- On RSQUARE reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 
-- On RPAR reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 
-- On LPAR reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 
-- On LCURLY reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 
-- On COMMA reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 
-- On ASSIGN reduce production typeT -> MAP RSQUARE typeT RSQUARE typeT 

State 144:
typeT -> MULT typeT . [ SEMICOLON RSQUARE RPAR LPAR LCURLY COMMA ASSIGN ]
-- On SEMICOLON reduce production typeT -> MULT typeT 
-- On RSQUARE reduce production typeT -> MULT typeT 
-- On RPAR reduce production typeT -> MULT typeT 
-- On LPAR reduce production typeT -> MULT typeT 
-- On LCURLY reduce production typeT -> MULT typeT 
-- On COMMA reduce production typeT -> MULT typeT 
-- On ASSIGN reduce production typeT -> MULT typeT 

State 145:
ident_list -> ident_list COMMA . IDENTIFIER [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ASSIGN ]
-- On IDENTIFIER shift to state 146

State 146:
ident_list -> ident_list COMMA IDENTIFIER . [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ASSIGN ]
-- On STRUCT reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On STRINGTYPE reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On RUNETYPE reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On MULT reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On MAP reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On LSQUARE reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On INTTYPE reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On INTERFACE reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On IDENTIFIER reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On FLOATTYPE reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On COMMA reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On CHAN reduce production ident_list -> ident_list COMMA IDENTIFIER 
-- On ASSIGN reduce production ident_list -> ident_list COMMA IDENTIFIER 

State 147:
field_decls -> field_decls ident_list typeT . SEMICOLON [ RCURLY IDENTIFIER ]
-- On SEMICOLON shift to state 148

State 148:
field_decls -> field_decls ident_list typeT SEMICOLON . [ RCURLY IDENTIFIER ]
-- On RCURLY reduce production field_decls -> field_decls ident_list typeT SEMICOLON 
-- On IDENTIFIER reduce production field_decls -> field_decls ident_list typeT SEMICOLON 

State 149:
var_spec -> ident_list ASSIGN . exp_list SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp_list shift to state 150
-- On exp shift to state 122

State 150:
exp_list -> exp_list . COMMA exp [ SEMICOLON COMMA ]
var_spec -> ident_list ASSIGN exp_list . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 151
-- On COMMA shift to state 120

State 151:
var_spec -> ident_list ASSIGN exp_list SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On TYPE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On STRUCT reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On STRINGTYPE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On STRINGLITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On RUNETYPE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On RUNELITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On RPAR reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On RETURN reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On RECEIVE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On RCURLY reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On PRINTLN reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On PRINT reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On PLUS reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On OCTINTLITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On MULT reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On MINUS reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On MAP reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On LSQUARE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On LPAR reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On LEN reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On LCURLY reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On INTTYPE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On INTERFACE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On IF reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On IDENTIFIER reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On HEXINTLITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On GOTO reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On GO reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On FUNC reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On FOR reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On FLOATTYPE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On FLOATLITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On FALLTHROUGH reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On EOF reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On DECINTLITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On CONTINUE reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On CHAN reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On CAP reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On BREAK reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On BOOLNOT reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On BINXOR reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On BININTLITERAL reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On BINAND reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 
-- On APPEND reduce production var_spec -> ident_list ASSIGN exp_list SEMICOLON 

State 152:
var_spec -> ident_list typeT . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
var_spec -> ident_list typeT . ASSIGN exp_list SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 153
-- On ASSIGN shift to state 154

State 153:
var_spec -> ident_list typeT SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production var_spec -> ident_list typeT SEMICOLON 
-- On TYPE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On STRUCT reduce production var_spec -> ident_list typeT SEMICOLON 
-- On STRINGTYPE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On STRINGLITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On RUNETYPE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On RUNELITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On RPAR reduce production var_spec -> ident_list typeT SEMICOLON 
-- On RETURN reduce production var_spec -> ident_list typeT SEMICOLON 
-- On RECEIVE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On RCURLY reduce production var_spec -> ident_list typeT SEMICOLON 
-- On PRINTLN reduce production var_spec -> ident_list typeT SEMICOLON 
-- On PRINT reduce production var_spec -> ident_list typeT SEMICOLON 
-- On PLUS reduce production var_spec -> ident_list typeT SEMICOLON 
-- On OCTINTLITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On MULT reduce production var_spec -> ident_list typeT SEMICOLON 
-- On MINUS reduce production var_spec -> ident_list typeT SEMICOLON 
-- On MAP reduce production var_spec -> ident_list typeT SEMICOLON 
-- On LSQUARE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On LPAR reduce production var_spec -> ident_list typeT SEMICOLON 
-- On LEN reduce production var_spec -> ident_list typeT SEMICOLON 
-- On LCURLY reduce production var_spec -> ident_list typeT SEMICOLON 
-- On INTTYPE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On INTERFACE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On IF reduce production var_spec -> ident_list typeT SEMICOLON 
-- On IDENTIFIER reduce production var_spec -> ident_list typeT SEMICOLON 
-- On HEXINTLITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On GOTO reduce production var_spec -> ident_list typeT SEMICOLON 
-- On GO reduce production var_spec -> ident_list typeT SEMICOLON 
-- On FUNC reduce production var_spec -> ident_list typeT SEMICOLON 
-- On FOR reduce production var_spec -> ident_list typeT SEMICOLON 
-- On FLOATTYPE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On FLOATLITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On FALLTHROUGH reduce production var_spec -> ident_list typeT SEMICOLON 
-- On EOF reduce production var_spec -> ident_list typeT SEMICOLON 
-- On DECINTLITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On CONTINUE reduce production var_spec -> ident_list typeT SEMICOLON 
-- On CHAN reduce production var_spec -> ident_list typeT SEMICOLON 
-- On CAP reduce production var_spec -> ident_list typeT SEMICOLON 
-- On BREAK reduce production var_spec -> ident_list typeT SEMICOLON 
-- On BOOLNOT reduce production var_spec -> ident_list typeT SEMICOLON 
-- On BINXOR reduce production var_spec -> ident_list typeT SEMICOLON 
-- On BININTLITERAL reduce production var_spec -> ident_list typeT SEMICOLON 
-- On BINAND reduce production var_spec -> ident_list typeT SEMICOLON 
-- On APPEND reduce production var_spec -> ident_list typeT SEMICOLON 

State 154:
var_spec -> ident_list typeT ASSIGN . exp_list SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp_list shift to state 155
-- On exp shift to state 122

State 155:
exp_list -> exp_list . COMMA exp [ SEMICOLON COMMA ]
var_spec -> ident_list typeT ASSIGN exp_list . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 156
-- On COMMA shift to state 120

State 156:
var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On TYPE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On STRUCT reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On STRINGTYPE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On STRINGLITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On RUNETYPE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On RUNELITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On RPAR reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On RETURN reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On RECEIVE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On RCURLY reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On PRINTLN reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On PRINT reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On PLUS reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On OCTINTLITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On MULT reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On MINUS reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On MAP reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On LSQUARE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On LPAR reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On LEN reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On LCURLY reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On INTTYPE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On INTERFACE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On IF reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On IDENTIFIER reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On HEXINTLITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On GOTO reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On GO reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On FUNC reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On FOR reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On FLOATTYPE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On FLOATLITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On FALLTHROUGH reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On EOF reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On DECINTLITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On CONTINUE reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On CHAN reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On CAP reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On BREAK reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On BOOLNOT reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On BINXOR reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On BININTLITERAL reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On BINAND reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 
-- On APPEND reduce production var_spec -> ident_list typeT ASSIGN exp_list SEMICOLON 

State 157:
var_specs -> var_spec . [ RPAR IDENTIFIER ]
-- On RPAR reduce production var_specs -> var_spec 
-- On IDENTIFIER reduce production var_specs -> var_spec 

State 158:
var_decls -> VAR var_spec . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production var_decls -> VAR var_spec 
-- On TYPE reduce production var_decls -> VAR var_spec 
-- On STRUCT reduce production var_decls -> VAR var_spec 
-- On STRINGTYPE reduce production var_decls -> VAR var_spec 
-- On STRINGLITERAL reduce production var_decls -> VAR var_spec 
-- On RUNETYPE reduce production var_decls -> VAR var_spec 
-- On RUNELITERAL reduce production var_decls -> VAR var_spec 
-- On RETURN reduce production var_decls -> VAR var_spec 
-- On RECEIVE reduce production var_decls -> VAR var_spec 
-- On RCURLY reduce production var_decls -> VAR var_spec 
-- On PRINTLN reduce production var_decls -> VAR var_spec 
-- On PRINT reduce production var_decls -> VAR var_spec 
-- On PLUS reduce production var_decls -> VAR var_spec 
-- On OCTINTLITERAL reduce production var_decls -> VAR var_spec 
-- On MULT reduce production var_decls -> VAR var_spec 
-- On MINUS reduce production var_decls -> VAR var_spec 
-- On MAP reduce production var_decls -> VAR var_spec 
-- On LSQUARE reduce production var_decls -> VAR var_spec 
-- On LPAR reduce production var_decls -> VAR var_spec 
-- On LEN reduce production var_decls -> VAR var_spec 
-- On LCURLY reduce production var_decls -> VAR var_spec 
-- On INTTYPE reduce production var_decls -> VAR var_spec 
-- On INTERFACE reduce production var_decls -> VAR var_spec 
-- On IF reduce production var_decls -> VAR var_spec 
-- On IDENTIFIER reduce production var_decls -> VAR var_spec 
-- On HEXINTLITERAL reduce production var_decls -> VAR var_spec 
-- On GOTO reduce production var_decls -> VAR var_spec 
-- On GO reduce production var_decls -> VAR var_spec 
-- On FUNC reduce production var_decls -> VAR var_spec 
-- On FOR reduce production var_decls -> VAR var_spec 
-- On FLOATTYPE reduce production var_decls -> VAR var_spec 
-- On FLOATLITERAL reduce production var_decls -> VAR var_spec 
-- On FALLTHROUGH reduce production var_decls -> VAR var_spec 
-- On EOF reduce production var_decls -> VAR var_spec 
-- On DECINTLITERAL reduce production var_decls -> VAR var_spec 
-- On CONTINUE reduce production var_decls -> VAR var_spec 
-- On CHAN reduce production var_decls -> VAR var_spec 
-- On CAP reduce production var_decls -> VAR var_spec 
-- On BREAK reduce production var_decls -> VAR var_spec 
-- On BOOLNOT reduce production var_decls -> VAR var_spec 
-- On BINXOR reduce production var_decls -> VAR var_spec 
-- On BININTLITERAL reduce production var_decls -> VAR var_spec 
-- On BINAND reduce production var_decls -> VAR var_spec 
-- On APPEND reduce production var_decls -> VAR var_spec 

State 159:
type_decls -> TYPE . type_spec [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
type_decls -> TYPE . LPAR type_specs RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LPAR shift to state 160
-- On IDENTIFIER shift to state 161
-- On type_spec shift to state 172

State 160:
type_decls -> TYPE LPAR . type_specs RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On IDENTIFIER shift to state 161
-- On type_specs shift to state 167
-- On type_spec shift to state 171

State 161:
type_spec -> IDENTIFIER . ASSIGN typeT SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
type_spec -> IDENTIFIER . typeT SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On ASSIGN shift to state 162
-- On typeT shift to state 165

State 162:
type_spec -> IDENTIFIER ASSIGN . typeT SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 163

State 163:
type_spec -> IDENTIFIER ASSIGN typeT . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 164

State 164:
type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On TYPE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On STRUCT reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On STRINGTYPE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On STRINGLITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On RUNETYPE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On RUNELITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On RPAR reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On RETURN reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On RECEIVE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On RCURLY reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On PRINTLN reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On PRINT reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On PLUS reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On OCTINTLITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On MULT reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On MINUS reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On MAP reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On LSQUARE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On LPAR reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On LEN reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On LCURLY reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On INTTYPE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On INTERFACE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On IF reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On IDENTIFIER reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On HEXINTLITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On GOTO reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On GO reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On FUNC reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On FOR reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On FLOATTYPE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On FLOATLITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On FALLTHROUGH reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On EOF reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On DECINTLITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On CONTINUE reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On CHAN reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On CAP reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On BREAK reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On BOOLNOT reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On BINXOR reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On BININTLITERAL reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On BINAND reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 
-- On APPEND reduce production type_spec -> IDENTIFIER ASSIGN typeT SEMICOLON 

State 165:
type_spec -> IDENTIFIER typeT . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 166

State 166:
type_spec -> IDENTIFIER typeT SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RPAR RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On TYPE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On STRUCT reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On STRINGTYPE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On STRINGLITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On RUNETYPE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On RUNELITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On RPAR reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On RETURN reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On RECEIVE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On RCURLY reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On PRINTLN reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On PRINT reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On PLUS reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On OCTINTLITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On MULT reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On MINUS reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On MAP reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On LSQUARE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On LPAR reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On LEN reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On LCURLY reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On INTTYPE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On INTERFACE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On IF reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On IDENTIFIER reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On HEXINTLITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On GOTO reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On GO reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On FUNC reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On FOR reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On FLOATTYPE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On FLOATLITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On FALLTHROUGH reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On EOF reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On DECINTLITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On CONTINUE reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On CHAN reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On CAP reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On BREAK reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On BOOLNOT reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On BINXOR reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On BININTLITERAL reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On BINAND reduce production type_spec -> IDENTIFIER typeT SEMICOLON 
-- On APPEND reduce production type_spec -> IDENTIFIER typeT SEMICOLON 

State 167:
type_decls -> TYPE LPAR type_specs . RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
type_specs -> type_specs . type_spec [ RPAR IDENTIFIER ]
-- On RPAR shift to state 168
-- On IDENTIFIER shift to state 161
-- On type_spec shift to state 170

State 168:
type_decls -> TYPE LPAR type_specs RPAR . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 169

State 169:
type_decls -> TYPE LPAR type_specs RPAR SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On TYPE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On STRUCT reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On STRINGTYPE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On STRINGLITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On RUNETYPE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On RUNELITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On RETURN reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On RECEIVE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On RCURLY reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On PRINTLN reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On PRINT reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On PLUS reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On OCTINTLITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On MULT reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On MINUS reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On MAP reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On LSQUARE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On LPAR reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On LEN reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On LCURLY reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On INTTYPE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On INTERFACE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On IF reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On IDENTIFIER reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On HEXINTLITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On GOTO reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On GO reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On FUNC reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On FOR reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On FLOATTYPE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On FLOATLITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On FALLTHROUGH reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On EOF reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On DECINTLITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On CONTINUE reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On CHAN reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On CAP reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On BREAK reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On BOOLNOT reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On BINXOR reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On BININTLITERAL reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On BINAND reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 
-- On APPEND reduce production type_decls -> TYPE LPAR type_specs RPAR SEMICOLON 

State 170:
type_specs -> type_specs type_spec . [ RPAR IDENTIFIER ]
-- On RPAR reduce production type_specs -> type_specs type_spec 
-- On IDENTIFIER reduce production type_specs -> type_specs type_spec 

State 171:
type_specs -> type_spec . [ RPAR IDENTIFIER ]
-- On RPAR reduce production type_specs -> type_spec 
-- On IDENTIFIER reduce production type_specs -> type_spec 

State 172:
type_decls -> TYPE type_spec . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production type_decls -> TYPE type_spec 
-- On TYPE reduce production type_decls -> TYPE type_spec 
-- On STRUCT reduce production type_decls -> TYPE type_spec 
-- On STRINGTYPE reduce production type_decls -> TYPE type_spec 
-- On STRINGLITERAL reduce production type_decls -> TYPE type_spec 
-- On RUNETYPE reduce production type_decls -> TYPE type_spec 
-- On RUNELITERAL reduce production type_decls -> TYPE type_spec 
-- On RETURN reduce production type_decls -> TYPE type_spec 
-- On RECEIVE reduce production type_decls -> TYPE type_spec 
-- On RCURLY reduce production type_decls -> TYPE type_spec 
-- On PRINTLN reduce production type_decls -> TYPE type_spec 
-- On PRINT reduce production type_decls -> TYPE type_spec 
-- On PLUS reduce production type_decls -> TYPE type_spec 
-- On OCTINTLITERAL reduce production type_decls -> TYPE type_spec 
-- On MULT reduce production type_decls -> TYPE type_spec 
-- On MINUS reduce production type_decls -> TYPE type_spec 
-- On MAP reduce production type_decls -> TYPE type_spec 
-- On LSQUARE reduce production type_decls -> TYPE type_spec 
-- On LPAR reduce production type_decls -> TYPE type_spec 
-- On LEN reduce production type_decls -> TYPE type_spec 
-- On LCURLY reduce production type_decls -> TYPE type_spec 
-- On INTTYPE reduce production type_decls -> TYPE type_spec 
-- On INTERFACE reduce production type_decls -> TYPE type_spec 
-- On IF reduce production type_decls -> TYPE type_spec 
-- On IDENTIFIER reduce production type_decls -> TYPE type_spec 
-- On HEXINTLITERAL reduce production type_decls -> TYPE type_spec 
-- On GOTO reduce production type_decls -> TYPE type_spec 
-- On GO reduce production type_decls -> TYPE type_spec 
-- On FUNC reduce production type_decls -> TYPE type_spec 
-- On FOR reduce production type_decls -> TYPE type_spec 
-- On FLOATTYPE reduce production type_decls -> TYPE type_spec 
-- On FLOATLITERAL reduce production type_decls -> TYPE type_spec 
-- On FALLTHROUGH reduce production type_decls -> TYPE type_spec 
-- On EOF reduce production type_decls -> TYPE type_spec 
-- On DECINTLITERAL reduce production type_decls -> TYPE type_spec 
-- On CONTINUE reduce production type_decls -> TYPE type_spec 
-- On CHAN reduce production type_decls -> TYPE type_spec 
-- On CAP reduce production type_decls -> TYPE type_spec 
-- On BREAK reduce production type_decls -> TYPE type_spec 
-- On BOOLNOT reduce production type_decls -> TYPE type_spec 
-- On BINXOR reduce production type_decls -> TYPE type_spec 
-- On BININTLITERAL reduce production type_decls -> TYPE type_spec 
-- On BINAND reduce production type_decls -> TYPE type_spec 
-- On APPEND reduce production type_decls -> TYPE type_spec 

State 173:
func_decl -> FUNC . IDENTIFIER LPAR option(func_params) RPAR option(typeT) body [ VAR TYPE FUNC EOF ]
-- On IDENTIFIER shift to state 174

State 174:
func_decl -> FUNC IDENTIFIER . LPAR option(func_params) RPAR option(typeT) body [ VAR TYPE FUNC EOF ]
-- On LPAR shift to state 175

State 175:
func_decl -> FUNC IDENTIFIER LPAR . option(func_params) RPAR option(typeT) body [ VAR TYPE FUNC EOF ]
-- On IDENTIFIER shift to state 11
-- On option(func_params) shift to state 176
-- On ident_list shift to state 293
-- On func_params shift to state 295
-- On RPAR reduce production option(func_params) -> 

State 176:
func_decl -> FUNC IDENTIFIER LPAR option(func_params) . RPAR option(typeT) body [ VAR TYPE FUNC EOF ]
-- On RPAR shift to state 177

State 177:
func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR . option(typeT) body [ VAR TYPE FUNC EOF ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On CHAN shift to state 35
-- On typeT shift to state 178
-- On option(typeT) shift to state 179
-- On LCURLY reduce production option(typeT) -> 

State 178:
option(typeT) -> typeT . [ LCURLY ]
-- On LCURLY reduce production option(typeT) -> typeT 

State 179:
func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR option(typeT) . body [ VAR TYPE FUNC EOF ]
-- On LCURLY shift to state 180
-- On body shift to state 292

State 180:
body -> LCURLY . statement_list RCURLY option(SEMICOLON) [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF ELSE DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On statement_list shift to state 181
-- On VAR reduce production statement_list -> 
-- On TYPE reduce production statement_list -> 
-- On STRUCT reduce production statement_list -> 
-- On STRINGTYPE reduce production statement_list -> 
-- On STRINGLITERAL reduce production statement_list -> 
-- On RUNETYPE reduce production statement_list -> 
-- On RUNELITERAL reduce production statement_list -> 
-- On RETURN reduce production statement_list -> 
-- On RECEIVE reduce production statement_list -> 
-- On RCURLY reduce production statement_list -> 
-- On PRINTLN reduce production statement_list -> 
-- On PRINT reduce production statement_list -> 
-- On PLUS reduce production statement_list -> 
-- On OCTINTLITERAL reduce production statement_list -> 
-- On MULT reduce production statement_list -> 
-- On MINUS reduce production statement_list -> 
-- On MAP reduce production statement_list -> 
-- On LSQUARE reduce production statement_list -> 
-- On LPAR reduce production statement_list -> 
-- On LEN reduce production statement_list -> 
-- On LCURLY reduce production statement_list -> 
-- On INTTYPE reduce production statement_list -> 
-- On INTERFACE reduce production statement_list -> 
-- On IF reduce production statement_list -> 
-- On IDENTIFIER reduce production statement_list -> 
-- On HEXINTLITERAL reduce production statement_list -> 
-- On GOTO reduce production statement_list -> 
-- On GO reduce production statement_list -> 
-- On FOR reduce production statement_list -> 
-- On FLOATTYPE reduce production statement_list -> 
-- On FLOATLITERAL reduce production statement_list -> 
-- On FALLTHROUGH reduce production statement_list -> 
-- On DECINTLITERAL reduce production statement_list -> 
-- On CONTINUE reduce production statement_list -> 
-- On CHAN reduce production statement_list -> 
-- On CAP reduce production statement_list -> 
-- On BREAK reduce production statement_list -> 
-- On BOOLNOT reduce production statement_list -> 
-- On BINXOR reduce production statement_list -> 
-- On BININTLITERAL reduce production statement_list -> 
-- On BINAND reduce production statement_list -> 
-- On APPEND reduce production statement_list -> 

State 181:
body -> LCURLY statement_list . RCURLY option(SEMICOLON) [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF ELSE DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . var_decls [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . type_decls [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . GO exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . RETURN option(exp) SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . BREAK SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . CONTINUE SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . GOTO IDENTIFIER SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . FALLTHROUGH SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . simple_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
statement_list -> statement_list . for_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR shift to state 9
-- On TYPE shift to state 159
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RETURN shift to state 182
-- On RECEIVE shift to state 37
-- On RCURLY shift to state 186
-- On PRINTLN shift to state 189
-- On PRINT shift to state 194
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On LCURLY shift to state 180
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IF shift to state 199
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On GOTO shift to state 255
-- On GO shift to state 258
-- On FOR shift to state 261
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On FALLTHROUGH shift to state 280
-- On DECINTLITERAL shift to state 48
-- On CONTINUE shift to state 282
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BREAK shift to state 284
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On var_decls shift to state 286
-- On type_decls shift to state 287
-- On typeT shift to state 54
-- On simple_statement shift to state 288
-- On primary_exp shift to state 59
-- On if_statement shift to state 289
-- On for_statement shift to state 290
-- On exp shift to state 269
-- On body shift to state 291

State 182:
statement_list -> statement_list RETURN . option(exp) SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On option(exp) shift to state 183
-- On exp shift to state 185
-- On SEMICOLON reduce production option(exp) -> 

State 183:
statement_list -> statement_list RETURN option(exp) . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 184

State 184:
statement_list -> statement_list RETURN option(exp) SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On TYPE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On STRUCT reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On STRINGTYPE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On STRINGLITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On RUNETYPE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On RUNELITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On RETURN reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On RECEIVE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On RCURLY reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On PRINTLN reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On PRINT reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On PLUS reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On OCTINTLITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On MULT reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On MINUS reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On MAP reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On LSQUARE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On LPAR reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On LEN reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On LCURLY reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On INTTYPE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On INTERFACE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On IF reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On IDENTIFIER reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On HEXINTLITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On GOTO reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On GO reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On FOR reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On FLOATTYPE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On FLOATLITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On FALLTHROUGH reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On DECINTLITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On CONTINUE reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On CHAN reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On CAP reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On BREAK reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On BOOLNOT reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On BINXOR reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On BININTLITERAL reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On BINAND reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 
-- On APPEND reduce production statement_list -> statement_list RETURN option(exp) SEMICOLON 

State 185:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
option(exp) -> exp . [ SEMICOLON ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On SEMICOLON reduce production option(exp) -> exp 

State 186:
body -> LCURLY statement_list RCURLY . option(SEMICOLON) [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF ELSE DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 187
-- On option(SEMICOLON) shift to state 188
-- On VAR reduce production option(SEMICOLON) -> 
-- On TYPE reduce production option(SEMICOLON) -> 
-- On STRUCT reduce production option(SEMICOLON) -> 
-- On STRINGTYPE reduce production option(SEMICOLON) -> 
-- On STRINGLITERAL reduce production option(SEMICOLON) -> 
-- On RUNETYPE reduce production option(SEMICOLON) -> 
-- On RUNELITERAL reduce production option(SEMICOLON) -> 
-- On RETURN reduce production option(SEMICOLON) -> 
-- On RECEIVE reduce production option(SEMICOLON) -> 
-- On RCURLY reduce production option(SEMICOLON) -> 
-- On PRINTLN reduce production option(SEMICOLON) -> 
-- On PRINT reduce production option(SEMICOLON) -> 
-- On PLUS reduce production option(SEMICOLON) -> 
-- On OCTINTLITERAL reduce production option(SEMICOLON) -> 
-- On MULT reduce production option(SEMICOLON) -> 
-- On MINUS reduce production option(SEMICOLON) -> 
-- On MAP reduce production option(SEMICOLON) -> 
-- On LSQUARE reduce production option(SEMICOLON) -> 
-- On LPAR reduce production option(SEMICOLON) -> 
-- On LEN reduce production option(SEMICOLON) -> 
-- On LCURLY reduce production option(SEMICOLON) -> 
-- On INTTYPE reduce production option(SEMICOLON) -> 
-- On INTERFACE reduce production option(SEMICOLON) -> 
-- On IF reduce production option(SEMICOLON) -> 
-- On IDENTIFIER reduce production option(SEMICOLON) -> 
-- On HEXINTLITERAL reduce production option(SEMICOLON) -> 
-- On GOTO reduce production option(SEMICOLON) -> 
-- On GO reduce production option(SEMICOLON) -> 
-- On FUNC reduce production option(SEMICOLON) -> 
-- On FOR reduce production option(SEMICOLON) -> 
-- On FLOATTYPE reduce production option(SEMICOLON) -> 
-- On FLOATLITERAL reduce production option(SEMICOLON) -> 
-- On FALLTHROUGH reduce production option(SEMICOLON) -> 
-- On EOF reduce production option(SEMICOLON) -> 
-- On ELSE reduce production option(SEMICOLON) -> 
-- On DECINTLITERAL reduce production option(SEMICOLON) -> 
-- On CONTINUE reduce production option(SEMICOLON) -> 
-- On CHAN reduce production option(SEMICOLON) -> 
-- On CAP reduce production option(SEMICOLON) -> 
-- On BREAK reduce production option(SEMICOLON) -> 
-- On BOOLNOT reduce production option(SEMICOLON) -> 
-- On BINXOR reduce production option(SEMICOLON) -> 
-- On BININTLITERAL reduce production option(SEMICOLON) -> 
-- On BINAND reduce production option(SEMICOLON) -> 
-- On APPEND reduce production option(SEMICOLON) -> 

State 187:
option(SEMICOLON) -> SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF ELSE DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production option(SEMICOLON) -> SEMICOLON 
-- On TYPE reduce production option(SEMICOLON) -> SEMICOLON 
-- On STRUCT reduce production option(SEMICOLON) -> SEMICOLON 
-- On STRINGTYPE reduce production option(SEMICOLON) -> SEMICOLON 
-- On STRINGLITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On RUNETYPE reduce production option(SEMICOLON) -> SEMICOLON 
-- On RUNELITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On RETURN reduce production option(SEMICOLON) -> SEMICOLON 
-- On RECEIVE reduce production option(SEMICOLON) -> SEMICOLON 
-- On RCURLY reduce production option(SEMICOLON) -> SEMICOLON 
-- On PRINTLN reduce production option(SEMICOLON) -> SEMICOLON 
-- On PRINT reduce production option(SEMICOLON) -> SEMICOLON 
-- On PLUS reduce production option(SEMICOLON) -> SEMICOLON 
-- On OCTINTLITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On MULT reduce production option(SEMICOLON) -> SEMICOLON 
-- On MINUS reduce production option(SEMICOLON) -> SEMICOLON 
-- On MAP reduce production option(SEMICOLON) -> SEMICOLON 
-- On LSQUARE reduce production option(SEMICOLON) -> SEMICOLON 
-- On LPAR reduce production option(SEMICOLON) -> SEMICOLON 
-- On LEN reduce production option(SEMICOLON) -> SEMICOLON 
-- On LCURLY reduce production option(SEMICOLON) -> SEMICOLON 
-- On INTTYPE reduce production option(SEMICOLON) -> SEMICOLON 
-- On INTERFACE reduce production option(SEMICOLON) -> SEMICOLON 
-- On IF reduce production option(SEMICOLON) -> SEMICOLON 
-- On IDENTIFIER reduce production option(SEMICOLON) -> SEMICOLON 
-- On HEXINTLITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On GOTO reduce production option(SEMICOLON) -> SEMICOLON 
-- On GO reduce production option(SEMICOLON) -> SEMICOLON 
-- On FUNC reduce production option(SEMICOLON) -> SEMICOLON 
-- On FOR reduce production option(SEMICOLON) -> SEMICOLON 
-- On FLOATTYPE reduce production option(SEMICOLON) -> SEMICOLON 
-- On FLOATLITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On FALLTHROUGH reduce production option(SEMICOLON) -> SEMICOLON 
-- On EOF reduce production option(SEMICOLON) -> SEMICOLON 
-- On ELSE reduce production option(SEMICOLON) -> SEMICOLON 
-- On DECINTLITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On CONTINUE reduce production option(SEMICOLON) -> SEMICOLON 
-- On CHAN reduce production option(SEMICOLON) -> SEMICOLON 
-- On CAP reduce production option(SEMICOLON) -> SEMICOLON 
-- On BREAK reduce production option(SEMICOLON) -> SEMICOLON 
-- On BOOLNOT reduce production option(SEMICOLON) -> SEMICOLON 
-- On BINXOR reduce production option(SEMICOLON) -> SEMICOLON 
-- On BININTLITERAL reduce production option(SEMICOLON) -> SEMICOLON 
-- On BINAND reduce production option(SEMICOLON) -> SEMICOLON 
-- On APPEND reduce production option(SEMICOLON) -> SEMICOLON 

State 188:
body -> LCURLY statement_list RCURLY option(SEMICOLON) . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FUNC FOR FLOATTYPE FLOATLITERAL FALLTHROUGH EOF ELSE DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On TYPE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On STRUCT reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On STRINGTYPE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On STRINGLITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On RUNETYPE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On RUNELITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On RETURN reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On RECEIVE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On RCURLY reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On PRINTLN reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On PRINT reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On PLUS reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On OCTINTLITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On MULT reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On MINUS reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On MAP reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On LSQUARE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On LPAR reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On LEN reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On LCURLY reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On INTTYPE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On INTERFACE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On IF reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On IDENTIFIER reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On HEXINTLITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On GOTO reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On GO reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On FUNC reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On FOR reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On FLOATTYPE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On FLOATLITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On FALLTHROUGH reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On EOF reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On ELSE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On DECINTLITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On CONTINUE reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On CHAN reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On CAP reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On BREAK reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On BOOLNOT reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On BINXOR reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On BININTLITERAL reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On BINAND reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 
-- On APPEND reduce production body -> LCURLY statement_list RCURLY option(SEMICOLON) 

State 189:
simple_statement -> PRINTLN . LPAR exp RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LPAR shift to state 190

State 190:
simple_statement -> PRINTLN LPAR . exp RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 191

State 191:
exp -> exp . PLUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> PRINTLN LPAR exp . RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On RSHIFT shift to state 66
-- On RPAR shift to state 192
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 192:
simple_statement -> PRINTLN LPAR exp RPAR . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 193

State 193:
simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On TYPE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On STRUCT reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On RETURN reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On RECEIVE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On RCURLY reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On PRINTLN reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On PRINT reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On PLUS reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On MULT reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On MINUS reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On MAP reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On LSQUARE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On LPAR reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On LEN reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On LCURLY reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On INTTYPE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On INTERFACE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On IF reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On GOTO reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On GO reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On FOR reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On CONTINUE reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On CHAN reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On CAP reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On BREAK reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On BINXOR reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On BINAND reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 
-- On APPEND reduce production simple_statement -> PRINTLN LPAR exp RPAR SEMICOLON 

State 194:
simple_statement -> PRINT . LPAR exp RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LPAR shift to state 195

State 195:
simple_statement -> PRINT LPAR . exp RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 196

State 196:
exp -> exp . PLUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSHIFT RPAR PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> PRINT LPAR exp . RPAR SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On RSHIFT shift to state 66
-- On RPAR shift to state 197
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 197:
simple_statement -> PRINT LPAR exp RPAR . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 198

State 198:
simple_statement -> PRINT LPAR exp RPAR SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On TYPE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On STRUCT reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On RETURN reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On RECEIVE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On RCURLY reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On PRINTLN reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On PRINT reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On PLUS reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On MULT reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On MINUS reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On MAP reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On LSQUARE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On LPAR reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On LEN reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On LCURLY reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On INTTYPE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On INTERFACE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On IF reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On GOTO reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On GO reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On FOR reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On CONTINUE reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On CHAN reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On CAP reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On BREAK reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On BINXOR reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On BINAND reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 
-- On APPEND reduce production simple_statement -> PRINT LPAR exp RPAR SEMICOLON 

State 199:
if_statement -> IF . simple_statement exp body ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF . simple_statement exp body ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF . exp body ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF . exp body ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF . exp body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF . simple_statement exp body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PRINTLN shift to state 189
-- On PRINT shift to state 194
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On simple_statement shift to state 200
-- On primary_exp shift to state 59
-- On exp shift to state 206

State 200:
if_statement -> IF simple_statement . exp body ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement . exp body ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement . exp body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 201

State 201:
exp -> exp . PLUS exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ LCURLY GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
if_statement -> IF simple_statement exp . body ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement exp . body ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement exp . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On LCURLY shift to state 180
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84
-- On body shift to state 202

State 202:
if_statement -> IF simple_statement exp body . ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement exp body . ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement exp body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On ELSE shift to state 203
-- On VAR reduce production if_statement -> IF simple_statement exp body 
-- On TYPE reduce production if_statement -> IF simple_statement exp body 
-- On STRUCT reduce production if_statement -> IF simple_statement exp body 
-- On STRINGTYPE reduce production if_statement -> IF simple_statement exp body 
-- On STRINGLITERAL reduce production if_statement -> IF simple_statement exp body 
-- On RUNETYPE reduce production if_statement -> IF simple_statement exp body 
-- On RUNELITERAL reduce production if_statement -> IF simple_statement exp body 
-- On RETURN reduce production if_statement -> IF simple_statement exp body 
-- On RECEIVE reduce production if_statement -> IF simple_statement exp body 
-- On RCURLY reduce production if_statement -> IF simple_statement exp body 
-- On PRINTLN reduce production if_statement -> IF simple_statement exp body 
-- On PRINT reduce production if_statement -> IF simple_statement exp body 
-- On PLUS reduce production if_statement -> IF simple_statement exp body 
-- On OCTINTLITERAL reduce production if_statement -> IF simple_statement exp body 
-- On MULT reduce production if_statement -> IF simple_statement exp body 
-- On MINUS reduce production if_statement -> IF simple_statement exp body 
-- On MAP reduce production if_statement -> IF simple_statement exp body 
-- On LSQUARE reduce production if_statement -> IF simple_statement exp body 
-- On LPAR reduce production if_statement -> IF simple_statement exp body 
-- On LEN reduce production if_statement -> IF simple_statement exp body 
-- On LCURLY reduce production if_statement -> IF simple_statement exp body 
-- On INTTYPE reduce production if_statement -> IF simple_statement exp body 
-- On INTERFACE reduce production if_statement -> IF simple_statement exp body 
-- On IF reduce production if_statement -> IF simple_statement exp body 
-- On IDENTIFIER reduce production if_statement -> IF simple_statement exp body 
-- On HEXINTLITERAL reduce production if_statement -> IF simple_statement exp body 
-- On GOTO reduce production if_statement -> IF simple_statement exp body 
-- On GO reduce production if_statement -> IF simple_statement exp body 
-- On FOR reduce production if_statement -> IF simple_statement exp body 
-- On FLOATTYPE reduce production if_statement -> IF simple_statement exp body 
-- On FLOATLITERAL reduce production if_statement -> IF simple_statement exp body 
-- On FALLTHROUGH reduce production if_statement -> IF simple_statement exp body 
-- On DECINTLITERAL reduce production if_statement -> IF simple_statement exp body 
-- On CONTINUE reduce production if_statement -> IF simple_statement exp body 
-- On CHAN reduce production if_statement -> IF simple_statement exp body 
-- On CAP reduce production if_statement -> IF simple_statement exp body 
-- On BREAK reduce production if_statement -> IF simple_statement exp body 
-- On BOOLNOT reduce production if_statement -> IF simple_statement exp body 
-- On BINXOR reduce production if_statement -> IF simple_statement exp body 
-- On BININTLITERAL reduce production if_statement -> IF simple_statement exp body 
-- On BINAND reduce production if_statement -> IF simple_statement exp body 
-- On APPEND reduce production if_statement -> IF simple_statement exp body 

State 203:
if_statement -> IF simple_statement exp body ELSE . if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF simple_statement exp body ELSE . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On IF shift to state 199
-- On if_statement shift to state 204
-- On body shift to state 205

State 204:
if_statement -> IF simple_statement exp body ELSE if_statement . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On TYPE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On STRUCT reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On STRINGTYPE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On STRINGLITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On RUNETYPE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On RUNELITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On RETURN reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On RECEIVE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On RCURLY reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On PRINTLN reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On PRINT reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On PLUS reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On OCTINTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On MULT reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On MINUS reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On MAP reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On LSQUARE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On LPAR reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On LEN reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On LCURLY reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On INTTYPE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On INTERFACE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On IF reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On IDENTIFIER reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On HEXINTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On GOTO reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On GO reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On FOR reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On FLOATTYPE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On FLOATLITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On FALLTHROUGH reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On DECINTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On CONTINUE reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On CHAN reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On CAP reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On BREAK reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On BOOLNOT reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On BINXOR reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On BININTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On BINAND reduce production if_statement -> IF simple_statement exp body ELSE if_statement 
-- On APPEND reduce production if_statement -> IF simple_statement exp body ELSE if_statement 

State 205:
if_statement -> IF simple_statement exp body ELSE body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On TYPE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On STRUCT reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On STRINGTYPE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On STRINGLITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On RUNETYPE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On RUNELITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On RETURN reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On RECEIVE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On RCURLY reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On PRINTLN reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On PRINT reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On PLUS reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On OCTINTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On MULT reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On MINUS reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On MAP reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On LSQUARE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On LPAR reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On LEN reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On LCURLY reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On INTTYPE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On INTERFACE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On IF reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On IDENTIFIER reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On HEXINTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On GOTO reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On GO reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On FOR reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On FLOATTYPE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On FLOATLITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On FALLTHROUGH reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On DECINTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On CONTINUE reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On CHAN reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On CAP reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On BREAK reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On BOOLNOT reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On BINXOR reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On BININTLITERAL reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On BINAND reduce production if_statement -> IF simple_statement exp body ELSE body 
-- On APPEND reduce production if_statement -> IF simple_statement exp body ELSE body 

State 206:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
if_statement -> IF exp . body ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF exp . body ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF exp . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . PLUSPLUS SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MINUSMINUS SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . ASSIGN exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . PLUSEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MINUSEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MULTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . DIVEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINANDEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINOREQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINXOREQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINANDNOTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . RSHIFTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . LSHIFTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MODEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . SHORTASSIGN exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SHORTASSIGN shift to state 207
-- On SEMICOLON shift to state 210
-- On RSHIFTEQ shift to state 211
-- On RSHIFT shift to state 66
-- On PLUSPLUS shift to state 214
-- On PLUSEQ shift to state 216
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULTEQ shift to state 219
-- On MULT shift to state 68
-- On MODEQ shift to state 222
-- On MOD shift to state 74
-- On MINUSMINUS shift to state 225
-- On MINUSEQ shift to state 227
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFTEQ shift to state 230
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On LCURLY shift to state 180
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIVEQ shift to state 233
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOREQ shift to state 236
-- On BINXOR shift to state 78
-- On BINOREQ shift to state 239
-- On BINOR shift to state 80
-- On BINANDNOTEQ shift to state 242
-- On BINANDNOT shift to state 82
-- On BINANDEQ shift to state 245
-- On BINAND shift to state 84
-- On ASSIGN shift to state 248
-- On body shift to state 251

State 207:
simple_statement -> exp SHORTASSIGN . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 208

State 208:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp SHORTASSIGN exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 209
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 209:
simple_statement -> exp SHORTASSIGN exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On IF reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On GO reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp SHORTASSIGN exp SEMICOLON 

State 210:
simple_statement -> exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp SEMICOLON 
-- On IF reduce production simple_statement -> exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp SEMICOLON 
-- On GO reduce production simple_statement -> exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp SEMICOLON 

State 211:
simple_statement -> exp RSHIFTEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 212

State 212:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp RSHIFTEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 213
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 213:
simple_statement -> exp RSHIFTEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp RSHIFTEQ exp SEMICOLON 

State 214:
simple_statement -> exp PLUSPLUS . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 215

State 215:
simple_statement -> exp PLUSPLUS SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On TYPE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On RETURN reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On PRINT reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On PLUS reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On MULT reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On MINUS reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On MAP reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On LPAR reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On LEN reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On IF reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On GOTO reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On GO reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On FOR reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On CHAN reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On CAP reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On BREAK reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On BINAND reduce production simple_statement -> exp PLUSPLUS SEMICOLON 
-- On APPEND reduce production simple_statement -> exp PLUSPLUS SEMICOLON 

State 216:
simple_statement -> exp PLUSEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 217

State 217:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp PLUSEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 218
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 218:
simple_statement -> exp PLUSEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp PLUSEQ exp SEMICOLON 

State 219:
simple_statement -> exp MULTEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 220

State 220:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp MULTEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 221
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 221:
simple_statement -> exp MULTEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp MULTEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp MULTEQ exp SEMICOLON 

State 222:
simple_statement -> exp MODEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 223

State 223:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp MODEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 224
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 224:
simple_statement -> exp MODEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp MODEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp MODEQ exp SEMICOLON 

State 225:
simple_statement -> exp MINUSMINUS . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 226

State 226:
simple_statement -> exp MINUSMINUS SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On TYPE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On RETURN reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On PRINT reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On PLUS reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On MULT reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On MINUS reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On MAP reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On LPAR reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On LEN reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On IF reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On GOTO reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On GO reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On FOR reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On CHAN reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On CAP reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On BREAK reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On BINAND reduce production simple_statement -> exp MINUSMINUS SEMICOLON 
-- On APPEND reduce production simple_statement -> exp MINUSMINUS SEMICOLON 

State 227:
simple_statement -> exp MINUSEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 228

State 228:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp MINUSEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 229
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 229:
simple_statement -> exp MINUSEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp MINUSEQ exp SEMICOLON 

State 230:
simple_statement -> exp LSHIFTEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 231

State 231:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp LSHIFTEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 232
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 232:
simple_statement -> exp LSHIFTEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp LSHIFTEQ exp SEMICOLON 

State 233:
simple_statement -> exp DIVEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 234

State 234:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp DIVEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 235
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 235:
simple_statement -> exp DIVEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp DIVEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp DIVEQ exp SEMICOLON 

State 236:
simple_statement -> exp BINXOREQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 237

State 237:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp BINXOREQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 238
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 238:
simple_statement -> exp BINXOREQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp BINXOREQ exp SEMICOLON 

State 239:
simple_statement -> exp BINOREQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 240

State 240:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp BINOREQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 241
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 241:
simple_statement -> exp BINOREQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp BINOREQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp BINOREQ exp SEMICOLON 

State 242:
simple_statement -> exp BINANDNOTEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 243

State 243:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp BINANDNOTEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 244
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 244:
simple_statement -> exp BINANDNOTEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp BINANDNOTEQ exp SEMICOLON 

State 245:
simple_statement -> exp BINANDEQ . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 246

State 246:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp BINANDEQ exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 247
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 247:
simple_statement -> exp BINANDEQ exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On IF reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On GO reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp BINANDEQ exp SEMICOLON 

State 248:
simple_statement -> exp ASSIGN . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 249

State 249:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
simple_statement -> exp ASSIGN exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 250
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 250:
simple_statement -> exp ASSIGN exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On TYPE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On STRUCT reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On STRINGTYPE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On STRINGLITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On SEMICOLON reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On RUNETYPE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On RUNELITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On RETURN reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On RECEIVE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On RCURLY reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On PRINTLN reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On PRINT reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On PLUS reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On OCTINTLITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On MULT reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On MINUS reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On MAP reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On LSQUARE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On LPAR reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On LEN reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On LCURLY reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On INTTYPE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On INTERFACE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On IF reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On IDENTIFIER reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On HEXINTLITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On GOTO reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On GO reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On FOR reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On FLOATTYPE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On FLOATLITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On FALLTHROUGH reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On DECINTLITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On CONTINUE reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On CHAN reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On CAP reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On BREAK reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On BOOLNOT reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On BINXOR reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On BININTLITERAL reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On BINAND reduce production simple_statement -> exp ASSIGN exp SEMICOLON 
-- On APPEND reduce production simple_statement -> exp ASSIGN exp SEMICOLON 

State 251:
if_statement -> IF exp body . ELSE if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF exp body . ELSE body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF exp body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On ELSE shift to state 252
-- On VAR reduce production if_statement -> IF exp body 
-- On TYPE reduce production if_statement -> IF exp body 
-- On STRUCT reduce production if_statement -> IF exp body 
-- On STRINGTYPE reduce production if_statement -> IF exp body 
-- On STRINGLITERAL reduce production if_statement -> IF exp body 
-- On RUNETYPE reduce production if_statement -> IF exp body 
-- On RUNELITERAL reduce production if_statement -> IF exp body 
-- On RETURN reduce production if_statement -> IF exp body 
-- On RECEIVE reduce production if_statement -> IF exp body 
-- On RCURLY reduce production if_statement -> IF exp body 
-- On PRINTLN reduce production if_statement -> IF exp body 
-- On PRINT reduce production if_statement -> IF exp body 
-- On PLUS reduce production if_statement -> IF exp body 
-- On OCTINTLITERAL reduce production if_statement -> IF exp body 
-- On MULT reduce production if_statement -> IF exp body 
-- On MINUS reduce production if_statement -> IF exp body 
-- On MAP reduce production if_statement -> IF exp body 
-- On LSQUARE reduce production if_statement -> IF exp body 
-- On LPAR reduce production if_statement -> IF exp body 
-- On LEN reduce production if_statement -> IF exp body 
-- On LCURLY reduce production if_statement -> IF exp body 
-- On INTTYPE reduce production if_statement -> IF exp body 
-- On INTERFACE reduce production if_statement -> IF exp body 
-- On IF reduce production if_statement -> IF exp body 
-- On IDENTIFIER reduce production if_statement -> IF exp body 
-- On HEXINTLITERAL reduce production if_statement -> IF exp body 
-- On GOTO reduce production if_statement -> IF exp body 
-- On GO reduce production if_statement -> IF exp body 
-- On FOR reduce production if_statement -> IF exp body 
-- On FLOATTYPE reduce production if_statement -> IF exp body 
-- On FLOATLITERAL reduce production if_statement -> IF exp body 
-- On FALLTHROUGH reduce production if_statement -> IF exp body 
-- On DECINTLITERAL reduce production if_statement -> IF exp body 
-- On CONTINUE reduce production if_statement -> IF exp body 
-- On CHAN reduce production if_statement -> IF exp body 
-- On CAP reduce production if_statement -> IF exp body 
-- On BREAK reduce production if_statement -> IF exp body 
-- On BOOLNOT reduce production if_statement -> IF exp body 
-- On BINXOR reduce production if_statement -> IF exp body 
-- On BININTLITERAL reduce production if_statement -> IF exp body 
-- On BINAND reduce production if_statement -> IF exp body 
-- On APPEND reduce production if_statement -> IF exp body 

State 252:
if_statement -> IF exp body ELSE . if_statement [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
if_statement -> IF exp body ELSE . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On IF shift to state 199
-- On if_statement shift to state 253
-- On body shift to state 254

State 253:
if_statement -> IF exp body ELSE if_statement . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production if_statement -> IF exp body ELSE if_statement 
-- On TYPE reduce production if_statement -> IF exp body ELSE if_statement 
-- On STRUCT reduce production if_statement -> IF exp body ELSE if_statement 
-- On STRINGTYPE reduce production if_statement -> IF exp body ELSE if_statement 
-- On STRINGLITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On RUNETYPE reduce production if_statement -> IF exp body ELSE if_statement 
-- On RUNELITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On RETURN reduce production if_statement -> IF exp body ELSE if_statement 
-- On RECEIVE reduce production if_statement -> IF exp body ELSE if_statement 
-- On RCURLY reduce production if_statement -> IF exp body ELSE if_statement 
-- On PRINTLN reduce production if_statement -> IF exp body ELSE if_statement 
-- On PRINT reduce production if_statement -> IF exp body ELSE if_statement 
-- On PLUS reduce production if_statement -> IF exp body ELSE if_statement 
-- On OCTINTLITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On MULT reduce production if_statement -> IF exp body ELSE if_statement 
-- On MINUS reduce production if_statement -> IF exp body ELSE if_statement 
-- On MAP reduce production if_statement -> IF exp body ELSE if_statement 
-- On LSQUARE reduce production if_statement -> IF exp body ELSE if_statement 
-- On LPAR reduce production if_statement -> IF exp body ELSE if_statement 
-- On LEN reduce production if_statement -> IF exp body ELSE if_statement 
-- On LCURLY reduce production if_statement -> IF exp body ELSE if_statement 
-- On INTTYPE reduce production if_statement -> IF exp body ELSE if_statement 
-- On INTERFACE reduce production if_statement -> IF exp body ELSE if_statement 
-- On IF reduce production if_statement -> IF exp body ELSE if_statement 
-- On IDENTIFIER reduce production if_statement -> IF exp body ELSE if_statement 
-- On HEXINTLITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On GOTO reduce production if_statement -> IF exp body ELSE if_statement 
-- On GO reduce production if_statement -> IF exp body ELSE if_statement 
-- On FOR reduce production if_statement -> IF exp body ELSE if_statement 
-- On FLOATTYPE reduce production if_statement -> IF exp body ELSE if_statement 
-- On FLOATLITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On FALLTHROUGH reduce production if_statement -> IF exp body ELSE if_statement 
-- On DECINTLITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On CONTINUE reduce production if_statement -> IF exp body ELSE if_statement 
-- On CHAN reduce production if_statement -> IF exp body ELSE if_statement 
-- On CAP reduce production if_statement -> IF exp body ELSE if_statement 
-- On BREAK reduce production if_statement -> IF exp body ELSE if_statement 
-- On BOOLNOT reduce production if_statement -> IF exp body ELSE if_statement 
-- On BINXOR reduce production if_statement -> IF exp body ELSE if_statement 
-- On BININTLITERAL reduce production if_statement -> IF exp body ELSE if_statement 
-- On BINAND reduce production if_statement -> IF exp body ELSE if_statement 
-- On APPEND reduce production if_statement -> IF exp body ELSE if_statement 

State 254:
if_statement -> IF exp body ELSE body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production if_statement -> IF exp body ELSE body 
-- On TYPE reduce production if_statement -> IF exp body ELSE body 
-- On STRUCT reduce production if_statement -> IF exp body ELSE body 
-- On STRINGTYPE reduce production if_statement -> IF exp body ELSE body 
-- On STRINGLITERAL reduce production if_statement -> IF exp body ELSE body 
-- On RUNETYPE reduce production if_statement -> IF exp body ELSE body 
-- On RUNELITERAL reduce production if_statement -> IF exp body ELSE body 
-- On RETURN reduce production if_statement -> IF exp body ELSE body 
-- On RECEIVE reduce production if_statement -> IF exp body ELSE body 
-- On RCURLY reduce production if_statement -> IF exp body ELSE body 
-- On PRINTLN reduce production if_statement -> IF exp body ELSE body 
-- On PRINT reduce production if_statement -> IF exp body ELSE body 
-- On PLUS reduce production if_statement -> IF exp body ELSE body 
-- On OCTINTLITERAL reduce production if_statement -> IF exp body ELSE body 
-- On MULT reduce production if_statement -> IF exp body ELSE body 
-- On MINUS reduce production if_statement -> IF exp body ELSE body 
-- On MAP reduce production if_statement -> IF exp body ELSE body 
-- On LSQUARE reduce production if_statement -> IF exp body ELSE body 
-- On LPAR reduce production if_statement -> IF exp body ELSE body 
-- On LEN reduce production if_statement -> IF exp body ELSE body 
-- On LCURLY reduce production if_statement -> IF exp body ELSE body 
-- On INTTYPE reduce production if_statement -> IF exp body ELSE body 
-- On INTERFACE reduce production if_statement -> IF exp body ELSE body 
-- On IF reduce production if_statement -> IF exp body ELSE body 
-- On IDENTIFIER reduce production if_statement -> IF exp body ELSE body 
-- On HEXINTLITERAL reduce production if_statement -> IF exp body ELSE body 
-- On GOTO reduce production if_statement -> IF exp body ELSE body 
-- On GO reduce production if_statement -> IF exp body ELSE body 
-- On FOR reduce production if_statement -> IF exp body ELSE body 
-- On FLOATTYPE reduce production if_statement -> IF exp body ELSE body 
-- On FLOATLITERAL reduce production if_statement -> IF exp body ELSE body 
-- On FALLTHROUGH reduce production if_statement -> IF exp body ELSE body 
-- On DECINTLITERAL reduce production if_statement -> IF exp body ELSE body 
-- On CONTINUE reduce production if_statement -> IF exp body ELSE body 
-- On CHAN reduce production if_statement -> IF exp body ELSE body 
-- On CAP reduce production if_statement -> IF exp body ELSE body 
-- On BREAK reduce production if_statement -> IF exp body ELSE body 
-- On BOOLNOT reduce production if_statement -> IF exp body ELSE body 
-- On BINXOR reduce production if_statement -> IF exp body ELSE body 
-- On BININTLITERAL reduce production if_statement -> IF exp body ELSE body 
-- On BINAND reduce production if_statement -> IF exp body ELSE body 
-- On APPEND reduce production if_statement -> IF exp body ELSE body 

State 255:
statement_list -> statement_list GOTO . IDENTIFIER SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On IDENTIFIER shift to state 256

State 256:
statement_list -> statement_list GOTO IDENTIFIER . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 257

State 257:
statement_list -> statement_list GOTO IDENTIFIER SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On TYPE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On STRUCT reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On STRINGTYPE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On STRINGLITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On RUNETYPE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On RUNELITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On RETURN reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On RECEIVE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On RCURLY reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On PRINTLN reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On PRINT reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On PLUS reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On OCTINTLITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On MULT reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On MINUS reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On MAP reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On LSQUARE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On LPAR reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On LEN reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On LCURLY reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On INTTYPE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On INTERFACE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On IF reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On IDENTIFIER reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On HEXINTLITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On GOTO reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On GO reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On FOR reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On FLOATTYPE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On FLOATLITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On FALLTHROUGH reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On DECINTLITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On CONTINUE reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On CHAN reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On CAP reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On BREAK reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On BOOLNOT reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On BINXOR reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On BININTLITERAL reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On BINAND reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 
-- On APPEND reduce production statement_list -> statement_list GOTO IDENTIFIER SEMICOLON 

State 258:
statement_list -> statement_list GO . exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On exp shift to state 259

State 259:
exp -> exp . PLUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MINUS exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MULT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . DIV exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINXOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BINANDNOT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . RSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LSHIFT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . MOD exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLAND exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . BOOLOR exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . EQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . NEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GT exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . LEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
exp -> exp . GEQ exp [ SEMICOLON RSHIFT PLUS NEQ MULT MOD MINUS LT LSHIFT LEQ GT GEQ EQ DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND ]
statement_list -> statement_list GO exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 260
-- On RSHIFT shift to state 66
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULT shift to state 68
-- On MOD shift to state 74
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOR shift to state 78
-- On BINOR shift to state 80
-- On BINANDNOT shift to state 82
-- On BINAND shift to state 84

State 260:
statement_list -> statement_list GO exp SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On TYPE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On STRUCT reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On STRINGTYPE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On STRINGLITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On RUNETYPE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On RUNELITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On RETURN reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On RECEIVE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On RCURLY reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On PRINTLN reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On PRINT reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On PLUS reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On OCTINTLITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On MULT reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On MINUS reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On MAP reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On LSQUARE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On LPAR reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On LEN reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On LCURLY reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On INTTYPE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On INTERFACE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On IF reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On IDENTIFIER reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On HEXINTLITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On GOTO reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On GO reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On FOR reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On FLOATTYPE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On FLOATLITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On FALLTHROUGH reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On DECINTLITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On CONTINUE reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On CHAN reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On CAP reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On BREAK reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On BOOLNOT reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On BINXOR reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On BININTLITERAL reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On BINAND reduce production statement_list -> statement_list GO exp SEMICOLON 
-- On APPEND reduce production statement_list -> statement_list GO exp SEMICOLON 

State 261:
for_statement -> FOR . option(exp) body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR . simple_statement option(exp) SEMICOLON simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR . SEMICOLON option(exp) SEMICOLON simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR . simple_statement option(exp) SEMICOLON SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR . SEMICOLON option(exp) SEMICOLON SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On SEMICOLON shift to state 262
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PRINTLN shift to state 189
-- On PRINT shift to state 194
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On simple_statement shift to state 270
-- On primary_exp shift to state 59
-- On option(exp) shift to state 277
-- On exp shift to state 279
-- On LCURLY reduce production option(exp) -> 

State 262:
for_statement -> FOR SEMICOLON . option(exp) SEMICOLON simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR SEMICOLON . option(exp) SEMICOLON SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On option(exp) shift to state 263
-- On exp shift to state 185
-- On SEMICOLON reduce production option(exp) -> 

State 263:
for_statement -> FOR SEMICOLON option(exp) . SEMICOLON simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR SEMICOLON option(exp) . SEMICOLON SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 264

State 264:
for_statement -> FOR SEMICOLON option(exp) SEMICOLON . simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR SEMICOLON option(exp) SEMICOLON . SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On SEMICOLON shift to state 265
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PRINTLN shift to state 189
-- On PRINT shift to state 194
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On simple_statement shift to state 267
-- On primary_exp shift to state 59
-- On exp shift to state 269

State 265:
for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On body shift to state 266

State 266:
for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On TYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On STRUCT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On STRINGTYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On STRINGLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On RUNETYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On RUNELITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On RETURN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On RECEIVE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On RCURLY reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On PRINTLN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On PRINT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On PLUS reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On OCTINTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On MULT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On MINUS reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On MAP reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On LSQUARE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On LPAR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On LEN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On LCURLY reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On INTTYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On INTERFACE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On IF reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On IDENTIFIER reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On HEXINTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On GOTO reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On GO reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On FOR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On FLOATTYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On FLOATLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On FALLTHROUGH reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On DECINTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On CONTINUE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On CHAN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On CAP reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On BREAK reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On BOOLNOT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On BINXOR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On BININTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On BINAND reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 
-- On APPEND reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON SEMICOLON body 

State 267:
for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On body shift to state 268

State 268:
for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On TYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On STRUCT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On STRINGTYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On STRINGLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On RUNETYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On RUNELITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On RETURN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On RECEIVE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On RCURLY reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On PRINTLN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On PRINT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On PLUS reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On OCTINTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On MULT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On MINUS reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On MAP reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On LSQUARE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On LPAR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On LEN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On LCURLY reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On INTTYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On INTERFACE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On IF reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On IDENTIFIER reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On HEXINTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On GOTO reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On GO reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On FOR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On FLOATTYPE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On FLOATLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On FALLTHROUGH reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On DECINTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On CONTINUE reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On CHAN reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On CAP reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On BREAK reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On BOOLNOT reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On BINXOR reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On BININTLITERAL reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On BINAND reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 
-- On APPEND reduce production for_statement -> FOR SEMICOLON option(exp) SEMICOLON simple_statement body 

State 269:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
simple_statement -> exp . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . PLUSPLUS SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MINUSMINUS SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . ASSIGN exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . PLUSEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MINUSEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MULTEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . DIVEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINANDEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINOREQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINXOREQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINANDNOTEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . RSHIFTEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . LSHIFTEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MODEQ exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . SHORTASSIGN exp SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SHORTASSIGN shift to state 207
-- On SEMICOLON shift to state 210
-- On RSHIFTEQ shift to state 211
-- On RSHIFT shift to state 66
-- On PLUSPLUS shift to state 214
-- On PLUSEQ shift to state 216
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULTEQ shift to state 219
-- On MULT shift to state 68
-- On MODEQ shift to state 222
-- On MOD shift to state 74
-- On MINUSMINUS shift to state 225
-- On MINUSEQ shift to state 227
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFTEQ shift to state 230
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIVEQ shift to state 233
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOREQ shift to state 236
-- On BINXOR shift to state 78
-- On BINOREQ shift to state 239
-- On BINOR shift to state 80
-- On BINANDNOTEQ shift to state 242
-- On BINANDNOT shift to state 82
-- On BINANDEQ shift to state 245
-- On BINAND shift to state 84
-- On ASSIGN shift to state 248

State 270:
for_statement -> FOR simple_statement . option(exp) SEMICOLON simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR simple_statement . option(exp) SEMICOLON SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On primary_exp shift to state 59
-- On option(exp) shift to state 271
-- On exp shift to state 185
-- On SEMICOLON reduce production option(exp) -> 

State 271:
for_statement -> FOR simple_statement option(exp) . SEMICOLON simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR simple_statement option(exp) . SEMICOLON SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 272

State 272:
for_statement -> FOR simple_statement option(exp) SEMICOLON . simple_statement body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
for_statement -> FOR simple_statement option(exp) SEMICOLON . SEMICOLON body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On STRINGLITERAL shift to state 28
-- On SEMICOLON shift to state 273
-- On RUNETYPE shift to state 23
-- On RUNELITERAL shift to state 29
-- On RECEIVE shift to state 37
-- On PRINTLN shift to state 189
-- On PRINT shift to state 194
-- On PLUS shift to state 38
-- On OCTINTLITERAL shift to state 39
-- On MULT shift to state 40
-- On MINUS shift to state 41
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On LPAR shift to state 42
-- On LEN shift to state 43
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 45
-- On HEXINTLITERAL shift to state 46
-- On FLOATTYPE shift to state 34
-- On FLOATLITERAL shift to state 47
-- On DECINTLITERAL shift to state 48
-- On CHAN shift to state 35
-- On CAP shift to state 49
-- On BOOLNOT shift to state 56
-- On BINXOR shift to state 57
-- On BININTLITERAL shift to state 51
-- On BINAND shift to state 58
-- On APPEND shift to state 52
-- On typeT shift to state 54
-- On simple_statement shift to state 275
-- On primary_exp shift to state 59
-- On exp shift to state 269

State 273:
for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On body shift to state 274

State 274:
for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On TYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On STRUCT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On STRINGTYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On STRINGLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On RUNETYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On RUNELITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On RETURN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On RECEIVE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On RCURLY reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On PRINTLN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On PRINT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On PLUS reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On OCTINTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On MULT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On MINUS reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On MAP reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On LSQUARE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On LPAR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On LEN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On LCURLY reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On INTTYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On INTERFACE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On IF reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On IDENTIFIER reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On HEXINTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On GOTO reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On GO reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On FOR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On FLOATTYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On FLOATLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On FALLTHROUGH reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On DECINTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On CONTINUE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On CHAN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On CAP reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On BREAK reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On BOOLNOT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On BINXOR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On BININTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On BINAND reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 
-- On APPEND reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON SEMICOLON body 

State 275:
for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On body shift to state 276

State 276:
for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On TYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On STRUCT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On STRINGTYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On STRINGLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On RUNETYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On RUNELITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On RETURN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On RECEIVE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On RCURLY reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On PRINTLN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On PRINT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On PLUS reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On OCTINTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On MULT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On MINUS reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On MAP reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On LSQUARE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On LPAR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On LEN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On LCURLY reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On INTTYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On INTERFACE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On IF reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On IDENTIFIER reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On HEXINTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On GOTO reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On GO reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On FOR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On FLOATTYPE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On FLOATLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On FALLTHROUGH reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On DECINTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On CONTINUE reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On CHAN reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On CAP reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On BREAK reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On BOOLNOT reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On BINXOR reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On BININTLITERAL reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On BINAND reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 
-- On APPEND reduce production for_statement -> FOR simple_statement option(exp) SEMICOLON simple_statement body 

State 277:
for_statement -> FOR option(exp) . body [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On LCURLY shift to state 180
-- On body shift to state 278

State 278:
for_statement -> FOR option(exp) body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production for_statement -> FOR option(exp) body 
-- On TYPE reduce production for_statement -> FOR option(exp) body 
-- On STRUCT reduce production for_statement -> FOR option(exp) body 
-- On STRINGTYPE reduce production for_statement -> FOR option(exp) body 
-- On STRINGLITERAL reduce production for_statement -> FOR option(exp) body 
-- On RUNETYPE reduce production for_statement -> FOR option(exp) body 
-- On RUNELITERAL reduce production for_statement -> FOR option(exp) body 
-- On RETURN reduce production for_statement -> FOR option(exp) body 
-- On RECEIVE reduce production for_statement -> FOR option(exp) body 
-- On RCURLY reduce production for_statement -> FOR option(exp) body 
-- On PRINTLN reduce production for_statement -> FOR option(exp) body 
-- On PRINT reduce production for_statement -> FOR option(exp) body 
-- On PLUS reduce production for_statement -> FOR option(exp) body 
-- On OCTINTLITERAL reduce production for_statement -> FOR option(exp) body 
-- On MULT reduce production for_statement -> FOR option(exp) body 
-- On MINUS reduce production for_statement -> FOR option(exp) body 
-- On MAP reduce production for_statement -> FOR option(exp) body 
-- On LSQUARE reduce production for_statement -> FOR option(exp) body 
-- On LPAR reduce production for_statement -> FOR option(exp) body 
-- On LEN reduce production for_statement -> FOR option(exp) body 
-- On LCURLY reduce production for_statement -> FOR option(exp) body 
-- On INTTYPE reduce production for_statement -> FOR option(exp) body 
-- On INTERFACE reduce production for_statement -> FOR option(exp) body 
-- On IF reduce production for_statement -> FOR option(exp) body 
-- On IDENTIFIER reduce production for_statement -> FOR option(exp) body 
-- On HEXINTLITERAL reduce production for_statement -> FOR option(exp) body 
-- On GOTO reduce production for_statement -> FOR option(exp) body 
-- On GO reduce production for_statement -> FOR option(exp) body 
-- On FOR reduce production for_statement -> FOR option(exp) body 
-- On FLOATTYPE reduce production for_statement -> FOR option(exp) body 
-- On FLOATLITERAL reduce production for_statement -> FOR option(exp) body 
-- On FALLTHROUGH reduce production for_statement -> FOR option(exp) body 
-- On DECINTLITERAL reduce production for_statement -> FOR option(exp) body 
-- On CONTINUE reduce production for_statement -> FOR option(exp) body 
-- On CHAN reduce production for_statement -> FOR option(exp) body 
-- On CAP reduce production for_statement -> FOR option(exp) body 
-- On BREAK reduce production for_statement -> FOR option(exp) body 
-- On BOOLNOT reduce production for_statement -> FOR option(exp) body 
-- On BINXOR reduce production for_statement -> FOR option(exp) body 
-- On BININTLITERAL reduce production for_statement -> FOR option(exp) body 
-- On BINAND reduce production for_statement -> FOR option(exp) body 
-- On APPEND reduce production for_statement -> FOR option(exp) body 

State 279:
exp -> exp . PLUS exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MINUS exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MULT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . DIV exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINAND exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINXOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BINANDNOT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . RSHIFT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LSHIFT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . MOD exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLAND exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . BOOLOR exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . EQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . NEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GT exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . LEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
exp -> exp . GEQ exp [ SHORTASSIGN SEMICOLON RSHIFTEQ RSHIFT PLUSPLUS PLUSEQ PLUS NEQ MULTEQ MULT MODEQ MOD MINUSMINUS MINUSEQ MINUS LT LSHIFTEQ LSHIFT LEQ LCURLY GT GEQ EQ DIVEQ DIV BOOLOR BOOLAND BINXOREQ BINXOR BINOREQ BINOR BINANDNOTEQ BINANDNOT BINANDEQ BINAND ASSIGN ]
option(exp) -> exp . [ LCURLY ]
simple_statement -> exp . SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . PLUSPLUS SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MINUSMINUS SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . ASSIGN exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . PLUSEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MINUSEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MULTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . DIVEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINANDEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINOREQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINXOREQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . BINANDNOTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . RSHIFTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . LSHIFTEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . MODEQ exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
simple_statement -> exp . SHORTASSIGN exp SEMICOLON [ STRUCT STRINGTYPE STRINGLITERAL SEMICOLON RUNETYPE RUNELITERAL RECEIVE PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN INTTYPE INTERFACE IDENTIFIER HEXINTLITERAL FLOATTYPE FLOATLITERAL DECINTLITERAL CHAN CAP BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SHORTASSIGN shift to state 207
-- On SEMICOLON shift to state 210
-- On RSHIFTEQ shift to state 211
-- On RSHIFT shift to state 66
-- On PLUSPLUS shift to state 214
-- On PLUSEQ shift to state 216
-- On PLUS shift to state 72
-- On NEQ shift to state 86
-- On MULTEQ shift to state 219
-- On MULT shift to state 68
-- On MODEQ shift to state 222
-- On MOD shift to state 74
-- On MINUSMINUS shift to state 225
-- On MINUSEQ shift to state 227
-- On MINUS shift to state 88
-- On LT shift to state 90
-- On LSHIFTEQ shift to state 230
-- On LSHIFT shift to state 76
-- On LEQ shift to state 92
-- On GT shift to state 94
-- On GEQ shift to state 96
-- On EQ shift to state 98
-- On DIVEQ shift to state 233
-- On DIV shift to state 70
-- On BOOLOR shift to state 103
-- On BOOLAND shift to state 105
-- On BINXOREQ shift to state 236
-- On BINXOR shift to state 78
-- On BINOREQ shift to state 239
-- On BINOR shift to state 80
-- On BINANDNOTEQ shift to state 242
-- On BINANDNOT shift to state 82
-- On BINANDEQ shift to state 245
-- On BINAND shift to state 84
-- On ASSIGN shift to state 248
-- On LCURLY reduce production option(exp) -> exp 

State 280:
statement_list -> statement_list FALLTHROUGH . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 281

State 281:
statement_list -> statement_list FALLTHROUGH SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On TYPE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On STRUCT reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On STRINGTYPE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On STRINGLITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On RUNETYPE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On RUNELITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On RETURN reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On RECEIVE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On RCURLY reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On PRINTLN reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On PRINT reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On PLUS reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On OCTINTLITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On MULT reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On MINUS reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On MAP reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On LSQUARE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On LPAR reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On LEN reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On LCURLY reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On INTTYPE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On INTERFACE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On IF reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On IDENTIFIER reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On HEXINTLITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On GOTO reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On GO reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On FOR reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On FLOATTYPE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On FLOATLITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On FALLTHROUGH reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On DECINTLITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On CONTINUE reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On CHAN reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On CAP reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On BREAK reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On BOOLNOT reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On BINXOR reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On BININTLITERAL reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On BINAND reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 
-- On APPEND reduce production statement_list -> statement_list FALLTHROUGH SEMICOLON 

State 282:
statement_list -> statement_list CONTINUE . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 283

State 283:
statement_list -> statement_list CONTINUE SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On TYPE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On STRUCT reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On STRINGTYPE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On STRINGLITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On RUNETYPE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On RUNELITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On RETURN reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On RECEIVE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On RCURLY reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On PRINTLN reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On PRINT reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On PLUS reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On OCTINTLITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On MULT reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On MINUS reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On MAP reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On LSQUARE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On LPAR reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On LEN reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On LCURLY reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On INTTYPE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On INTERFACE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On IF reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On IDENTIFIER reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On HEXINTLITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On GOTO reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On GO reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On FOR reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On FLOATTYPE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On FLOATLITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On FALLTHROUGH reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On DECINTLITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On CONTINUE reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On CHAN reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On CAP reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On BREAK reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On BOOLNOT reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On BINXOR reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On BININTLITERAL reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On BINAND reduce production statement_list -> statement_list CONTINUE SEMICOLON 
-- On APPEND reduce production statement_list -> statement_list CONTINUE SEMICOLON 

State 284:
statement_list -> statement_list BREAK . SEMICOLON [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On SEMICOLON shift to state 285

State 285:
statement_list -> statement_list BREAK SEMICOLON . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On TYPE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On STRUCT reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On STRINGTYPE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On STRINGLITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On RUNETYPE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On RUNELITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On RETURN reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On RECEIVE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On RCURLY reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On PRINTLN reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On PRINT reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On PLUS reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On OCTINTLITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On MULT reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On MINUS reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On MAP reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On LSQUARE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On LPAR reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On LEN reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On LCURLY reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On INTTYPE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On INTERFACE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On IF reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On IDENTIFIER reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On HEXINTLITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On GOTO reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On GO reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On FOR reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On FLOATTYPE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On FLOATLITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On FALLTHROUGH reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On DECINTLITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On CONTINUE reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On CHAN reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On CAP reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On BREAK reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On BOOLNOT reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On BINXOR reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On BININTLITERAL reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On BINAND reduce production statement_list -> statement_list BREAK SEMICOLON 
-- On APPEND reduce production statement_list -> statement_list BREAK SEMICOLON 

State 286:
statement_list -> statement_list var_decls . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list var_decls 
-- On TYPE reduce production statement_list -> statement_list var_decls 
-- On STRUCT reduce production statement_list -> statement_list var_decls 
-- On STRINGTYPE reduce production statement_list -> statement_list var_decls 
-- On STRINGLITERAL reduce production statement_list -> statement_list var_decls 
-- On RUNETYPE reduce production statement_list -> statement_list var_decls 
-- On RUNELITERAL reduce production statement_list -> statement_list var_decls 
-- On RETURN reduce production statement_list -> statement_list var_decls 
-- On RECEIVE reduce production statement_list -> statement_list var_decls 
-- On RCURLY reduce production statement_list -> statement_list var_decls 
-- On PRINTLN reduce production statement_list -> statement_list var_decls 
-- On PRINT reduce production statement_list -> statement_list var_decls 
-- On PLUS reduce production statement_list -> statement_list var_decls 
-- On OCTINTLITERAL reduce production statement_list -> statement_list var_decls 
-- On MULT reduce production statement_list -> statement_list var_decls 
-- On MINUS reduce production statement_list -> statement_list var_decls 
-- On MAP reduce production statement_list -> statement_list var_decls 
-- On LSQUARE reduce production statement_list -> statement_list var_decls 
-- On LPAR reduce production statement_list -> statement_list var_decls 
-- On LEN reduce production statement_list -> statement_list var_decls 
-- On LCURLY reduce production statement_list -> statement_list var_decls 
-- On INTTYPE reduce production statement_list -> statement_list var_decls 
-- On INTERFACE reduce production statement_list -> statement_list var_decls 
-- On IF reduce production statement_list -> statement_list var_decls 
-- On IDENTIFIER reduce production statement_list -> statement_list var_decls 
-- On HEXINTLITERAL reduce production statement_list -> statement_list var_decls 
-- On GOTO reduce production statement_list -> statement_list var_decls 
-- On GO reduce production statement_list -> statement_list var_decls 
-- On FOR reduce production statement_list -> statement_list var_decls 
-- On FLOATTYPE reduce production statement_list -> statement_list var_decls 
-- On FLOATLITERAL reduce production statement_list -> statement_list var_decls 
-- On FALLTHROUGH reduce production statement_list -> statement_list var_decls 
-- On DECINTLITERAL reduce production statement_list -> statement_list var_decls 
-- On CONTINUE reduce production statement_list -> statement_list var_decls 
-- On CHAN reduce production statement_list -> statement_list var_decls 
-- On CAP reduce production statement_list -> statement_list var_decls 
-- On BREAK reduce production statement_list -> statement_list var_decls 
-- On BOOLNOT reduce production statement_list -> statement_list var_decls 
-- On BINXOR reduce production statement_list -> statement_list var_decls 
-- On BININTLITERAL reduce production statement_list -> statement_list var_decls 
-- On BINAND reduce production statement_list -> statement_list var_decls 
-- On APPEND reduce production statement_list -> statement_list var_decls 

State 287:
statement_list -> statement_list type_decls . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list type_decls 
-- On TYPE reduce production statement_list -> statement_list type_decls 
-- On STRUCT reduce production statement_list -> statement_list type_decls 
-- On STRINGTYPE reduce production statement_list -> statement_list type_decls 
-- On STRINGLITERAL reduce production statement_list -> statement_list type_decls 
-- On RUNETYPE reduce production statement_list -> statement_list type_decls 
-- On RUNELITERAL reduce production statement_list -> statement_list type_decls 
-- On RETURN reduce production statement_list -> statement_list type_decls 
-- On RECEIVE reduce production statement_list -> statement_list type_decls 
-- On RCURLY reduce production statement_list -> statement_list type_decls 
-- On PRINTLN reduce production statement_list -> statement_list type_decls 
-- On PRINT reduce production statement_list -> statement_list type_decls 
-- On PLUS reduce production statement_list -> statement_list type_decls 
-- On OCTINTLITERAL reduce production statement_list -> statement_list type_decls 
-- On MULT reduce production statement_list -> statement_list type_decls 
-- On MINUS reduce production statement_list -> statement_list type_decls 
-- On MAP reduce production statement_list -> statement_list type_decls 
-- On LSQUARE reduce production statement_list -> statement_list type_decls 
-- On LPAR reduce production statement_list -> statement_list type_decls 
-- On LEN reduce production statement_list -> statement_list type_decls 
-- On LCURLY reduce production statement_list -> statement_list type_decls 
-- On INTTYPE reduce production statement_list -> statement_list type_decls 
-- On INTERFACE reduce production statement_list -> statement_list type_decls 
-- On IF reduce production statement_list -> statement_list type_decls 
-- On IDENTIFIER reduce production statement_list -> statement_list type_decls 
-- On HEXINTLITERAL reduce production statement_list -> statement_list type_decls 
-- On GOTO reduce production statement_list -> statement_list type_decls 
-- On GO reduce production statement_list -> statement_list type_decls 
-- On FOR reduce production statement_list -> statement_list type_decls 
-- On FLOATTYPE reduce production statement_list -> statement_list type_decls 
-- On FLOATLITERAL reduce production statement_list -> statement_list type_decls 
-- On FALLTHROUGH reduce production statement_list -> statement_list type_decls 
-- On DECINTLITERAL reduce production statement_list -> statement_list type_decls 
-- On CONTINUE reduce production statement_list -> statement_list type_decls 
-- On CHAN reduce production statement_list -> statement_list type_decls 
-- On CAP reduce production statement_list -> statement_list type_decls 
-- On BREAK reduce production statement_list -> statement_list type_decls 
-- On BOOLNOT reduce production statement_list -> statement_list type_decls 
-- On BINXOR reduce production statement_list -> statement_list type_decls 
-- On BININTLITERAL reduce production statement_list -> statement_list type_decls 
-- On BINAND reduce production statement_list -> statement_list type_decls 
-- On APPEND reduce production statement_list -> statement_list type_decls 

State 288:
statement_list -> statement_list simple_statement . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list simple_statement 
-- On TYPE reduce production statement_list -> statement_list simple_statement 
-- On STRUCT reduce production statement_list -> statement_list simple_statement 
-- On STRINGTYPE reduce production statement_list -> statement_list simple_statement 
-- On STRINGLITERAL reduce production statement_list -> statement_list simple_statement 
-- On RUNETYPE reduce production statement_list -> statement_list simple_statement 
-- On RUNELITERAL reduce production statement_list -> statement_list simple_statement 
-- On RETURN reduce production statement_list -> statement_list simple_statement 
-- On RECEIVE reduce production statement_list -> statement_list simple_statement 
-- On RCURLY reduce production statement_list -> statement_list simple_statement 
-- On PRINTLN reduce production statement_list -> statement_list simple_statement 
-- On PRINT reduce production statement_list -> statement_list simple_statement 
-- On PLUS reduce production statement_list -> statement_list simple_statement 
-- On OCTINTLITERAL reduce production statement_list -> statement_list simple_statement 
-- On MULT reduce production statement_list -> statement_list simple_statement 
-- On MINUS reduce production statement_list -> statement_list simple_statement 
-- On MAP reduce production statement_list -> statement_list simple_statement 
-- On LSQUARE reduce production statement_list -> statement_list simple_statement 
-- On LPAR reduce production statement_list -> statement_list simple_statement 
-- On LEN reduce production statement_list -> statement_list simple_statement 
-- On LCURLY reduce production statement_list -> statement_list simple_statement 
-- On INTTYPE reduce production statement_list -> statement_list simple_statement 
-- On INTERFACE reduce production statement_list -> statement_list simple_statement 
-- On IF reduce production statement_list -> statement_list simple_statement 
-- On IDENTIFIER reduce production statement_list -> statement_list simple_statement 
-- On HEXINTLITERAL reduce production statement_list -> statement_list simple_statement 
-- On GOTO reduce production statement_list -> statement_list simple_statement 
-- On GO reduce production statement_list -> statement_list simple_statement 
-- On FOR reduce production statement_list -> statement_list simple_statement 
-- On FLOATTYPE reduce production statement_list -> statement_list simple_statement 
-- On FLOATLITERAL reduce production statement_list -> statement_list simple_statement 
-- On FALLTHROUGH reduce production statement_list -> statement_list simple_statement 
-- On DECINTLITERAL reduce production statement_list -> statement_list simple_statement 
-- On CONTINUE reduce production statement_list -> statement_list simple_statement 
-- On CHAN reduce production statement_list -> statement_list simple_statement 
-- On CAP reduce production statement_list -> statement_list simple_statement 
-- On BREAK reduce production statement_list -> statement_list simple_statement 
-- On BOOLNOT reduce production statement_list -> statement_list simple_statement 
-- On BINXOR reduce production statement_list -> statement_list simple_statement 
-- On BININTLITERAL reduce production statement_list -> statement_list simple_statement 
-- On BINAND reduce production statement_list -> statement_list simple_statement 
-- On APPEND reduce production statement_list -> statement_list simple_statement 

State 289:
statement_list -> statement_list if_statement . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list if_statement 
-- On TYPE reduce production statement_list -> statement_list if_statement 
-- On STRUCT reduce production statement_list -> statement_list if_statement 
-- On STRINGTYPE reduce production statement_list -> statement_list if_statement 
-- On STRINGLITERAL reduce production statement_list -> statement_list if_statement 
-- On RUNETYPE reduce production statement_list -> statement_list if_statement 
-- On RUNELITERAL reduce production statement_list -> statement_list if_statement 
-- On RETURN reduce production statement_list -> statement_list if_statement 
-- On RECEIVE reduce production statement_list -> statement_list if_statement 
-- On RCURLY reduce production statement_list -> statement_list if_statement 
-- On PRINTLN reduce production statement_list -> statement_list if_statement 
-- On PRINT reduce production statement_list -> statement_list if_statement 
-- On PLUS reduce production statement_list -> statement_list if_statement 
-- On OCTINTLITERAL reduce production statement_list -> statement_list if_statement 
-- On MULT reduce production statement_list -> statement_list if_statement 
-- On MINUS reduce production statement_list -> statement_list if_statement 
-- On MAP reduce production statement_list -> statement_list if_statement 
-- On LSQUARE reduce production statement_list -> statement_list if_statement 
-- On LPAR reduce production statement_list -> statement_list if_statement 
-- On LEN reduce production statement_list -> statement_list if_statement 
-- On LCURLY reduce production statement_list -> statement_list if_statement 
-- On INTTYPE reduce production statement_list -> statement_list if_statement 
-- On INTERFACE reduce production statement_list -> statement_list if_statement 
-- On IF reduce production statement_list -> statement_list if_statement 
-- On IDENTIFIER reduce production statement_list -> statement_list if_statement 
-- On HEXINTLITERAL reduce production statement_list -> statement_list if_statement 
-- On GOTO reduce production statement_list -> statement_list if_statement 
-- On GO reduce production statement_list -> statement_list if_statement 
-- On FOR reduce production statement_list -> statement_list if_statement 
-- On FLOATTYPE reduce production statement_list -> statement_list if_statement 
-- On FLOATLITERAL reduce production statement_list -> statement_list if_statement 
-- On FALLTHROUGH reduce production statement_list -> statement_list if_statement 
-- On DECINTLITERAL reduce production statement_list -> statement_list if_statement 
-- On CONTINUE reduce production statement_list -> statement_list if_statement 
-- On CHAN reduce production statement_list -> statement_list if_statement 
-- On CAP reduce production statement_list -> statement_list if_statement 
-- On BREAK reduce production statement_list -> statement_list if_statement 
-- On BOOLNOT reduce production statement_list -> statement_list if_statement 
-- On BINXOR reduce production statement_list -> statement_list if_statement 
-- On BININTLITERAL reduce production statement_list -> statement_list if_statement 
-- On BINAND reduce production statement_list -> statement_list if_statement 
-- On APPEND reduce production statement_list -> statement_list if_statement 

State 290:
statement_list -> statement_list for_statement . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list for_statement 
-- On TYPE reduce production statement_list -> statement_list for_statement 
-- On STRUCT reduce production statement_list -> statement_list for_statement 
-- On STRINGTYPE reduce production statement_list -> statement_list for_statement 
-- On STRINGLITERAL reduce production statement_list -> statement_list for_statement 
-- On RUNETYPE reduce production statement_list -> statement_list for_statement 
-- On RUNELITERAL reduce production statement_list -> statement_list for_statement 
-- On RETURN reduce production statement_list -> statement_list for_statement 
-- On RECEIVE reduce production statement_list -> statement_list for_statement 
-- On RCURLY reduce production statement_list -> statement_list for_statement 
-- On PRINTLN reduce production statement_list -> statement_list for_statement 
-- On PRINT reduce production statement_list -> statement_list for_statement 
-- On PLUS reduce production statement_list -> statement_list for_statement 
-- On OCTINTLITERAL reduce production statement_list -> statement_list for_statement 
-- On MULT reduce production statement_list -> statement_list for_statement 
-- On MINUS reduce production statement_list -> statement_list for_statement 
-- On MAP reduce production statement_list -> statement_list for_statement 
-- On LSQUARE reduce production statement_list -> statement_list for_statement 
-- On LPAR reduce production statement_list -> statement_list for_statement 
-- On LEN reduce production statement_list -> statement_list for_statement 
-- On LCURLY reduce production statement_list -> statement_list for_statement 
-- On INTTYPE reduce production statement_list -> statement_list for_statement 
-- On INTERFACE reduce production statement_list -> statement_list for_statement 
-- On IF reduce production statement_list -> statement_list for_statement 
-- On IDENTIFIER reduce production statement_list -> statement_list for_statement 
-- On HEXINTLITERAL reduce production statement_list -> statement_list for_statement 
-- On GOTO reduce production statement_list -> statement_list for_statement 
-- On GO reduce production statement_list -> statement_list for_statement 
-- On FOR reduce production statement_list -> statement_list for_statement 
-- On FLOATTYPE reduce production statement_list -> statement_list for_statement 
-- On FLOATLITERAL reduce production statement_list -> statement_list for_statement 
-- On FALLTHROUGH reduce production statement_list -> statement_list for_statement 
-- On DECINTLITERAL reduce production statement_list -> statement_list for_statement 
-- On CONTINUE reduce production statement_list -> statement_list for_statement 
-- On CHAN reduce production statement_list -> statement_list for_statement 
-- On CAP reduce production statement_list -> statement_list for_statement 
-- On BREAK reduce production statement_list -> statement_list for_statement 
-- On BOOLNOT reduce production statement_list -> statement_list for_statement 
-- On BINXOR reduce production statement_list -> statement_list for_statement 
-- On BININTLITERAL reduce production statement_list -> statement_list for_statement 
-- On BINAND reduce production statement_list -> statement_list for_statement 
-- On APPEND reduce production statement_list -> statement_list for_statement 

State 291:
statement_list -> statement_list body . [ VAR TYPE STRUCT STRINGTYPE STRINGLITERAL RUNETYPE RUNELITERAL RETURN RECEIVE RCURLY PRINTLN PRINT PLUS OCTINTLITERAL MULT MINUS MAP LSQUARE LPAR LEN LCURLY INTTYPE INTERFACE IF IDENTIFIER HEXINTLITERAL GOTO GO FOR FLOATTYPE FLOATLITERAL FALLTHROUGH DECINTLITERAL CONTINUE CHAN CAP BREAK BOOLNOT BINXOR BININTLITERAL BINAND APPEND ]
-- On VAR reduce production statement_list -> statement_list body 
-- On TYPE reduce production statement_list -> statement_list body 
-- On STRUCT reduce production statement_list -> statement_list body 
-- On STRINGTYPE reduce production statement_list -> statement_list body 
-- On STRINGLITERAL reduce production statement_list -> statement_list body 
-- On RUNETYPE reduce production statement_list -> statement_list body 
-- On RUNELITERAL reduce production statement_list -> statement_list body 
-- On RETURN reduce production statement_list -> statement_list body 
-- On RECEIVE reduce production statement_list -> statement_list body 
-- On RCURLY reduce production statement_list -> statement_list body 
-- On PRINTLN reduce production statement_list -> statement_list body 
-- On PRINT reduce production statement_list -> statement_list body 
-- On PLUS reduce production statement_list -> statement_list body 
-- On OCTINTLITERAL reduce production statement_list -> statement_list body 
-- On MULT reduce production statement_list -> statement_list body 
-- On MINUS reduce production statement_list -> statement_list body 
-- On MAP reduce production statement_list -> statement_list body 
-- On LSQUARE reduce production statement_list -> statement_list body 
-- On LPAR reduce production statement_list -> statement_list body 
-- On LEN reduce production statement_list -> statement_list body 
-- On LCURLY reduce production statement_list -> statement_list body 
-- On INTTYPE reduce production statement_list -> statement_list body 
-- On INTERFACE reduce production statement_list -> statement_list body 
-- On IF reduce production statement_list -> statement_list body 
-- On IDENTIFIER reduce production statement_list -> statement_list body 
-- On HEXINTLITERAL reduce production statement_list -> statement_list body 
-- On GOTO reduce production statement_list -> statement_list body 
-- On GO reduce production statement_list -> statement_list body 
-- On FOR reduce production statement_list -> statement_list body 
-- On FLOATTYPE reduce production statement_list -> statement_list body 
-- On FLOATLITERAL reduce production statement_list -> statement_list body 
-- On FALLTHROUGH reduce production statement_list -> statement_list body 
-- On DECINTLITERAL reduce production statement_list -> statement_list body 
-- On CONTINUE reduce production statement_list -> statement_list body 
-- On CHAN reduce production statement_list -> statement_list body 
-- On CAP reduce production statement_list -> statement_list body 
-- On BREAK reduce production statement_list -> statement_list body 
-- On BOOLNOT reduce production statement_list -> statement_list body 
-- On BINXOR reduce production statement_list -> statement_list body 
-- On BININTLITERAL reduce production statement_list -> statement_list body 
-- On BINAND reduce production statement_list -> statement_list body 
-- On APPEND reduce production statement_list -> statement_list body 

State 292:
func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR option(typeT) body . [ VAR TYPE FUNC EOF ]
-- On VAR reduce production func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR option(typeT) body 
-- On TYPE reduce production func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR option(typeT) body 
-- On FUNC reduce production func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR option(typeT) body 
-- On EOF reduce production func_decl -> FUNC IDENTIFIER LPAR option(func_params) RPAR option(typeT) body 

State 293:
func_params -> ident_list . typeT [ RPAR COMMA ]
ident_list -> ident_list . COMMA IDENTIFIER [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On COMMA shift to state 145
-- On CHAN shift to state 35
-- On typeT shift to state 294

State 294:
func_params -> ident_list typeT . [ RPAR COMMA ]
-- On RPAR reduce production func_params -> ident_list typeT 
-- On COMMA reduce production func_params -> ident_list typeT 

State 295:
func_params -> func_params . COMMA ident_list typeT [ RPAR COMMA ]
option(func_params) -> func_params . [ RPAR ]
-- On COMMA shift to state 296
-- On RPAR reduce production option(func_params) -> func_params 

State 296:
func_params -> func_params COMMA . ident_list typeT [ RPAR COMMA ]
-- On IDENTIFIER shift to state 11
-- On ident_list shift to state 297

State 297:
func_params -> func_params COMMA ident_list . typeT [ RPAR COMMA ]
ident_list -> ident_list . COMMA IDENTIFIER [ STRUCT STRINGTYPE RUNETYPE MULT MAP LSQUARE INTTYPE INTERFACE IDENTIFIER FLOATTYPE COMMA CHAN ]
-- On STRUCT shift to state 17
-- On STRINGTYPE shift to state 22
-- On RUNETYPE shift to state 23
-- On MULT shift to state 24
-- On MAP shift to state 25
-- On LSQUARE shift to state 27
-- On INTTYPE shift to state 31
-- On INTERFACE shift to state 32
-- On IDENTIFIER shift to state 33
-- On FLOATTYPE shift to state 34
-- On COMMA shift to state 145
-- On CHAN shift to state 35
-- On typeT shift to state 298

State 298:
func_params -> func_params COMMA ident_list typeT . [ RPAR COMMA ]
-- On RPAR reduce production func_params -> func_params COMMA ident_list typeT 
-- On COMMA reduce production func_params -> func_params COMMA ident_list typeT 

State 299:
start -> package_clause import_decls top_level_decls EOF . [ # ]
-- On # reduce production start -> package_clause import_decls top_level_decls EOF 

State 300:
top_level_decls -> top_level_decls var_decls . [ VAR TYPE FUNC EOF ]
-- On VAR reduce production top_level_decls -> top_level_decls var_decls 
-- On TYPE reduce production top_level_decls -> top_level_decls var_decls 
-- On FUNC reduce production top_level_decls -> top_level_decls var_decls 
-- On EOF reduce production top_level_decls -> top_level_decls var_decls 

State 301:
top_level_decls -> top_level_decls type_decls . [ VAR TYPE FUNC EOF ]
-- On VAR reduce production top_level_decls -> top_level_decls type_decls 
-- On TYPE reduce production top_level_decls -> top_level_decls type_decls 
-- On FUNC reduce production top_level_decls -> top_level_decls type_decls 
-- On EOF reduce production top_level_decls -> top_level_decls type_decls 

State 302:
top_level_decls -> top_level_decls func_decl . [ VAR TYPE FUNC EOF ]
-- On VAR reduce production top_level_decls -> top_level_decls func_decl 
-- On TYPE reduce production top_level_decls -> top_level_decls func_decl 
-- On FUNC reduce production top_level_decls -> top_level_decls func_decl 
-- On EOF reduce production top_level_decls -> top_level_decls func_decl 

