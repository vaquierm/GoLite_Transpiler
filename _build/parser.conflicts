
** Conflict (shift/reduce) in state 71.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp BINAND exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 71, looking ahead at RSHIFT, reducing production
** exp -> exp BINAND exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp BINAND exp . 

** In state 71, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp BINAND exp 
           exp . RSHIFT exp 

** Conflict (shift/reduce) in state 69.
** Tokens involved: RSHIFT PLUS MULT MOD MINUS LSHIFT DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp BINANDNOT exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 69, looking ahead at RSHIFT, reducing production
** exp -> exp BINANDNOT exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp BINANDNOT exp . 

** In state 69, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp BINANDNOT exp 
              exp . RSHIFT exp 

** Conflict (shift/reduce) in state 67.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp BINOR exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 67, looking ahead at RSHIFT, reducing production
** exp -> exp BINOR exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp BINOR exp . 

** In state 67, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp BINOR exp 
          exp . RSHIFT exp 

** Conflict (shift/reduce) in state 65.
** Tokens involved: RSHIFT PLUS MULT MOD MINUS LSHIFT DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp BINXOR exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 65, looking ahead at RSHIFT, reducing production
** exp -> exp BINXOR exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp BINXOR exp . 

** In state 65, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp BINXOR exp 
           exp . RSHIFT exp 

** Conflict (shift/reduce) in state 63.
** Tokens involved: RSHIFT PLUS MULT MOD MINUS LSHIFT DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp BOOLAND exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 63, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp BOOLAND exp 
            exp . RSHIFT exp 

** In state 63, looking ahead at RSHIFT, reducing production
** exp -> exp BOOLAND exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp BOOLAND exp . 

** Conflict (shift/reduce) in state 61.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp MINUS exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 61, looking ahead at RSHIFT, reducing production
** exp -> exp MINUS exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp MINUS exp . 

** In state 61, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp MINUS exp 
          exp . RSHIFT exp 

** Conflict (shift/reduce) in state 59.
** Tokens involved: RSHIFT PLUS MULT MOD MINUS LSHIFT DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp BOOLOR exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 59, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp BOOLOR exp 
           exp . RSHIFT exp 

** In state 59, looking ahead at RSHIFT, reducing production
** exp -> exp BOOLOR exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp BOOLOR exp . 

** Conflict (shift/reduce) in state 57.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp DIV exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 57, looking ahead at RSHIFT, reducing production
** exp -> exp DIV exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp DIV exp . 

** In state 57, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp DIV exp 
        exp . RSHIFT exp 

** Conflict (shift/reduce) in state 55.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp MOD exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 55, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp MOD exp 
        exp . RSHIFT exp 

** In state 55, looking ahead at RSHIFT, reducing production
** exp -> exp MOD exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp MOD exp . 

** Conflict (shift/reduce) in state 53.
** Tokens involved: RSHIFT PLUS MULT MOD MINUS LSHIFT DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp LSHIFT exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 53, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp LSHIFT exp 
           exp . RSHIFT exp 

** In state 53, looking ahead at RSHIFT, reducing production
** exp -> exp LSHIFT exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp LSHIFT exp . 

** Conflict (shift/reduce) in state 51.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp MULT exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 51, looking ahead at RSHIFT, reducing production
** exp -> exp MULT exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp MULT exp . 

** In state 51, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp MULT exp 
         exp . RSHIFT exp 

** Conflict (shift/reduce) in state 49.
** Tokens involved: RSHIFT LSHIFT BOOLOR BOOLAND BINXOR BINANDNOT
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp PLUS exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 49, looking ahead at RSHIFT, reducing production
** exp -> exp PLUS exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp PLUS exp . 

** In state 49, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp PLUS exp 
         exp . RSHIFT exp 

** Conflict (shift/reduce) in state 47.
** Tokens involved: RSHIFT PLUS MULT MOD MINUS LSHIFT DIV BOOLOR BOOLAND BINXOR BINOR BINANDNOT BINAND
** The following explanations concentrate on token RSHIFT.
** This state is reached from start after reading:

package_clause import_decls top_level_decls TYPE IDENTIFIER LSQUARE exp RSHIFT exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

start 
package_clause import_decls top_level_decls EOF 
                            top_level_decls type_decls 
                                            TYPE type_spec 
                                                 IDENTIFIER typeT SEMICOLON 
                                                            LSQUARE exp RSQUARE typeT 
                                                                    (?)

** In state 47, looking ahead at RSHIFT, shifting is permitted
** because of the following sub-derivation:

exp RSHIFT exp 
           exp . RSHIFT exp 

** In state 47, looking ahead at RSHIFT, reducing production
** exp -> exp RSHIFT exp 
** is permitted because of the following sub-derivation:

exp RSHIFT exp // lookahead token appears
exp RSHIFT exp . 
